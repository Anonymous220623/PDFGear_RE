<Window x:Class="pdfeditor.Views.AppSettingsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pdfeditor.Views"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:control="clr-namespace:pdfeditor.Controls"
        xmlns:viewmodels="clr-namespace:pdfeditor.ViewModels"
        xmlns:controls="clr-namespace:CommomLib.Controls;assembly=CommomLib"
        xmlns:localprop="clr-namespace:pdfeditor.Properties"
        xmlns:converters="clr-namespace:pdfeditor.Utils.Converters"
        xmlns:comCtrls="clr-namespace:CommomLib.Controls;assembly=CommomLib"
        xmlns:common="clr-namespace:CommomLib.Commom;assembly=CommomLib"
        xmlns:utils="clr-namespace:pdfeditor.Utils"
        ResizeMode="NoResize" Background="{DynamicResource WindowsBackground}"
        TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}"
        Title="{x:Static localprop:Resources.MenuHelperSettingContent}" Height="650" Width="760"
        MinHeight="300">
  <Grid>
    <FrameworkElement.Resources>
      <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      <converters:BooleanToVisibilityReverseConverter x:Key="BooleanToVisibilityReverseConverter"/>
      <Style x:Key="CommonComboboxStyle" TargetType="{x:Type ComboBox}"
             BasedOn="{StaticResource DefaultComboBoxStyle}">
        <Setter Property="Control.Padding" Value="6,4"/>
        <Setter Property="Control.FontSize" Value="12"/>
        <Setter Property="ItemsControl.ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource DefaultComboBoxItemStyle}">
              <Setter Property="Control.FontSize" Value="12"/>
              <Setter Property="Control.Padding" Value="6,4"/>
            </Style>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="GroupHeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
              <StackPanel>
                <ContentPresenter x:Name="HeaderContentPresenter" Margin="0,0,0,8" ContentSource="Header" TextElement.FontSize="12"
                                  TextElement.FontWeight="Bold" HorizontalAlignment="Left"/>
                <ContentPresenter ContentSource="Content"/>
                <Rectangle x:Name="SplitLine" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                           Fill="{DynamicResource MainViewFontSizeBorder}" Height="1" Margin="0,12,0,0"/>
              </StackPanel>
              <ControlTemplate.Triggers>
                <Trigger Value="{x:Null}" Property="HeaderedContentControl.Header">
                  <Setter TargetName="HeaderContentPresenter" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Value="{x:Static sys:String.Empty}" Property="HeaderedContentControl.Header">
                  <Setter TargetName="HeaderContentPresenter" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="local:AppSettingsWindow.HeaderedControlSplitLineVisible" Value="false">
                  <Setter TargetName="SplitLine" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="LabelHeaderControlStyle" TargetType="{x:Type HeaderedContentControl}">
        <Setter Property="UIElement.Focusable" Value="false"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
              <Grid Margin="{TemplateBinding Control.Padding}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="HeaderContentPresenter" Grid.Column="0" MinWidth="112" ContentSource="Header"
                                  TextElement.FontSize="12" HorizontalAlignment="Left"/>
                <ContentPresenter ContentSource="Content" Grid.Column="1"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <SolidColorBrush x:Key="PrimaryDialogButton.Static.Background" Color="#EF5B52"/>
      <SolidColorBrush x:Key="PrimaryDialogButton.Static.Border" Color="#FFEF5B52"/>
      <SolidColorBrush x:Key="PrimaryDialogButton.Static.Foreground" Color="#FFFFFFFF"/>
      <Style x:Key="TabItemInLine" TargetType="{x:Type TabItem}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
        <Setter Property="Control.Background" Value="{DynamicResource HotKeyListHeaderBackground}"/>
        <Setter Property="Control.BorderBrush" Value="#EF5B52"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.Padding" Value="16,0"/>
        <Setter Property="FrameworkElement.Height" Value="32"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TabItem}">
              <Grid Name="templateRoot" SnapsToDevicePixels="true">
                <Border Name="mainBorder" BorderThickness="0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}" Margin="0"/>
                <ContentPresenter Name="contentPresenter" ContentSource="Header" Focusable="false" HorizontalAlignment="Left"
                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" VerticalAlignment="Center"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="TabItem.IsSelected" Value="false">
                  <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="0,0,0,0"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.4"/>
                </Trigger>
                <DataTrigger Value="true" Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}">
                  <Setter Property="Panel.ZIndex" Value="1"/>
                  <Setter TargetName="mainBorder" Property="Border.BorderThickness" Value="3,0,0,0"/>
                  <Setter TargetName="mainBorder" Value="{DynamicResource WindowsBackground}" Property="Border.Background"/>
                  <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#EF5B52"/>
                </DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="TabControlInLine" TargetType="{x:Type TabControl}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
        <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource TabItemInLine}"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TabControl}">
              <Grid Name="templateRoot" Background="Transparent" ClipToBounds="true" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto" MinWidth="120"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <StackPanel Name="headerPanel" Background="{DynamicResource HotKeyListHeaderBackground}"
                            KeyboardNavigation.TabNavigation="Cycle" IsItemsHost="true" Margin="0"/>
                <Border Name="contentPanel" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        BorderThickness="{TemplateBinding Control.BorderThickness}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}" Grid.Column="1">
                  <ContentPresenter Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="0"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Border>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <SolidColorBrush x:Key="CommandButton.Static.Background" Color="#FFFFFFFF"/>
      <SolidColorBrush x:Key="CommandButton.Static.Border" Color="Transparent"/>
      <SolidColorBrush x:Key="CommandButton.Static.Foreground" Color="#FF000000"/>
      <SolidColorBrush x:Key="CommandButton.Disabled.Background" Color="#FFFFFFFF"/>
      <SolidColorBrush x:Key="CommandButton.Disabled.Border" Color="Transparent"/>
      <SolidColorBrush x:Key="CommandButton.Disabled.Foreground" Color="#FF838383"/>
      <Style x:Key="CommandButtonFocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle Margin="-1" SnapsToDevicePixels="false"
                         Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                         RadiusX="2" RadiusY="2" Opacity="0.6"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Geometry x:Key="Geometry_SearchButton">
        F1 M 22.4641,23.7969C 22.1229,23.7969 21.7818,23.6666 21.5212,23.4062L 14.5382,16.4232C 10.9752,19.0716 5.89767,18.7813 2.66461,15.5494C -0.888214,11.9968 -0.888214,6.21674 2.66461,2.66409C 6.21661,-0.888031 11.9952,-0.888031 15.5499,2.66409C 18.7805,5.89645 19.0721,10.9733 16.4237,14.5377L 23.4067,21.5207C 23.9276,22.0417 23.9276,22.8854 23.4067,23.4062C 23.1463,23.6666 22.8051,23.7969 22.4641,23.7969 Z M 9.10663,2.66531C 7.45618,2.66531 5.80649,3.29288 4.54993,4.54941C 3.33249,5.76688 2.66193,7.38544 2.66193,9.10675C 2.66193,10.8281 3.33249,12.4466 4.54993,13.6641C 7.06165,16.1745 11.1502,16.1745 13.6646,13.6641C 16.1763,11.151 16.1763,7.06183 13.6646,4.54941C 12.4081,3.29355 10.757,2.66531 9.10663,2.66531 Z
      </Geometry>
      <SolidColorBrush x:Key="NumberBox.Static.Background" Color="#FFFFFFFF"/>
      <SolidColorBrush x:Key="NumberBox.Static.Border" Color="#D2D2D2"/>
      <SolidColorBrush x:Key="NumberBox.Focus.Border" Color="#FF569DE5"/>
      <SolidColorBrush x:Key="NumberBox.MouseOver.Border" Color="#FF7EB4EA"/>
      <SolidColorBrush x:Key="NumberBox.Arrow.Static.Stroke" Color="#999999"/>
      <SolidColorBrush x:Key="NumberBox.Arrow.MouseOver.Stroke" Color="#333333"/>
      <PathGeometry x:Key="UpArrowPath" Figures="M1,4 L4,1 L7,4"/>
      <PathGeometry x:Key="DownArrowPath" Figures="M1,1 L4,4 L7,1"/>
      <Style x:Key="IntegerNumberBox" TargetType="{x:Type comCtrls:NumberBox}"
             BasedOn="{StaticResource {x:Type comCtrls:NumberBox}}">
        <Setter Property="RangeBase.Maximum" Value="100"/>
        <Setter Property="RangeBase.Minimum" Value="0"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type comCtrls:NumberBox}">
              <Border x:Name="LayoutRoot" Background="{TemplateBinding Control.Background}"
                      BorderBrush="{DynamicResource MainViewFontSizeBorder}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}">
                <FrameworkElement.Resources>
                  <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBoxBase}">
                    <Setter Property="Control.Background" Value="{DynamicResource SignaturePickerBackground}"/>
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource SignaturePickerBackground}"/>
                    <Setter Property="Control.BorderThickness" Value="1"/>
                    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
                    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="UIElement.AllowDrop" Value="true"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                    <Setter Property="InputMethod.IsInputMethodEnabled" Value="false"/>
                    <Setter Property="InputMethod.PreferredImeState" Value="Off"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBoxBase}">
                          <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden"/>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                      <MultiTrigger>
                        <MultiTrigger.Conditions>
                          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="true"/>
                          <Condition Property="TextBoxBase.IsSelectionActive" Value="false"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="TextBoxBase.SelectionBrush"
                                Value="{DynamicResource {x:Static JetSystemColors.InactiveSelectionHighlightBrushKey}}"/>
                      </MultiTrigger>
                    </Style.Triggers>
                  </Style>
                  <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                  <Style x:Key="ArrowButtonStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="Control.Background" Value="{DynamicResource ArrowButtonStyleBackground}"/>
                    <Setter Property="Control.BorderBrush" Value="{DynamicResource ArrowButtonStyleBackground}"/>
                    <Setter Property="Control.Foreground"
                            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
                    <Setter Property="Control.BorderThickness" Value="0"/>
                    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
                    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Control.Padding" Value="0"/>
                    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="UIElement.Focusable" Value="false"/>
                    <Setter Property="Control.Template">
                      <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                          <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                          </Border>
                          <ControlTemplate.Triggers>
                            <Trigger Property="UIElement.IsEnabled" Value="false">
                              <Setter Value="{DynamicResource ArrowButtonStyleDisEnabledBackground}" TargetName="border"
                                      Property="Border.Background"/>
                              <Setter Value="{StaticResource Button.Disabled.Border}" TargetName="border" Property="Border.BorderBrush"/>
                              <Setter Value="{StaticResource Button.Disabled.Foreground}" TargetName="contentPresenter"
                                      Property="TextElement.Foreground"/>
                            </Trigger>
                          </ControlTemplate.Triggers>
                        </ControlTemplate>
                      </Setter.Value>
                    </Setter>
                  </Style>
                </FrameworkElement.Resources>
                <VisualStateManager.VisualStateGroups>
                  <VisualStateGroup x:Name="ArrowStates">
                    <VisualState x:Name="ArrowVisible"/>
                    <VisualState x:Name="ArrowInvisible">
                      <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonContainer" Storyboard.TargetProperty="Visibility" Duration="0">
                          <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                      </Storyboard>
                    </VisualState>
                  </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Grid Background="{DynamicResource ArrowButtonStyleBackground}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TextBox x:Name="PART_TextBox" comCtrls:TextBoxExtensions.IsOnlyNumber="true"
                           Style="{StaticResource TextBoxStyle}"/>
                  <Grid x:Name="ButtonContainer" Column="1" Margin="{TemplateBinding Control.BorderThickness}" Width="8"
                        HorizontalAlignment="Right" VerticalAlignment="Stretch">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="*"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <RepeatButton x:Name="UpButton" Padding="0,0,0,1" Style="{StaticResource ArrowButtonStyle}"
                                  Command="{x:Static Slider.IncreaseLarge}">
                      <Path x:Name="UpArrowPath" Data="{StaticResource UpArrowPath}"
                            Stroke="{DynamicResource NumberBoxPathIsenabledColor}" StrokeThickness="1"/>
                    </RepeatButton>
                    <RepeatButton x:Name="DownButton" Padding="0,1,0,0" Grid.Row="1" Style="{StaticResource ArrowButtonStyle}"
                                  Command="{x:Static Slider.DecreaseLarge}">
                      <Path x:Name="DownArrowPath" Data="{StaticResource DownArrowPath}"
                            Stroke="{DynamicResource NumberBoxPathIsenabledColor}" StrokeThickness="1"/>
                    </RepeatButton>
                  </Grid>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <DataTrigger Value="True" Binding="{Binding ElementName=UpButton, Path=IsMouseOver}">
                  <Setter TargetName="UpArrowPath" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Stroke"/>
                </DataTrigger>
                <DataTrigger Value="True" Binding="{Binding ElementName=DownButton, Path=IsMouseOver}">
                  <Setter TargetName="DownArrowPath" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Stroke"/>
                </DataTrigger>
                <DataTrigger Value="True" Binding="{Binding ElementName=PART_TextBox, Path=IsKeyboardFocused}">
                  <Setter TargetName="LayoutRoot" Value="{StaticResource NumberBox.Focus.Border}"
                          Property="Border.BorderBrush"/>
                </DataTrigger>
                <DataTrigger Value="false" Binding="{Binding ElementName=UpButton, Path=IsEnabled}">
                  <Setter TargetName="UpArrowPath" Value="{DynamicResource NumberBoxPathDisenabledColor}"
                          Property="Shape.Stroke"/>
                </DataTrigger>
                <DataTrigger Value="false" Binding="{Binding ElementName=DownButton, Path=IsEnabled}">
                  <Setter TargetName="DownArrowPath" Value="{DynamicResource NumberBoxPathDisenabledColor}"
                          Property="Shape.Stroke"/>
                </DataTrigger>
                <MultiDataTrigger>
                  <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding ElementName=PART_TextBox, Path=IsKeyboardFocused}" Value="false"/>
                    <Condition Binding="{Binding ElementName=LayoutRoot, Path=IsMouseOver}" Value="True"/>
                  </MultiDataTrigger.Conditions>
                  <Setter TargetName="LayoutRoot" Value="{StaticResource NumberBox.MouseOver.Border}"
                          Property="Border.BorderBrush"/>
                </MultiDataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </FrameworkElement.Resources>
    <TabControl TabStripPlacement="Left" Background="Transparent" ScrollViewer.CanContentScroll="true"
                Foreground="{DynamicResource TextBrushWhiteAndBlack}" Style="{StaticResource TabControlInLine}">
      <TabItem x:Name="Tab_General" ScrollViewer.CanContentScroll="true"
               Header="{x:Static localprop:Resources.SettingWindowTabGeneral}" Background="Transparent">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <ScrollViewer Focusable="false">
            <StackPanel x:Name="ItemsStackPanel" Margin="20" Orientation="Vertical">
              <HeaderedContentControl Header="{x:Static localprop:Resources.AppSettingsLanguageTitle}"
                                      Style="{StaticResource GroupHeaderControlStyle}">
                <StackPanel>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{x:Static localprop:Resources.AppSettingsLanguageRestartTips}" TextWrapping="Wrap"/>
                    <comCtrls:HyperlinkButton Foreground="#EF5B52" Grid.Column="1" Margin="12,0,0,0" Visibility="Collapsed">
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="Auto"/>
                          <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox>
                          <Path Data="M 6.0595,0 C 4.55962,0 3.11974,0.599942 2.03982,1.55987 L 1.91984,0.599942 C 1.91984,0.239971 1.61987,-1.341E-08 1.2599,0.0599857 0.899927,0.0599857 0.659942,0.359971 0.719941,0.719942 L 0.839927,2.33981 C 0.899927,3.11974 1.55987,3.71969 2.33981,3.71969 L 2.45979,3.71969 4.07966,3.59971 C 4.43963,3.59971 4.67962,3.29972 4.61962,2.93975 4.61962,2.57978 4.31965,2.33981 3.95968,2.3998 L 2.75977,2.4598 C 3.65969,1.67985 4.79961,1.1999 5.9995,1.1999 8.6393,1.1999 10.7991,3.35972 10.7991,5.9995 10.7991,8.63929 8.6393,10.7991 5.9995,10.7991 3.35971,10.7991 1.1999,8.6393 1.1999,5.9995 1.1999,5.63953 0.959913,5.39956 0.599942,5.39956 0.239971,5.39956 0,5.63953 0,5.9995 0,9.29924 2.69978,11.999 5.9995,11.999 9.29922,11.999 11.999,9.29924 11.999,5.9995 12.059,2.69978 9.35924,0 6.0595,0 L 6.0595,0 Z"
                                Fill="#EF5B52"/>
                        </Viewbox>
                        <TextBlock Grid.Column="1" Margin="4,0,0,0" Text="Restart"/>
                      </Grid>
                    </comCtrls:HyperlinkButton>
                  </Grid>
                  <Grid Margin="0,12,0,0">
                    <HeaderedContentControl Header="{x:Static localprop:Resources.AppSettingsLanguageHeader}"
                                            Style="{StaticResource LabelHeaderControlStyle}" Padding="0,3,0,0">
                      <ComboBox Grid.Column="1" Style="{StaticResource CommonComboboxStyle}" Margin="0,-3,0,0"
                                HorizontalAlignment="Left" Width="280" ItemsSource="{Binding Languages, Mode=OneWay}"
                                SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}">
                        <ItemsControl.ItemTemplate>
                          <DataTemplate>
                            <TextBlock>
                              <Run Foreground="{DynamicResource TextBrushWhiteAndBlack}" Text="{Binding NativeName, Mode=OneWay}"/>
                              <Run Text=" "/>
                              <Run Foreground="{DynamicResource MainViewTextForeground}" Text="{Binding EnglishName, Mode=OneWay}"/>
                            </TextBlock>
                          </DataTemplate>
                        </ItemsControl.ItemTemplate>
                      </ComboBox>
                    </HeaderedContentControl>
                  </Grid>
                </StackPanel>
              </HeaderedContentControl>
              <HeaderedContentControl Header="{x:Static localprop:Resources.AppSettingsPageDisplay}"
                                      Style="{StaticResource GroupHeaderControlStyle}" Margin="0,12,0,0">
                <HeaderedContentControl Header="{x:Static localprop:Resources.AppSettingsDefaultDisplay}"
                                        Style="{StaticResource LabelHeaderControlStyle}" Padding="0,3,0,0">
                  <ComboBox Style="{StaticResource CommonComboboxStyle}" Margin="0,-3,0,0" HorizontalAlignment="Left"
                            Width="280" ItemsSource="{Binding SizeModes, Mode=OneWay}"
                            SelectedItem="{Binding SelectedSizeMode, Mode=TwoWay}"/>
                </HeaderedContentControl>
              </HeaderedContentControl>
              <HeaderedContentControl Header="{x:Static localprop:Resources.AppSettingsUserInformationTitle}"
                                      Style="{StaticResource GroupHeaderControlStyle}" Margin="0,12,0,0">
                <HeaderedContentControl Header="{x:Static localprop:Resources.AppSettingsAuthorHeader}"
                                        Style="{StaticResource LabelHeaderControlStyle}" Padding="0,3,0,0">
                  <TextBox x:Name="AuthorTextBox" Width="280" Height="24" Margin="0,-3,0,0" MaxLength="128"
                           VerticalContentAlignment="Center" Style="{StaticResource DefaultTextBoxStyle}"/>
                </HeaderedContentControl>
              </HeaderedContentControl>
              <HeaderedContentControl Style="{StaticResource GroupHeaderControlStyle}" Margin="0,12,0,0">
                <Grid Height="Auto">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <TextBlock Text="{x:Static localprop:Resources.WinSettingReminnder}" VerticalAlignment="Center"/>
                  <TextBlock Text="{x:Static localprop:Resources.WinSettingReminnderDesc}" VerticalAlignment="Center"
                             Grid.Row="1" Foreground="{DynamicResource AppSettingsReminnderDesc}" Margin="0,5,0,0"
                             TextWrapping="Wrap"/>
                  <control:ToggleSwitch Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center"
                                        IsChecked="{Binding RecentFilesHelper.IsEnabled, Mode=TwoWay}"/>
                </Grid>
              </HeaderedContentControl>
              <HeaderedContentControl Style="{StaticResource GroupHeaderControlStyle}" Margin="0,12,0,0"
                                      Visibility="{Binding Source={x:Static common:AppIdHelper.HasUserChoiceLatest}, Converter={StaticResource BooleanToVisibilityReverseConverter}}">
                <Grid Height="Auto">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{x:Static localprop:Resources.DefaultAppTitle}" VerticalAlignment="Center"
                             TextWrapping="Wrap"/>
                  <control:ToggleSwitch Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center"
                                        IsChecked="{Binding SetAsDefaultApp, Mode=TwoWay}"/>
                </Grid>
              </HeaderedContentControl>
              <HeaderedContentControl Style="{StaticResource GroupHeaderControlStyle}" Margin="0,12,0,0">
                <Grid Height="Auto">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{x:Static localprop:Resources.WinSettingAISwitch}" VerticalAlignment="Center"
                             TextWrapping="Wrap"/>
                  <control:ToggleSwitch Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center"
                                        IsChecked="{Binding ChatButtonSettings, Mode=TwoWay}"/>
                </Grid>
              </HeaderedContentControl>
              <HeaderedContentControl Style="{StaticResource GroupHeaderControlStyle}" Margin="0,12,0,0">
                <Grid Height="Auto">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{x:Static localprop:Resources.AppsettingsHighlightForm}" VerticalAlignment="Center"
                             TextWrapping="Wrap"/>
                  <control:ToggleSwitch Grid.Column="2" Grid.RowSpan="2" VerticalAlignment="Center"
                                        IsChecked="{Binding IsFillFormHighlightedSettings, Mode=TwoWay}"/>
                </Grid>
              </HeaderedContentControl>
            </StackPanel>
          </ScrollViewer>
          <Grid Row="1">
            <Rectangle x:Name="SplitLine2" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                       Fill="{DynamicResource MainViewFontSizeBorder}" Height="1"/>
            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" Margin="20">
              <Button Content="{x:Static localprop:Resources.WinBtnCancelContent}" IsCancel="true" Margin="0,0,12,0"
                      Style="{StaticResource DialogButtonStyle}"/>
              <Button Click="OKButton_Click" Content="{x:Static localprop:Resources.WinBtnOkContent}"
                      Style="{StaticResource PrimaryDialogButtonStyle}"/>
            </StackPanel>
          </Grid>
        </Grid>
      </TabItem>
      <TabItem Header="{x:Static localprop:Resources.SettingWindowTabShortcut}"
               Foreground="{DynamicResource TextBrushWhiteAndBlack}">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid VerticalAlignment="Center" Margin="20,16">
            <TextBlock Text="{x:Static localprop:Resources.SettingWindowTitleShortcuts}" FontSize="14" FontWeight="Bold"
                       HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <Grid HorizontalAlignment="Right" Visibility="Hidden">
              <TextBox x:Name="SearchTextBox" Width="240" Height="32" HorizontalAlignment="Right"
                       VerticalContentAlignment="Center" Padding="4,6,4,6"
                       BorderBrush="{DynamicResource MainViewFontSizeBorder}" Style="{StaticResource DefaultTextBoxStyle}"
                       comCtrls:TextBoxExtensions.Placeholder="{x:Static localprop:Resources.WinFindPlaceHolderContent}"
                       Text="{Binding SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
              <Button Click="SearchButton_Click" x:Name="SearchButton" MinWidth="48" Height="32" Padding="0"
                      BorderThickness="0" HorizontalAlignment="Right" utils:UIElementExtension.CornerRadius="0,4,4,0"
                      Style="{StaticResource PrimaryDialogButtonStyle}">
                <ContentControl.Content>
                  <Path Width="20" Height="20" Data="{StaticResource Geometry_SearchButton}" Fill="White" Stretch="Fill"/>
                </ContentControl.Content>
              </Button>
            </Grid>
          </Grid>
          <control:HotKeyListView Grid.Row="1" Margin="20,0" BorderBrush="{DynamicResource MainViewFontSizeBorder}"
                                  BorderThickness="1" Background="Transparent" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
          <Grid Row="3" Visibility="Collapsed">
            <Rectangle x:Name="SplitLine" HorizontalAlignment="Stretch" VerticalAlignment="Top"
                       Fill="{DynamicResource MainViewFontSizeBorder}" Height="1"/>
            <Grid Margin="20">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*" MinWidth="10"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="12"/>
                <ColumnDefinition Width="auto"/>
              </Grid.ColumnDefinitions>
              <Button Click="RestoreButton_Click" Content="Restore Default Shortcuts"
                      Style="{StaticResource DialogButtonStyle}"/>
              <Button Grid.Column="2" IsCancel="true" Content="{x:Static localprop:Resources.WinBtnCancelContent}"
                      Style="{StaticResource DialogButtonStyle}"/>
              <Button Click="OKButton_Click" Grid.Column="4" HorizontalAlignment="Right"
                      Content="{x:Static localprop:Resources.WinBtnOkContent}"
                      Style="{StaticResource PrimaryDialogButtonStyle}"/>
            </Grid>
          </Grid>
        </Grid>
      </TabItem>
    </TabControl>
  </Grid>
</Window>