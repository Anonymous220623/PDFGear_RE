<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
                    xmlns:local="clr-namespace:pdfeditor.Controls">
  <local:EmptyTextVisibleConverter x:Key="EmptyTextVisibleConverter"/>
  <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <PathGeometry x:Key="DeleteGeometry"
                Figures="M12.1981 13.0723C12.1981 13.554 11.8056 13.9465 11.324 13.9465H5.02443C4.7925 13.9465 4.57005 13.8544 4.40595 13.6905C4.24184 13.5266 4.14952 13.3043 4.14924 13.0723V3.79057H12.1981V13.0723ZM5.8986 2.22158C5.8986 2.12114 5.97649 2.04223 6.07794 2.04223H10.2807C10.3822 2.04223 10.4601 2.12114 10.4601 2.22158V2.74834H5.8986V2.22158ZM14.8206 2.74834H11.5023V2.22158C11.5023 1.54931 10.954 1 10.2807 1H6.07794C5.75421 1.00081 5.44397 1.12978 5.21506 1.35869C4.98615 1.5876 4.85718 1.89784 4.85637 2.22158V2.74834H1.52675C1.45758 2.74834 1.38908 2.76196 1.32517 2.78843C1.26126 2.81491 1.20319 2.85371 1.15428 2.90262C1.10537 2.95153 1.06657 3.0096 1.0401 3.07351C1.01362 3.13742 1 3.20591 1 3.27509C1 3.34426 1.01362 3.41276 1.0401 3.47666C1.06657 3.54057 1.10537 3.59864 1.15428 3.64755C1.20319 3.69647 1.26126 3.73527 1.32517 3.76174C1.38908 3.78821 1.45758 3.80184 1.52675 3.80184H3.09573V13.0723C3.09573 14.1371 3.95966 15 5.02443 15H11.3229C11.5762 15.0001 11.827 14.9504 12.061 14.8536C12.2949 14.7567 12.5076 14.6148 12.6867 14.4358C12.8658 14.2567 13.0079 14.0442 13.1048 13.8102C13.2018 13.5763 13.2516 13.3256 13.2516 13.0723V3.79057H14.8206C15.1117 3.79057 15.3474 3.55486 15.3474 3.26382C15.3473 3.19521 15.3335 3.12731 15.3068 3.06408C15.2802 3.00086 15.2412 2.94358 15.1921 2.89559C15.1431 2.8476 15.085 2.80986 15.0212 2.78458C14.9574 2.7593 14.8892 2.74698 14.8206 2.74834ZM8.17369 12.3662C8.46474 12.3662 8.70045 12.1305 8.70045 11.8395V6.23373C8.70045 6.09403 8.64495 5.96005 8.54617 5.86126C8.44738 5.76248 8.3134 5.70698 8.1737 5.70698C8.03399 5.70698 7.90001 5.76248 7.80122 5.86126C7.70244 5.96005 7.64694 6.09403 7.64694 6.23373V11.8395C7.64694 12.1305 7.88265 12.3662 8.17369 12.3662ZM5.71926 12.3662C6.01031 12.3662 6.24601 12.1305 6.24601 11.8395V6.23373C6.24601 6.09403 6.19051 5.96005 6.09173 5.86127C5.99294 5.76248 5.85896 5.70699 5.71926 5.70699C5.57956 5.70699 5.44558 5.76248 5.34679 5.86127C5.24801 5.96005 5.19251 6.09403 5.19251 6.23373V11.8395C5.20275 12.1305 5.43846 12.3662 5.71926 12.3662ZM10.6281 12.3662C10.9202 12.3662 11.1559 12.1305 11.1559 11.8395V6.23373C11.1559 6.09389 11.1004 5.95978 11.0015 5.8609C10.9026 5.76202 10.7685 5.70647 10.6286 5.70647C10.4888 5.70647 10.3547 5.76202 10.2558 5.8609C10.1569 5.95978 10.1014 6.09389 10.1014 6.23373V11.8395C10.1014 12.1305 10.3371 12.3662 10.6281 12.3662Z"/>
  <Style x:Key="BtnInfoStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.Height" Value="25"/>
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="TextBlock.Foreground" Value="#3F3F3F"/>
    <Setter Property="TextBlock.FontSize" Value="12"/>
    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <Setter Property="TextBlock.FontSize" Value="12"/>
    <Setter Property="TextBlock.FontStyle" Value="Normal"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Padding" Value="4,0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="false"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="bborder" Property="Border.CornerRadius" Value="3"/>
              <Setter TargetName="bborder" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoUnEnabled}"
                      Property="Border.BorderBrush"/>
              <Setter Value="{DynamicResource MainViewUndoRedoUnEnabled}" Property="TextBlock.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true">
              <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoEnabled}"
                      Property="Border.BorderBrush"/>
              <Setter Value="{DynamicResource MainViewUndoRedoEnabled}" Property="TextBlock.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:CommetTreeView}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CommetTreeView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <ScrollViewer Name="_tv_scrollviewer_" Background="{TemplateBinding Control.Background}" Focusable="false"
                          CanContentScroll="false"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Padding="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
              <Setter TargetName="_tv_scrollviewer_" Property="ScrollViewer.CanContentScroll" Value="true"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.Static.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.Static.Fill" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.MouseOver.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.MouseOver.Fill" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.Static.Checked.Fill" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="CommetTreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#888888"/>
  <PathGeometry x:Key="CommetTreeArrow">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure IsFilled="true" StartPoint="0 0" IsClosed="true">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment Point="0 6"/>
              <LineSegment Point="6 0"/>
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="CommetTreeViewExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Height" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Height="16" Background="Transparent" HorizontalAlignment="Stretch">
            <Border Width="16" Height="16" Padding="5,5,5,5" HorizontalAlignment="Left">
              <Path x:Name="ExpandPath" Fill="{StaticResource CommetTreeViewItem.TreeArrow.Static.Fill}"
                    Stroke="{StaticResource CommetTreeViewItem.TreeArrow.Static.Stroke}"
                    Data="{StaticResource CommetTreeArrow}">
                <UIElement.RenderTransform>
                  <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
                </UIElement.RenderTransform>
              </Path>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Value="{StaticResource CommetTreeViewItem.TreeArrow.Static.Checked.Fill}"
                      Property="Shape.Fill"/>
              <Setter TargetName="ExpandPath" Value="{StaticResource CommetTreeViewItem.TreeArrow.Static.Checked.Stroke}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ExpandPath" Value="{StaticResource CommetTreeViewItem.TreeArrow.MouseOver.Stroke}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="ExpandPath" Value="{StaticResource CommetTreeViewItem.TreeArrow.MouseOver.Fill}"
                      Property="Shape.Fill"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath"
                      Value="{StaticResource CommetTreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="ExpandPath"
                      Value="{StaticResource CommetTreeViewItem.TreeArrow.MouseOver.Checked.Fill}" Property="Shape.Fill"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CommetTreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:CommetTreeViewItem}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Padding" Value="0,4"/>
    <Setter Property="FrameworkElement.Margin" Value="12,0,12,8"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource MainViewSideBarBorder}"/>
    <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource CommetTreeViewItemFocusVisual}"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CommetTreeViewItem}">
          <StackPanel Orientation="Vertical">
            <Border Name="Bd" SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid Margin="{TemplateBinding Control.Padding}">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MinWidth="19" Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="1">
                  <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                    TextElement.Foreground="{DynamicResource MainViewSideBarTextForegorund}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Border>
                <ToggleButton x:Name="Expander" Grid.ColumnSpan="2" HorizontalAlignment="Stretch"
                              Style="{StaticResource CommetTreeViewExpandCollapseToggleStyle}" ClickMode="Press"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Margin="0,4,0,0" Grid.Row="1" Grid.ColumnSpan="12"/>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="true"/>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="TreeViewItem.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="CommetTreeViewChildItemStyle" TargetType="{x:Type local:CommetTreeViewItem}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Padding" Value="12,8"/>
    <Setter Property="FrameworkElement.Margin" Value="0"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource CommetTreeViewItemFocusVisual}"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CommetTreeViewItem}">
          <StackPanel Orientation="Vertical">
            <StackPanel HorizontalAlignment="Stretch">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <CheckBox x:Name="DeleteCheckBox" VerticalAlignment="Top" Style="{DynamicResource DefaultCheckBoxStyle}"
                          Margin="18 8 5 0" IsChecked="{Binding IsChecked}"
                          Visibility="{Binding Path=IsDeleteAreaVisible, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <Border Name="Bd" CornerRadius="4" HorizontalAlignment="Stretch" SnapsToDevicePixels="true"
                        Background="{TemplateBinding Control.Background}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        BorderThickness="{TemplateBinding Control.BorderThickness}" Grid.Column="1"
                        Padding="{TemplateBinding Control.Padding}" MaxHeight="110">
                  <ContentPresenter x:Name="PART_Header" ContentSource="Header" TextElement.Foreground="#888888"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Border>
                <Rectangle HorizontalAlignment="Stretch" Height="0" Grid.Column="1" Fill="#DBDBDB" Margin="0,4"/>
                <Button x:Name="DeleteButton" Width="28" Height="28" Grid.Column="1" Margin="0,4,4,0"
                        HorizontalAlignment="Right" VerticalAlignment="Center" Background="Transparent" BorderThickness="0"
                        Visibility="Collapsed" Style="{StaticResource BtnInfoStyle}"
                        Command="{Binding DeleteSelectedAnnotCmd}">
                  <Path Fill="#888888" StrokeThickness="0" Data="{StaticResource DeleteGeometry}" Width="16" Height="16"
                        HorizontalAlignment="Center" VerticalAlignment="Center"/>
                </Button>
              </Grid>
            </StackPanel>
          </StackPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsSelected" Value="true">
              <Setter Value="{DynamicResource ToolbarButtonCheckedBackground}" TargetName="Bd"
                      Property="Border.Background"/>
              <Setter TargetName="DeleteButton" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="TreeViewItem.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource ToolbarButtonCheckedBackground}" TargetName="Bd"
                      Property="Border.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="TreeViewItem.IsSelected" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource MainViewSideBarAnnotationMouseOver}" TargetName="Bd"
                      Property="Border.Background"/>
              <Setter TargetName="DeleteButton" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger SourceName="DeleteCheckBox" Property="UIElement.Visibility" Value="Visible">
              <Setter TargetName="DeleteButton" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type local:CommetControl}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:CommetControl}">
          <Grid x:Name="RootLayout">
            <local:CommetTreeView x:Name="PART_CommetTreeView" Grid.Row="1" Background="Transparent"
                                  VirtualizingPanel.IsVirtualizing="true">
              <ItemsControl.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding}">
                  <HierarchicalDataTemplate.ItemContainerStyle>
                    <Style TargetType="{x:Type local:CommetTreeViewItem}"
                           BasedOn="{StaticResource CommetTreeViewChildItemStyle}">
                      <Setter Property="TreeViewItem.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    </Style>
                  </HierarchicalDataTemplate.ItemContainerStyle>
                  <HierarchicalDataTemplate.ItemTemplate>
                    <DataTemplate>
                      <StackPanel Orientation="Vertical" HorizontalAlignment="Stretch">
                        <TextBlock FontSize="12" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                                   Text="{Binding Title, Mode=OneTime}"
                                   Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}"/>
                        <TextBlock FontSize="10" Foreground="{DynamicResource MainViewSideBarTextForegorund}" Margin="0,4,0,0"
                                   Text="{Binding Text, Mode=OneTime}"
                                   Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}"/>
                        <TextBlock FontSize="10" Foreground="{DynamicResource MainViewSideBarTextForegorund}" Margin="0,4,0,0"
                                   Text="{Binding ModificationDateText, Mode=OneTime}"
                                   Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}"/>
                        <Border HorizontalAlignment="Stretch" BorderThickness="0" Margin="0,4,0,0" Background="Transparent"
                                Visibility="{Binding ElementName=ContentsText, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}">
                          <ToolTipService.ToolTip>
                            <TextBlock MaxWidth="320" TextWrapping="Wrap" Text="{Binding Contents, Mode=OneTime}"/>
                          </ToolTipService.ToolTip>
                          <TextBlock x:Name="ContentsText" HorizontalAlignment="Left" TextWrapping="Wrap" MaxHeight="40" MaxWidth="180"
                                     FontSize="10" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                                     Text="{Binding Contents, Mode=OneTime}"/>
                        </Border>
                        <Border x:Name="RepliesBorder" Margin="4,4,0,4">
                          <ItemsControl ItemsSource="{Binding Replies}">
                            <ItemsControl.ItemTemplate>
                              <DataTemplate>
                                <Border x:Name="LayoutRoot" HorizontalAlignment="Stretch" Margin="0,4" Padding="4,4,4,8" CornerRadius="4"
                                        Background="Transparent">
                                  <StackPanel Orientation="Vertical">
                                    <TextBlock FontSize="10" Foreground="{DynamicResource MainViewSideBarTextForegorund}"
                                               Text="{Binding Text, Mode=OneTime}"
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}"/>
                                    <TextBlock FontSize="10" Foreground="{DynamicResource MainViewSideBarTextForegorund}" Margin="0,4,0,0"
                                               Text="{Binding ModificationDateText, Mode=OneTime}"
                                               Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}"/>
                                    <Border HorizontalAlignment="Stretch" BorderThickness="0" Margin="0,4,0,0"
                                            Visibility="{Binding ElementName=ContentsText, Path=Text, Converter={StaticResource EmptyTextVisibleConverter}}">
                                      <TextBlock x:Name="ContentsText" TextWrapping="Wrap" FontSize="10"
                                                 Foreground="{DynamicResource TextBrushWhiteAndBlack}" Text="{Binding Contents, Mode=OneTime}"/>
                                    </Border>
                                  </StackPanel>
                                </Border>
                                <DataTemplate.Triggers>
                                  <DataTrigger Value="True" Binding="{Binding ElementName=LayoutRoot, Path=IsMouseOver}">
                                    <Setter TargetName="LayoutRoot" Property="Border.Background" Value="#44FFFFFF"/>
                                  </DataTrigger>
                                </DataTemplate.Triggers>
                              </DataTemplate>
                            </ItemsControl.ItemTemplate>
                          </ItemsControl>
                        </Border>
                      </StackPanel>
                      <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding Replies}" Value="{x:Null}">
                          <Setter TargetName="RepliesBorder" Property="UIElement.Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Value="0" Binding="{Binding Replies.Count}">
                          <Setter TargetName="RepliesBorder" Property="UIElement.Visibility" Value="Collapsed"/>
                        </DataTrigger>
                      </DataTemplate.Triggers>
                    </DataTemplate>
                  </HierarchicalDataTemplate.ItemTemplate>
                  <Grid>
                    <TextBlock>
                      <Run Text="{Binding DisplayPageIndex, Mode=OneTime}"/>
                      <Run>(</Run>
                      <Run Text="{Binding Count, Mode=OneTime}"/>
                      <Run>)</Run>
                    </TextBlock>
                  </Grid>
                </HierarchicalDataTemplate>
              </ItemsControl.ItemTemplate>
              <ItemsControl.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                  <Setter Property="TreeViewItem.IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
              </ItemsControl.ItemContainerStyle>
            </local:CommetTreeView>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>