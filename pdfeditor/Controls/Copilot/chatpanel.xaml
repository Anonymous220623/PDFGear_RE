<UserControl x:Class="pdfeditor.Controls.Copilot.ChatPanel"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:pdfeditor.Controls.Copilot"
             xmlns:model="clr-namespace:pdfeditor.Models.Copilot"
             xmlns:converter="clr-namespace:pdfeditor.Utils.Converters"
             xmlns:commonLibControl="clr-namespace:CommomLib.Controls;assembly=CommomLib"
             xmlns:localprop="clr-namespace:pdfeditor.Properties"
             xmlns:utils="clr-namespace:pdfeditor.Utils"
             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
             Background="{DynamicResource ChatBotGridBackground}">
  <Grid>
    <FrameworkElement.Resources>
      <converter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
      <converter:BooleanToVisibilityReverseConverter x:Key="BooleanToVisibilityReverseConverter"/>
      <converter:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
      <Style x:Key="ChatbotIcon" TargetType="{x:Type Control}">
        <Setter Property="Control.Background" Value="#EF5B52"/>
        <Setter Property="Control.Foreground" Value="#FFFFFF"/>
        <Setter Property="FrameworkElement.Width" Value="36"/>
        <Setter Property="FrameworkElement.Height" Value="36"/>
        <Setter Property="utils:UIElementExtension.CornerRadius" Value="2"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Control}">
              <Border Background="{TemplateBinding Control.Background}"
                      CornerRadius="{TemplateBinding utils:UIElementExtension.CornerRadius}">
                <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Path Data="M 11.227,3.6002 C 11.4326,3.80574 11.7152,3.9342 11.9978,3.9342 L 14.49,3.88282 C 15.0552,3.88282 15.5177,3.42035 15.5177,2.85512 15.5177,2.28988 15.0552,1.82741 14.49,1.82741 L 12.4346,1.85311 11.0986,0.337246 C 10.893,0.106013 10.5847,-0.0224496 10.2764,0.00324291 9.9681,0.0289355 9.68548,0.183091 9.50564,0.440016 L 8.50363,1.8788 7.219,1.8788 C 6.65376,1.8788 6.1913,2.34126 6.1913,2.9065 6.1913,3.47174 6.65377,3.9342 7.219,3.9342 L 9.01748,3.9342 C 9.35148,3.9342 9.68549,3.78005 9.86533,3.49743 L 10.4306,2.70096 11.227,3.6002 M 18.8347,5.13104 C 19.0068,5.13019 19.1785,5.10773 19.3457,5.0639 19.6068,4.99546 19.8519,4.87626 20.0669,4.7131 20.2819,4.54995 20.4627,4.34604 20.599,4.11301 20.7352,3.87998 20.8242,3.6224 20.8609,3.35498 20.8976,3.08756 20.8812,2.81553 20.8128,2.55443 20.7443,2.29332 20.6251,2.04826 20.4619,1.83323 20.2988,1.6182 20.0948,1.43741 19.8618,1.30119 19.6288,1.16495 19.3712,1.07594 19.1038,1.03925 18.8364,1.00255 18.5643,1.0189 18.3032,1.08734 18.0421,1.15578 17.7971,1.27498 17.582,1.43813 17.367,1.60128 17.1862,1.8052 17.05,2.03822 16.9137,2.27125 16.8247,2.52883 16.7881,2.79625 16.7514,3.06368 16.7677,3.3357 16.8362,3.59681 16.883,3.77535 16.9535,3.9464 17.0456,4.10547 L 15.7572,6.31008 C 14.2598,5.51541 12.5522,5.0646 10.739,5.0646 9.01296,5.0646 7.38251,5.47315 5.93805,6.19797 L 4.71212,4.10027 C 4.8005,3.94538 4.86907,3.77836 4.91508,3.60287 5.05331,3.07556 4.9764,2.51493 4.70128,2.04433 4.42616,1.57372 3.97536,1.23168 3.44805,1.09345 2.92073,0.955221 2.36011,1.03213 1.8895,1.30725 1.4189,1.58237 1.07685,2.03317 0.938626,2.56048 0.800398,3.08779 0.877302,3.64842 1.15242,4.11902 1.42755,4.58963 1.87835,4.93167 2.40566,5.0699 2.57819,5.11513 2.75429,5.13733 2.92964,5.13708 L 4.19144,7.29617 C 1.64153,9.26372 -0.000447147,12.3495 -0.000446845,15.8041 L -0.000448396,19.8892 C -0.000448198,22.1501 1.84942,24 4.11036,24 L 17.3677,24 C 19.6543,24 21.4785,22.1501 21.4785,19.8635 L 21.4785,15.8041 C 21.4785,12.4377 19.9193,9.42145 17.48,7.44896 L 18.8347,5.13104 M 2.05496,15.8041 C 2.05496,11.0253 5.93453,7.12 10.739,7.12 15.5435,7.12 19.4231,11.0253 19.4488,15.8041 L 19.4488,19.8635 C 19.4488,20.994 18.5239,21.9189 17.3934,21.9189 L 4.11036,21.9189 C 2.97989,21.9189 2.05496,20.994 2.05496,19.8635 L 2.05496,15.8041 M 13.1799,14.3654 C 13.1799,14.9306 13.6423,15.3931 14.2076,15.3931 14.7728,15.3931 15.2353,14.9306 15.2353,14.3654 L 15.2353,13.3377 C 15.2353,12.7724 14.7728,12.31 14.2076,12.31 13.6423,12.31 13.1799,12.7724 13.1799,13.3377 L 13.1799,14.3654 M 6.24287,14.3654 C 6.24287,14.9306 6.70534,15.3931 7.27058,15.3931 7.83581,15.3931 8.29828,14.9306 8.29828,14.3654 L 8.29828,13.3377 C 8.29828,12.7724 7.83581,12.31 7.27058,12.31 6.70534,12.31 6.24287,12.7724 6.24287,13.3377 L 6.24287,14.3654 M 12.7941,20.3517 L 8.6833,20.3517 C 8.11807,20.3517 7.6556,19.8892 7.6556,19.324 7.6556,18.7588 8.11807,18.2963 8.6833,18.2963 L 12.7941,18.2963 C 13.3593,18.2963 13.8218,18.7588 13.8218,19.324 13.8218,19.8892 13.3593,20.3517 12.7941,20.3517 Z"
                        Fill="{TemplateBinding Control.Foreground}" Margin="7,6"/>
                </Viewbox>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="SendButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Control.Background" Value="#298FEE"/>
        <Setter Property="Control.BorderBrush" Value="#298FEE"/>
        <Setter Property="Control.Foreground" Value="#FFFFFF"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="8"/>
        <Setter Property="FrameworkElement.MinWidth" Value="80"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource DialogButtonFocusVisual}"/>
        <Setter Property="utils:UIElementExtension.CornerRadius" Value="2,2,2,2"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="border" CornerRadius="{TemplateBinding utils:UIElementExtension.CornerRadius}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                <Grid>
                  <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#298FEE"
                             Opacity="0" SnapsToDevicePixels="false"
                             RadiusX="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(utils:UIElementExtension.CornerRadius).TopLeft}"
                             RadiusY="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(utils:UIElementExtension.CornerRadius).BottomLeft}"/>
                  <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter Property="UIElement.Opacity" Value="0.84"/>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed" Value="true">
                  <Setter Property="UIElement.Opacity" Value="0.82"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Value="{StaticResource DialogButton.Disabled.Background}" TargetName="border"
                          Property="Border.Background"/>
                  <Setter Value="{StaticResource DialogButton.Disabled.Border}" TargetName="border"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{StaticResource DialogButton.Disabled.Foreground}" TargetName="contentPresenter"
                          Property="TextElement.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="LikeButtonStyle" TargetType="{x:Type ButtonBase}"
             BasedOn="{StaticResource DialogButtonStyle}">
        <Setter Property="FrameworkElement.MinWidth" Value="0"/>
        <Setter Property="Control.Padding" Value="2"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="FrameworkElement.Width" Value="24"/>
        <Setter Property="FrameworkElement.Height" Value="24"/>
        <Setter Property="utils:UIElementExtension.CornerRadius" Value="4"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="border" CornerRadius="{TemplateBinding utils:UIElementExtension.CornerRadius}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                <Grid>
                  <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#298FEE"
                             Opacity="0" SnapsToDevicePixels="false"
                             RadiusX="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(utils:UIElementExtension.CornerRadius).TopLeft}"
                             RadiusY="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(utils:UIElementExtension.CornerRadius).BottomLeft}"/>
                  <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.04"/>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed" Value="true">
                  <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.12"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ChatbotSmallIcon" TargetType="{x:Type Control}" BasedOn="{StaticResource ChatbotIcon}">
        <Setter Property="FrameworkElement.Width" Value="16"/>
        <Setter Property="FrameworkElement.Height" Value="16"/>
      </Style>
    </FrameworkElement.Resources>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid x:Name="TitleBar" Row="0">
      <TextBlock Foreground="{DynamicResource TextBrushWhiteAndBlack}" Margin="12,8">
        <Run Text="PDFgear Copilot"/>
        <Run Text=" - "/>
        <Run Text="{x:Static localprop:Resources.CopilotPanelHeader}"/>
      </TextBlock>
      <StackPanel Orientation="Horizontal" Margin="8,0" HorizontalAlignment="Right">
        <Button Click="FeedbackButton_Click" x:Name="FeedbackButton" Style="{StaticResource DialogButtonStyle}"
                Background="Transparent" BorderThickness="0" MinWidth="0" MinHeight="0" Width="24" Height="24"
                Padding="3" Margin="0,0,8,0" HorizontalAlignment="Right" VerticalAlignment="Center"
                ToolTip="{x:Static localprop:Resources.MenuHelpContactUsContent}"
                Visibility="{Binding ElementName=ChatPage, Path=Visibility, Mode=OneWay}">
          <Image Source="{DynamicResource ToolBarFeedBackImage}"/>
        </Button>
        <Button Click="CloseButton_Click" Style="{StaticResource DialogButtonStyle}" Background="Transparent"
                BorderThickness="0" MinWidth="0" MinHeight="0" Width="24" Height="24" Padding="6"
                HorizontalAlignment="Right" VerticalAlignment="Center">
          <Viewbox HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Path Data="M 1,1 L 11.5,11.5 M 11.5,1 L 1,11.5 " Stroke="{DynamicResource TextBrushWhiteAndBlack}"
                  StrokeThickness="0.7"/>
          </Viewbox>
        </Button>
      </StackPanel>
      <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Height="1"
                 Fill="{DynamicResource MainViewSideBarBorder}"/>
    </Grid>
    <Grid x:Name="WelcomePage" Row="1" Visibility="Visible">
      <StackPanel Orientation="Vertical" Margin="20,20">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Control Style="{StaticResource ChatbotIcon}" utils:UIElementExtension.CornerRadius="4"/>
          <TextBlock Grid.Row="1" HorizontalAlignment="Center" TextAlignment="Center"
                     Foreground="{DynamicResource ChatBotTitle}" Margin="0,12,0,0">
            <Run Text="{StaticResource ApplicationTitle}"/>
            <Run Text=" - "/>
            <Run Text="{x:Static localprop:Resources.CopilotWelcomePageTitle}"/>
          </TextBlock>
          <TextBlock Grid.Row="2" Text="{x:Static localprop:Resources.CopilotWelcomePageSubTitle}" TextWrapping="Wrap"
                     FontWeight="Bold" Margin="0,4,0,0" HorizontalAlignment="Center" TextAlignment="Center"
                     Foreground="{DynamicResource TextBrushWhiteAndBlack}"/>
        </Grid>
        <TextBlock TextWrapping="Wrap" Margin="0,20,0,0" LineHeight="18" TextAlignment="Center"
                   Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                   Text="{x:Static localprop:Resources.CopilotWelcomePageDesc}"/>
        <StackPanel Orientation="Vertical" Margin="8,20,8,0">
          <Button Click="NavigatedFromWelcome" x:Name="ChatNowButton" Style="{StaticResource DialogButtonStyle}"
                  HorizontalAlignment="Center" Background="#298FEE" Foreground="#FFFFFF" BorderThickness="0"
                  Padding="24,6" Content="{x:Static localprop:Resources.CopilotWelcomePageChatNowButtonText}"/>
          <commonLibControl:ProgressBar x:Name="AnalysisProgressBar" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                                        Background="Transparent" Foreground="#298FEE" Margin="0,4,0,0" Visibility="Collapsed" Minimum="0"
                                        Maximum="1"/>
        </StackPanel>
      </StackPanel>
    </Grid>
    <Grid x:Name="ChatPage" Row="1" Visibility="Visible"
          TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}">
      <Grid.RowDefinitions>
        <RowDefinition Height="*" MinHeight="50"/>
        <RowDefinition Height="5"/>
        <RowDefinition Height="200" MinHeight="100" MaxHeight="500"/>
      </Grid.RowDefinitions>
      <ScrollViewer x:Name="ScrollViewer">
        <ItemsControl x:Name="ChatItemsControl" local:ChatTextControl.HyperlinkClick="ChatItemsControl_HyperlinkClick"
                      Margin="0,0,0,16">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <Border x:Name="LayoutRoot" MinHeight="60" Background="{DynamicResource ChatCopilotBackground}"
                      BorderThickness="0.5" BorderBrush="{DynamicResource MainViewSideBarBorder}">
                <Grid Background="{DynamicResource SolidBrushWhiteAndBlack}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid Margin="10,11,4,0" VerticalAlignment="Top">
                    <Control Style="{StaticResource ChatbotSmallIcon}"
                             Visibility="{Binding IsAssistant, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    <Border Width="16" Height="16" CornerRadius="2" Background="#298FEE"
                            Visibility="{Binding IsUser, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                  </Grid>
                  <StackPanel Orientation="Vertical" Grid.Column="1" Margin="0,12,18,12">
                    <local:ChatTextControl x:Name="TextControl" FontSize="14" Text="{Binding Text}" Error="{Binding Error}"
                                           MessageType="{Binding MessageType.Value}" Loading="{Binding Loading}"
                                           Role="{Binding Role, Mode=OneWay}" Pages="{Binding Pages, Mode=OneWay}"
                                           CopilotHelper="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ChatPanel}, Path=CopilotHelper}"/>
                    <Border Margin="0,4,0,0" Visibility="Collapsed">
                      <Button Style="{StaticResource DialogButtonStyle}" MinWidth="0" Padding="2,1,2,2" BorderThickness="0"
                              Background="Transparent" Width="16" Height="16" HorizontalAlignment="Right"
                              Visibility="{Binding IsUser, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Viewbox>
                          <Path Data="M 4.29197,11 C 4.16397,11 4.03997,10.948 3.94797,10.856 3.84397,10.748 3.79597,10.6 3.81597,10.448 L 4.25197,7.51196 C 4.26797,7.41196 4.31597,7.31596 4.38797,7.24396 L 10.252,1.37996 C 10.524,1.10796 10.884,0.959961 11.272,0.959961 11.656,0.959961 12.02,1.10796 12.292,1.37996 L 13.488,2.57596 C 14.048,3.13596 14.048,4.05196 13.488,4.61196 L 7.62397,10.476 C 7.54797,10.552 7.45197,10.6 7.34397,10.612 L 4.35197,10.992 C 4.33197,10.996 4.31197,11 4.29197,11 M 5.17997,7.81196 L 4.85997,9.96396 7.05997,9.68396 12.808,3.93596 C 12.996,3.74796 12.996,3.44396 12.808,3.25596 L 11.612,2.05996 C 11.52,1.96796 11.4,1.91996 11.272,1.91996 11.144,1.91996 11.024,1.96796 10.932,2.05996 L 5.17997,7.81196 M 9.31367,3.31454 L 9.99247,2.63574 12.2637,4.90694 11.5849,5.58574 9.31367,3.31454 M 4.95215,7.67646 L 5.63095,6.99766 7.90215,9.26886 7.22335,9.94766 4.95215,7.67646 M 11.9519,14.82 L 1.97589,14.82 C 0.935891,14.82 0.0878906,13.972 0.0878906,12.932 L 0.0878906,3.56403 C 0.0878906,2.52403 0.935891,1.67603 1.97589,1.67603 L 6.97989,1.67603 C 7.24389,1.67603 7.45989,1.89203 7.45989,2.15603 7.45989,2.42003 7.24389,2.63603 6.97989,2.63603 L 1.97589,2.63603 C 1.46389,2.63603 1.04789,3.05203 1.04789,3.56403 L 1.04789,12.932 C 1.04789,13.444 1.46389,13.86 1.97589,13.86 L 11.9479,13.86 C 12.4599,13.86 12.8759,13.444 12.8759,12.932 L 12.8759,7.18803 C 12.8759,6.92403 13.0919,6.70803 13.3559,6.70803 13.6199,6.70803 13.8359,6.92403 13.8359,7.18803 L 13.8359,12.932 C 13.8399,13.972 12.9919,14.82 11.9519,14.82 Z"
                                Fill="#C4C4C4"/>
                        </Viewbox>
                      </Button>
                    </Border>
                    <Border Visibility="{Binding Loading, Converter={StaticResource BooleanToVisibilityReverseConverter}}">
                      <Grid Margin="0,12,10,12"
                            Visibility="{Binding NoError, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                                    Visibility="{Binding MessageType.Chat, Converter={StaticResource BooleanToVisibilityConverter}}">
                          <ToggleButton x:Name="LikeButton" Grid.Column="1" Margin="0,0,8,0" Style="{StaticResource LikeButtonStyle}"
                                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked, Converter={StaticResource BooleanReverseConverter}}"
                                        IsChecked="{Binding IsLiked, Mode=OneWay}"
                                        Visibility="{Binding IsLikeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid>
                              <Image Source="/Style/Resources/Like.png"
                                     Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityReverseConverter}}"/>
                              <Image Source="/Style/Resources/Liked.png"
                                     Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </Grid>
                          </ToggleButton>
                          <ToggleButton x:Name="DislikeButton" Grid.Column="1" Style="{StaticResource LikeButtonStyle}"
                                        IsEnabled="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsChecked, Converter={StaticResource BooleanReverseConverter}}"
                                        IsChecked="{Binding IsDisliked, Mode=OneWay}"
                                        Visibility="{Binding IsDislikeButtonVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid>
                              <Image Source="/Style/Resources/Dislike.png"
                                     Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityReverseConverter}}"/>
                              <Image Source="/Style/Resources/Disliked.png"
                                     Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ToggleButton}, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </Grid>
                          </ToggleButton>
                        </StackPanel>
                        <Grid HorizontalAlignment="Right"
                              Visibility="{Binding MessageType.AppAction, Converter={StaticResource BooleanToVisibilityConverter}}">
                          <StackPanel x:Name="AppActionConfirmButtons" Orientation="Horizontal"
                                      Visibility="{Binding AppActionState.None, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Button x:Name="CancelButton" Content="{x:Static localprop:Resources.ChatPanelAppActionCancelButton}"
                                    Padding="12,6" Background="#FFFFFF" Foreground="#298FEE" BorderBrush="#298FEE"
                                    BorderThickness="0.5" MinWidth="0" Style="{StaticResource DialogButtonStyle}" Margin="0,0,12,0"
                                    Visibility="{Binding MaybeNotAppAction, Converter={StaticResource BooleanToVisibilityReverseConverter}}"/>
                            <Button x:Name="NoButton" Content="{x:Static localprop:Resources.ChatPanelAppActionNoButton}"
                                    Padding="12,6" Background="#FFFFFF" Foreground="#298FEE" BorderBrush="#298FEE"
                                    BorderThickness="0.5" MinWidth="0" Style="{StaticResource DialogButtonStyle}" Margin="0,0,12,0"
                                    Visibility="{Binding MaybeNotAppAction, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <Button x:Name="YesButton" Content="{x:Static localprop:Resources.ChatPanelAppActionYesButton}"
                                    Padding="12,6" Background="#298FEE" Foreground="#FFFFFF" BorderBrush="#298FEE"
                                    BorderThickness="0.5" MinWidth="0" Style="{StaticResource DialogButtonStyle}"/>
                          </StackPanel>
                          <Border Padding="12,6" CornerRadius="4" Background="#F3F3F3"
                                  Visibility="{Binding AppActionState.Processing, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                              </Grid.ColumnDefinitions>
                              <commonLibControl:ProgressRing Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="#298FEE"
                                                             Margin="0,0,12,0" IsActive="{Binding AppActionState.Processing}"/>
                              <TextBlock Text="{x:Static localprop:Resources.ChatPanelAppActionProcessingContent}" Foreground="#298FEE"
                                         Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                          </Border>
                          <Border Padding="12,6" CornerRadius="4" Background="#F3F3F3"
                                  Visibility="{Binding AppActionState.Done, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid>
                              <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                              </Grid.ColumnDefinitions>
                              <Viewbox Width="15" Height="10">
                                <Path Data="M 1,5 L 5,9 13,1 " Stroke="#298FEE" StrokeThickness="1" VerticalAlignment="Center"
                                      Margin="0,0,12,0" Fill="{x:Null}"/>
                              </Viewbox>
                              <TextBlock Text="{x:Static localprop:Resources.ChatPanelAppActionDoneContent}" Foreground="#298FEE"
                                         Grid.Column="1" VerticalAlignment="Center"/>
                            </Grid>
                          </Border>
                          <Border Padding="12,6" CornerRadius="4" Background="#F3F3F3"
                                  Visibility="{Binding AppActionState.Canceled, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <TextBlock Text="{x:Static localprop:Resources.ChatPanelAppActionCanceledContent}" Foreground="#757575"
                                       VerticalAlignment="Center"/>
                          </Border>
                        </Grid>
                      </Grid>
                    </Border>
                  </StackPanel>
                </Grid>
              </Border>
              <DataTemplate.Triggers>
                <DataTrigger Value="true" Binding="{Binding IsUser}">
                  <Setter TargetName="LayoutRoot" Property="Border.Background" Value="#FFFFFF"/>
                </DataTrigger>
              </DataTemplate.Triggers>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
      <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0"/>
      <Grid x:Name="InputPanel" Background="{DynamicResource ChatCopilotBackground}" Row="2" MinHeight="100"
            MaxHeight="500" VerticalAlignment="Stretch" Visibility="Visible">
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Top" Height="0.5" Fill="#E8E8E8"/>
        <Button Style="{StaticResource DialogButtonStyle}" Width="24" Height="24" MinWidth="0" Padding="5"
                HorizontalAlignment="Left" Background="Transparent" BorderThickness="0" Margin="6"
                Visibility="Collapsed">
          <Viewbox>
            <Path Data="M 0.855344,3.67295 C -0.0399384,5.30283 -0.23889,7.17756 0.289097,8.96047 1.38333,12.664 5.33941,14.7989 9.08888,13.72 11.4533,13.039 13.2669,11.2331 13.9326,8.89161 13.9402,8.86865 13.9402,8.80744 13.9402,8.75387 13.9402,8.38658 13.6571,8.11876 13.3204,8.11876 13.0526,8.11876 12.8001,8.29475 12.7236,8.53962 12.1956,10.4603 10.7188,11.9524 8.7675,12.511 5.71435,13.391 2.49287,11.654 1.60524,8.63144 1.17673,7.17756 1.33742,5.64717 2.07201,4.31572 2.81425,2.96132 4.04622,1.98186 5.53836,1.55335 7.51257,0.987106 9.66278,1.50744 11.1473,2.90775 L 11.4227,3.16792 9.67043,4.71362 14.0474,5.13448 14.0015,0.84937 12.3869,2.3109 12.1573,2.08134 C 10.7876,0.734591 8.96645,0 7.09936,0 6.43364,0 5.76792,0.0918238 5.10985,0.283123 3.27337,0.81111 1.76593,2.02012 0.855344,3.67295 Z"
                  Fill="#212121"/>
          </Viewbox>
        </Button>
        <TextBlock x:Name="ChatTips" Visibility="Collapsed" Text="" Margin="12,4" VerticalAlignment="Center"
                   Foreground="#888888"/>
        <Grid Row="0" Background="{DynamicResource ChatBotGridBackground}">
          <StackPanel Grid.Row="0" Margin="0,6" Orientation="Horizontal" HorizontalAlignment="Left">
            <commonLibControl:HyperlinkButton Click="ClearHistoryButton_Click" x:Name="ClearHistoryButton"
                                              Content="{x:Static localprop:Resources.CopilotClearHistoryButtonText}" Margin="12,0,0,0"
                                              HorizontalAlignment="Right" Foreground="{DynamicResource ChatClearHistoryButton}" Cursor="Hand"/>
            <commonLibControl:HyperlinkButton Click="ExportButton_Click" x:Name="ExportButton"
                                              Content="{x:Static localprop:Resources.CopilotExportHistoryButtonText}" Margin="12,0,0,0"
                                              HorizontalAlignment="Right" Foreground="#298FEE" Cursor="Hand"/>
            <commonLibControl:HyperlinkButton Click="StopButton_Click" x:Name="StopButton"
                                              Content="{x:Static localprop:Resources.CopilotStopResponseButtonText}" Visibility="Collapsed"
                                              Margin="12,0,0,0" HorizontalAlignment="Right" Foreground="#298FEE" Cursor="Hand"/>
          </StackPanel>
        </Grid>
        <TextBox PreviewKeyDown="UserInputTextBox_PreviewKeyDown" x:Name="UserInputTextBox" AcceptsReturn="true"
                 AcceptsTab="true" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Grid.Row="1" Padding="4,4"
                 Margin="8,0" BorderThickness="0" FontSize="14" TextWrapping="Wrap"
                 MaxWidth="{Binding ElementName=InputPanel, Path=ActualWidth, Mode=OneWay}">
          <FrameworkElement.Resources>
            <VisualBrush x:Key="HintText" TileMode="None" Opacity="0.2" Stretch="None" AlignmentY="Top" AlignmentX="Left">
              <VisualBrush.Visual>
                <Label Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                       Content="{x:Static localprop:Resources.CopilotTextBoxPlaceholder}"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </FrameworkElement.Resources>
          <FrameworkElement.Style>
            <Style TargetType="{x:Type TextBox}">
              <Setter Property="Control.Background" Value="{DynamicResource ChatCopilotBackground}"/>
              <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
              <Style.Triggers>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter Property="Control.Background" Value="{DynamicResource ChatCopilotBackground}"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="UIElement.IsKeyboardFocused" Value="false"/>
                    <Condition Property="TextBox.Text" Value=""/>
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Control.Background" Value="{StaticResource HintText}"/>
                  </MultiTrigger.Setters>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="UIElement.IsKeyboardFocused" Value="false"/>
                    <Condition Property="TextBox.Text" Value="{x:Null}"/>
                  </MultiTrigger.Conditions>
                  <MultiTrigger.Setters>
                    <Setter Property="Control.Background" Value="{StaticResource HintText}"/>
                  </MultiTrigger.Setters>
                </MultiTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </TextBox>
        <local:ChatBubble x:Name="ChatEmptytip" Grid.RowSpan="2" IsHitTestVisible="false" IsTabStop="false" MinWidth="180"
                          MaxWidth="300" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 2 3"
                          HorizontalContentAlignment="Center">
          <TextBlock Text="{x:Static localprop:Resources.CopilotTextBoxEmtpy}" HorizontalAlignment="Center"
                     TextWrapping="Wrap"/>
        </local:ChatBubble>
        <Button Click="SendButton_Click" x:Name="SendButton" Style="{StaticResource SendButtonStyle}" Height="24"
                MinWidth="0" Padding="16,0" Grid.Row="2" HorizontalAlignment="Right" Margin="12,8"
                Content="{x:Static localprop:Resources.CopilotSendButtonText}"
                ToolTip="{x:Static localprop:Resources.CopilotSendButtonToolTips}"/>
      </Grid>
      <Grid x:Name="Overchance" Row="2" MinHeight="100" MaxHeight="500" VerticalAlignment="Stretch"
            Visibility="Collapsed">
        <Grid.RowDefinitions>
          <RowDefinition Height="60"/>
          <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{x:Static localprop:Resources.CopilotMessagesOverRemainingTips}" Foreground="#000000"
                   Grid.Row="0" Block.TextAlignment="Center" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                   Margin="12" TextWrapping="Wrap"/>
        <TextBlock Text="{x:Static localprop:Resources.CopilotMessagesOverRemainingTipsContent}" Foreground="#666666"
                   Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="12" TextWrapping="Wrap"/>
      </Grid>
    </Grid>
  </Grid>
</UserControl>