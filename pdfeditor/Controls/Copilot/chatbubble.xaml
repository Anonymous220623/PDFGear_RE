<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pdfeditor.Controls.Copilot"
                    xmlns:localprop="clr-namespace:pdfeditor.Properties">
  <Style TargetType="{x:Type local:ChatBubble}">
    <Setter Property="Control.Background" Value="{DynamicResource SolidBrushWhiteAndBlack}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="10"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ChatBubble}">
          <Grid x:Name="LayoutRoot">
            <UIElement.RenderTransform>
              <ScaleTransform CenterX="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.BackgroundScaleTransformCenterX}"
                              CenterY="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.BackgroundScaleTransformCenterY}"/>
            </UIElement.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="VisibleStates">
                <VisualState x:Name="VisibleState"/>
                <VisualState x:Name="InvisibleState">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="VisibleState" To="InvisibleState">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15"
                                       From="1" To="0"/>
                      <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15"
                                       From="1" To="0"/>
                      <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" Duration="0:0:0.15" From="1"
                                       To="0"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility" Duration="0:0:0.15">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                        <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="{x:Static Visibility.Collapsed}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="InvisibleState" To="VisibleState">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" Duration="0:0:0.15"
                                       From="0" To="1"/>
                      <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                       Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" Duration="0:0:0.15"
                                       From="0" To="1"/>
                      <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" Duration="0:0:0.15" From="0"
                                       To="1"/>
                      <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility" Duration="0">
                        <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                      </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Canvas>
              <Path x:Name="BackgroundPath" Fill="{TemplateBinding Control.Background}"
                    Stroke="{TemplateBinding Control.BorderBrush}" HorizontalAlignment="Left" VerticalAlignment="Top"
                    Visibility="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.BackgroundPathVisibility}">
                <Path.Data>
                  <CombinedGeometry GeometryCombineMode="Union">
                    <CombinedGeometry.Geometry1>
                      <PathGeometry Figures="M 0 10 L -10 0 L 10 0 Z">
                        <Geometry.Transform>
                          <TranslateTransform X="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.TriangleGeometryTranslateX}"
                                              Y="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.TriangleGeometryTranslateY}"/>
                        </Geometry.Transform>
                      </PathGeometry>
                    </CombinedGeometry.Geometry1>
                    <CombinedGeometry.Geometry2>
                      <RectangleGeometry RadiusX="10" RadiusY="10"
                                         Rect="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.RectGeometryRect}"/>
                    </CombinedGeometry.Geometry2>
                  </CombinedGeometry>
                </Path.Data>
              </Path>
            </Canvas>
            <Border x:Name="ContentBorder" Margin="0,0,0,10" Padding="{TemplateBinding Control.Padding}">
              <ContentPresenter ContentSource="Content"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>