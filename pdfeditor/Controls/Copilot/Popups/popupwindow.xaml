<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pdfeditor.Controls.Copilot.Popups">
  <SolidColorBrush x:Key="WindowCaptionBackground" Color="#33000000"/>
  <SolidColorBrush x:Key="WindowCaptionBackgroundDisabled" Color="#33000000"/>
  <SolidColorBrush x:Key="WindowCaptionForeground" Color="#FF000000"/>
  <SolidColorBrush x:Key="WindowCaptionForegroundDisabled" Color="#99000000"/>
  <SolidColorBrush x:Key="WindowCaptionButtonBackgroundPointerOver" Color="#33000000"/>
  <SolidColorBrush x:Key="WindowCaptionButtonBackgroundPressed" Color="#66000000"/>
  <SolidColorBrush x:Key="WindowCaptionButtonStroke" Color="#FF000000"/>
  <SolidColorBrush x:Key="WindowCaptionButtonStrokePointerOver" Color="#FF000000"/>
  <SolidColorBrush x:Key="WindowCaptionButtonStrokePressed" Color="#FF000000"/>
  <SolidColorBrush x:Key="WindowCaptionButtonBackground" Color="Transparent"/>
  <SolidColorBrush x:Key="CloseButtonBackgroundPointerOver" Color="#e81123"/>
  <SolidColorBrush x:Key="CloseButtonStrokePointerOver" Color="White"/>
  <SolidColorBrush x:Key="CloseButtonBackgroundPressed" Color="#f1707a"/>
  <SolidColorBrush x:Key="CloseButtonStrokePressed" Color="Black"/>
  <Style x:Key="WindowCaptionButton" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="{StaticResource WindowCaptionForeground}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="FrameworkElement.Width" Value="40"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{StaticResource WindowCaptionButtonBackgroundPointerOver}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource WindowCaptionForeground}" TargetName="contentPresenter"
                      Property="TextElement.Foreground"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{StaticResource WindowCaptionButtonBackgroundPressed}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource WindowCaptionForeground}" TargetName="contentPresenter"
                      Property="TextElement.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="WindowCaptionCloseButton" TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource WindowCaptionButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <Path x:Name="Path" StrokeThickness="1" Stroke="{TemplateBinding Control.Foreground}"
                  Data="M 0,0 L 10,10 M 10,0 L 0,10 " Stretch="Fill" UseLayoutRounding="true" Width="9" Height="9"
                  StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{StaticResource CloseButtonBackgroundPointerOver}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource CloseButtonStrokePointerOver}" TargetName="Path" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{StaticResource CloseButtonBackgroundPressed}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource CloseButtonStrokePressed}" TargetName="Path" Property="Shape.Stroke"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="WindowCaptionPinButton" TargetType="{x:Type ToggleButton}"
         BasedOn="{StaticResource WindowCaptionButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <Grid Margin="0,0,0,0.3">
              <Viewbox Height="12">
                <Path x:Name="Path" StrokeThickness="0.8" Stroke="{TemplateBinding Control.Foreground}"
                      Data="F1 M 19.667969,8.330078 C 19.667969,8.707683 19.563801,9.052734 19.355469,9.365234 19.147135,9.677734 18.867188,9.9056 18.515625,10.048828 L 13.291016,12.226562 C 13.20638,12.259115 13.13151,12.30957 13.066406,12.37793 13.001302,12.446289 12.955729,12.526042 12.929688,12.617188 L 11.220703,18.300781 C 11.181641,18.43099 11.108398,18.538412 11.000977,18.623047 10.893555,18.707682 10.768229,18.75 10.625,18.75 10.455729,18.75 10.309244,18.68815 10.185547,18.564453 L 6.25,14.628906 0.878906,20 0,20 0,19.111328 5.371094,13.75 1.435547,9.814453 C 1.311849,9.690756 1.25,9.541016 1.25,9.365234 1.25,9.241537 1.285807,9.127604 1.357422,9.023438 1.429036,8.919271 1.523438,8.844401 1.640625,8.798828 L 7.431641,6.484375 C 7.58138,6.425781 7.692057,6.318359 7.763672,6.162109 L 9.931641,1.386719 C 10.08138,1.048178 10.3125,0.779623 10.625,0.581055 10.9375,0.382488 11.279297,0.283203 11.650391,0.283203 11.897786,0.283203 12.137044,0.332031 12.368164,0.429688 12.599283,0.527344 12.799479,0.660809 12.96875,0.830078 L 19.121094,6.992188 C 19.296875,7.16797 19.431965,7.373048 19.526367,7.607422 19.620768,7.841798 19.667969,8.082684 19.667969,8.330078 M 11.650391,1.533203 C 11.520182,1.533203 11.404622,1.565756 11.303711,1.630859 11.202799,1.695965 11.126302,1.787109 11.074219,1.904297 L 8.90625,6.679688 C 8.808594,6.901042 8.671875,7.094727 8.496094,7.260742 8.320312,7.426758 8.118489,7.555339 7.890625,7.646484 L 2.988281,9.599609 10.322266,16.943359 11.728516,12.265625 C 11.806641,11.998698 11.941731,11.761068 12.133789,11.552734 12.325846,11.344401 12.548827,11.184896 12.802734,11.074219 L 18.037109,8.886719 C 18.154297,8.834636 18.24707,8.758139 18.31543,8.657227 18.383789,8.556315 18.417969,8.440756 18.417969,8.310547 18.417969,8.134766 18.359375,7.988281 18.242188,7.871094 L 12.080078,1.71875 C 11.95638,1.595053 11.81315,1.533203 11.650391,1.533203 Z"
                      Stretch="Fill" UseLayoutRounding="true" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
              </Viewbox>
              <Viewbox Height="12">
                <Path x:Name="ToggledPath" Visibility="Collapsed" StrokeThickness="0.8"
                      Stroke="{TemplateBinding Control.Foreground}"
                      Data="F1 M 20.009766,19.375 C 20.009766,19.544271 19.947916,19.690756 19.824219,19.814453 19.70052,19.93815 19.554035,20 19.384766,20 19.208984,20 19.059244,19.93815 18.935547,19.814453 L 12.65625,13.535156 11.220703,18.300781 C 11.181641,18.43099 11.108398,18.538412 11.000977,18.623047 10.893555,18.707682 10.768229,18.75 10.625,18.75 10.455729,18.75 10.309244,18.68815 10.185547,18.564453 L 6.25,14.628906 0.878906,20 0,20 0,19.111328 5.371094,13.75 1.435547,9.814453 C 1.311849,9.690756 1.25,9.541016 1.25,9.365234 1.25,9.235026 1.285807,9.121094 1.357422,9.023438 1.429036,8.925781 1.523438,8.850912 1.640625,8.798828 L 6.123047,7.001953 0.185547,1.064453 C 0.061849,0.940756 0,0.794271 0,0.625 0,0.449219 0.063477,0.301107 0.19043,0.180664 0.317383,0.060223 0.465495,0 0.634766,0 0.804036,0 0.950521,0.06185 1.074219,0.185547 L 19.824219,18.935547 C 19.947916,19.059244 20.009766,19.205729 20.009766,19.375 M 9.033203,6.376953 L 8.095703,5.439453 9.931641,1.386719 C 10.08138,1.048178 10.310872,0.779623 10.620117,0.581055 10.929361,0.382488 11.269531,0.283203 11.640625,0.283203 11.88802,0.283203 12.127277,0.330404 12.358398,0.424805 12.589518,0.519207 12.792969,0.654297 12.96875,0.830078 L 19.121094,6.992188 C 19.296875,7.16797 19.431965,7.373048 19.526367,7.607422 19.620768,7.841798 19.667969,8.082684 19.667969,8.330078 19.667969,8.701172 19.562174,9.044597 19.350586,9.360352 19.138996,9.676107 18.860676,9.9056 18.515625,10.048828 L 14.414062,11.757812 13.457031,10.800781 18.037109,8.886719 C 18.154297,8.834636 18.24707,8.758139 18.31543,8.657227 18.383789,8.556315 18.417969,8.440756 18.417969,8.310547 18.417969,8.134766 18.359375,7.988281 18.242188,7.871094 L 12.080078,1.71875 C 12.027994,1.666668 11.959635,1.622723 11.875,1.586914 11.790364,1.551107 11.712239,1.533203 11.640625,1.533203 11.516927,1.533203 11.404622,1.567383 11.303711,1.635742 11.202799,1.704102 11.126302,1.793621 11.074219,1.904297 M 2.988281,9.599609 L 10.322266,16.943359 11.650391,12.529297 7.080078,7.958984 Z"
                      Stretch="Fill" UseLayoutRounding="true" StrokeEndLineCap="Round" StrokeStartLineCap="Round"/>
              </Viewbox>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{StaticResource WindowCaptionButtonBackgroundPointerOver}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource WindowCaptionForeground}" TargetName="Path" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{StaticResource WindowCaptionButtonBackgroundPressed}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource WindowCaptionForeground}" TargetName="Path" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Path" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="ToggledPath" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:PopupWindow}">
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Window}">
          <Border>
            <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Margin="2.8,1,2.8,0">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="32"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid x:Name="Titlebar">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid x:Name="WindowIcon" Width="16" Height="16" Margin="8,0,0,0" VerticalAlignment="Center"
                        Background="Transparent" WindowChrome.IsHitTestVisibleInChrome="true">
                    <Image x:Name="WindowIconImage" HorizontalAlignment="Center"/>
                    <Image x:Name="WindowDefaultIconImage" HorizontalAlignment="Center" Visibility="Collapsed"/>
                  </Grid>
                  <TextBlock x:Name="TitleTextBlock" Grid.Column="1" Text="{TemplateBinding Window.Title}"
                             VerticalAlignment="Center" Margin="6,1,0,0"
                             FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
                             FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"
                             FontStyle="{DynamicResource {x:Static SystemFonts.CaptionFontStyleKey}}"
                             FontWeight="{DynamicResource {x:Static SystemFonts.CaptionFontWeightKey}}"
                             TextDecorations="{DynamicResource {x:Static SystemFonts.CaptionFontTextDecorationsKey}}"
                             Foreground="{StaticResource WindowCaptionForeground}"/>
                  <ToggleButton x:Name="PinButton" Grid.Column="3" AutomationProperties.Name="Pin"
                                AutomationProperties.AutomationId="_PinButton" Style="{StaticResource WindowCaptionPinButton}"
                                IsChecked="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Topmost}"/>
                  <Button x:Name="CloseButton" Grid.Column="4" AutomationProperties.Name="Close"
                          AutomationProperties.AutomationId="_CloseButton"
                          Command="{x:Static SystemCommands.CloseWindowCommand}"
                          Style="{StaticResource WindowCaptionCloseButton}"/>
                </Grid>
                <AdornerDecorator Grid.Row="1">
                  <ContentPresenter/>
                </AdornerDecorator>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Window.IsActive" Value="false">
              <Setter Value="{StaticResource WindowCaptionForegroundDisabled}" TargetName="TitleTextBlock"
                      Property="TextBlock.Foreground"/>
              <Setter Value="{StaticResource WindowCaptionForegroundDisabled}" TargetName="PinButton"
                      Property="Control.Foreground"/>
              <Setter Value="{StaticResource WindowCaptionForegroundDisabled}" TargetName="CloseButton"
                      Property="Control.Foreground"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="Window.Icon">
              <Setter TargetName="WindowIconImage" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="WindowDefaultIconImage" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="FrameworkElement.FlowDirection" Value="RightToLeft">
              <Setter TargetName="border" Property="FrameworkElement.Margin" Value="0,1,6.8,0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>