<Window x:Class="pdfeditor.Controls.Signature.SignatureCreateWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pdfeditor.Controls.Signature"
        xmlns:localprop="clr-namespace:pdfeditor.Properties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
        xmlns:Themes="clr-namespace:CommomLib.Controls;assembly=CommomLib"
        Background="{DynamicResource WindowsBackground}"
        Title="{x:Static localprop:Resources.WinSignatureTitle}" SizeToContent="WidthAndHeight"
        WindowStartupLocation="CenterScreen" ResizeMode="NoResize">
  <FrameworkElement.Resources>
    <Style x:Key="btnStyle" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.Width" Value="80"/>
      <Setter Property="FrameworkElement.Height" Value="32"/>
      <Setter Property="Control.BorderBrush" Value="#EEEEEE"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="bborder" Property="Border.BorderBrush" Value="#EEEEEE"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnStyle2" TargetType="{x:Type Button}">
      <Setter Property="Control.BorderBrush" Value="#D2D2D2"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="bborder" SnapsToDevicePixels="true" Background="Transparent">
              <Grid>
                <Grid.ColumnDefinitions>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                </Grid.RowDefinitions>
                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  Margin="{TemplateBinding FrameworkElement.Margin}" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                <Rectangle Name="rect" StrokeDashArray="4 4" Opacity="1" Stroke="{TemplateBinding Control.BorderBrush}"
                           Width="{Binding ElementName=contentPresenter, Path=ActualWidth}"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="rect" Property="Shape.Stroke" Value="#000000"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
    <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.AllowDrop" Value="true"/>
      <Setter Property="FrameworkElement.MinWidth" Value="0"/>
      <Setter Property="FrameworkElement.MinHeight" Value="0"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                          HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Themes:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                         MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <Border x:Name="dropDownBorder"
                    BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                    Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                  <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <Border x:Name="border" Background="{StaticResource TextBox.Static.Background}"
                Margin="{TemplateBinding Control.BorderThickness}">
          <TextBox x:Name="PART_EditableTextBox"
                   HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                   Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                   VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                   IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
        </Border>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="UIElement.IsEnabled" Value="false">
          <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
        </Trigger>
        <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
          <Setter Property="Control.Foreground" Value="Black"/>
        </Trigger>
        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
          <Setter TargetName="shadow" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
          <Setter TargetName="shadow" Property="Themes:SystemDropShadowChrome.Color" Value="#71000000"/>
        </Trigger>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource DefaultComboBoxStyle}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Control.Padding" Value="6,3,5,3"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
      <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Style.Triggers>
        <Trigger Property="ComboBox.IsEditable" Value="true">
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Padding" Value="2"/>
          <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="ComboBoxStyle2" TargetType="{x:Type ComboBox}"
           BasedOn="{StaticResource DefaultComboBoxStyle}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="Control.Padding" Value="6,0,5,0"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
      <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
      <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
      <Style.Triggers>
        <Trigger Property="ComboBox.IsEditable" Value="true">
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Padding" Value="2"/>
          <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
    <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  </FrameworkElement.Resources>
  <Grid x:Name="SingtruePanel">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="440"/>
      <ColumnDefinition Width="20"/>
    </Grid.ColumnDefinitions>
    <Grid Column="1">
      <Grid.RowDefinitions>
        <RowDefinition Height="32"/>
        <RowDefinition Height="10"/>
        <RowDefinition Height="240"/>
        <RowDefinition Height="20"/>
        <RowDefinition Height="32"/>
        <RowDefinition Height="20"/>
      </Grid.RowDefinitions>
      <ListBox SelectionChanged="Menus_SelectionChanged" x:Name="Menus" Grid.Row="0" HorizontalAlignment="Left"
               VerticalAlignment="Center" VerticalContentAlignment="Bottom" DockPanel.Dock="Left"
               Background="{DynamicResource WindowsBackground}"
               Foreground="{DynamicResource TextBrushWhiteAndBlack}"
               ScrollViewer.VerticalScrollBarVisibility="Disabled"
               ItemContainerStyle="{StaticResource ListBoxItemMenuBarStyle}" BorderThickness="0"
               Margin="-12,0,0,0" ItemsSource="{Binding MainMenus}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel Orientation="Horizontal" IsItemsHost="true"/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2"/>
              </Grid.RowDefinitions>
              <TextBlock Padding="0" FontSize="12" Text="{Binding Title}"/>
              <Border Grid.Row="1" BorderThickness="0,2,0,0" BorderBrush="#CA393B" MaxWidth="50"
                      Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ListBox>
      <ComboBox x:Name="WriteStrokeWidths" Grid.Row="0" Style="{DynamicResource ComboBoxStyle1}" Width="120"
                Height="28" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                VerticalContentAlignment="Center" IsEditable="false" FontSize="12" IsTextSearchEnabled="false"
                Foreground="{DynamicResource MainViewBtnInfoStyleText}">
        <ItemsControl.ItemContainerStyle>
          <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="FrameworkElement.Height" Value="32"/>
          </Style>
        </ItemsControl.ItemContainerStyle>
        <FrameworkElement.Resources>
          <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="White"/>
          <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
        </FrameworkElement.Resources>
        <sys:String>1pt</sys:String>
        <sys:String>2pt</sys:String>
        <sys:String>3pt</sys:String>
        <sys:String>4pt</sys:String>
      </ComboBox>
      <ComboBox SelectionChanged="FontFamilysCtrl_SelectionChanged" x:Name="FontFamilysCtrl" Grid.Row="0"
                Style="{DynamicResource ComboBoxStyle2}" Width="120" Height="28" HorizontalAlignment="Right"
                VerticalAlignment="Bottom" VerticalContentAlignment="Center" IsEditable="false" FontSize="12"
                IsTextSearchEnabled="false" Foreground="{DynamicResource MainViewBtnInfoStyleText}">
        <ItemsControl.ItemContainerStyle>
          <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="FrameworkElement.Height" Value="32"/>
          </Style>
        </ItemsControl.ItemContainerStyle>
        <FrameworkElement.Resources>
          <SolidColorBrush x:Key="{x:Static SystemColors.WindowBrushKey}" Color="White"/>
          <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>
        </FrameworkElement.Resources>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Label Foreground="{DynamicResource MainViewBtnInfoStyleText}" FontSize="12"
                   Content="{Binding DisplayName}" FontFamily="{Binding Name}"/>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ComboBox>
      <Border x:Name="body" Grid.Row="2" Background="{DynamicResource SignaturebodyBackground}"
              BorderThickness="1" BorderBrush="{DynamicResource SignaturebodyBorder}">
        <Grid>
          <Canvas x:Name="PathCtrl" ZIndex="0" Width="{Binding ElementName=body, Path=Width}"
                  Height="{Binding ElementName=body, Path=Height}">
            <InkCanvas Loaded="inkCanvas_Loaded" x:Name="inkCanvas" HorizontalAlignment="Center" Canvas.Left="0"
                       Canvas.Top="0" Background="Transparent" Width="{Binding ElementName=PathCtrl, Path=ActualWidth}"
                       Height="{Binding ElementName=PathCtrl, Path=ActualHeight}"/>
          </Canvas>
          <Button Click="PictureCtrl_Click" x:Name="PictureCtrl" MinWidth="120" Width="Auto" Height="32"
                  Style="{StaticResource btnStyle2}" Background="Transparent" Panel.ZIndex="1">
            <StackPanel Orientation="Horizontal" Margin="15,0,15,0">
              <Image Source="/Style/Resources/Annonate/addpic.png" Width="16" Height="16"/>
              <TextBlock Foreground="{DynamicResource TextBrushWhiteAndBlack}" Margin="10,1,0,0" FontSize="12"
                         Text="{x:Static localprop:Resources.WinSignatureBtnAddPictureContent}" VerticalAlignment="Center"/>
            </StackPanel>
          </Button>
          <Image x:Name="showPicture" Width="300" Height="200" Stretch="Uniform" Visibility="Collapsed"/>
          <TextBox x:Name="TypeWriterCtrl" FontSize="96" HorizontalContentAlignment="Left" TextAlignment="Center"
                   Background="{DynamicResource SignaturebodyBackground}" VerticalAlignment="Center"
                   VerticalContentAlignment="Center" MaxLength="48" Width="440" BorderThickness="0" Height="160"/>
          <Button Click="btnClear_Click" x:Name="btnClear" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                  Style="{StaticResource btnStyle}" Background="Transparent" BorderBrush="Transparent"
                  Visibility="{Binding ClearVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
            <StackPanel Orientation="Horizontal">
              <Image Source="/Style/Resources/Annonate/clear.png" Width="20" Height="20"/>
              <TextBlock Foreground="#000000" Margin="1,1,0,0" FontSize="12"
                         Text="{x:Static localprop:Resources.WinSignatureBtnClearContent}" VerticalAlignment="Center"/>
            </StackPanel>
          </Button>
        </Grid>
      </Border>
      <StackPanel Grid.Row="0" Orientation="Horizontal">
        <Grid Margin="0,8,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="420"/>
            <ColumnDefinition Width="20"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="ckbRemoveBg" Grid.Column="0" MaxWidth="280" Width="Auto"
                    Foreground="{DynamicResource TextBrushWhiteAndBlack}" VerticalAlignment="Center" IsChecked="False"
                    Style="{DynamicResource DefaultCheckBoxStyle}"
                    Content="{x:Static localprop:Resources.WinCreateSignatureRemoveBackground}"
                    HorizontalAlignment="Right"/>
          <Image x:Name="imgHelp" Grid.Column="1" Source="/Style/Resources/Signature/RemoveBghelp.png"
                 ToolTip="{x:Static localprop:Resources.WinCreateSignatureRemoveBackgroundToolTip}"
                 ToolTipService.Placement="Left" Width="12" Height="12" HorizontalAlignment="Center"
                 Margin="2,0,2,0"/>
        </Grid>
      </StackPanel>
      <StackPanel Grid.Row="4" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
        <Button x:Name="btnCancel" Style="{StaticResource DialogButtonStyle}"
                Content="{x:Static localprop:Resources.WinBtnCancelContent}" FontSize="12" IsCancel="true"/>
        <Button x:Name="btnOk" Style="{StaticResource PrimaryDialogButtonStyle}"
                Content="{x:Static localprop:Resources.WinBtnOkContent}" Margin="10,0,0,0" FontSize="12"
                IsDefault="true"
                IsEnabled="{Binding ClearVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}"/>
      </StackPanel>
    </Grid>
  </Grid>
</Window>