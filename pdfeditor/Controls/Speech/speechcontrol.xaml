<Window x:Class="pdfeditor.Controls.Speech.SpeechControl"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:localprop="clr-namespace:pdfeditor.Properties"
        xmlns:local="clr-namespace:pdfeditor.Controls.Speech"
        Background="{DynamicResource MainViewToolBarBackground}"
        Foreground="{DynamicResource TextBrushWhiteAndBlack}"
        Title="{x:Static localprop:Resources.ReadWinTitle}" Height="113" Width="260" ResizeMode="NoResize">
  <FrameworkElement.Resources>
    <Style x:Key="btnstyle" TargetType="{x:Type ButtonBase}">
      <Style.Setters>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="TextBlock.Foreground" Value="#000000"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="bborder" Property="Border.CornerRadius" Value="3"/>
                  <Setter TargetName="bborder" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                          Property="Border.BorderBrush"/>
                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoUnEnabled}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource MainViewUndoRedoUnEnabled}" Property="TextBlock.Foreground"/>
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="true">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoEnabled}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style.Setters>
    </Style>
    <Style x:Key="CulBtnStyle" TargetType="{x:Type ButtonBase}">
      <Style.Setters>
        <Setter Property="Control.Background" Value="{DynamicResource MainViewToolBarBackground}"/>
        <Setter Property="Control.BorderThickness" Value="1 0 1 1"/>
        <Setter Property="Control.FontSize" Value="12"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition MinWidth="100"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock Grid.Column="0" Text="î³ˆ" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15"
                             FontFamily="Segoe MDL2 Assets"/>
                  <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="false" HorizontalAlignment="Left"
                                    Margin="4 0 0 0" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="bborder" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                          Property="Border.BorderBrush"/>
                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoUnEnabled}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource MainViewUndoRedoUnEnabled}" Property="TextBlock.Foreground"/>
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="true">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewSideBarBorder}" Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style.Setters>
    </Style>
    <Style x:Key="btnstyle2" TargetType="{x:Type ButtonBase}">
      <Style.Setters>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="TextBlock.FontFamily" Value="Segoe UI"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="bborder" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                          Property="Border.BorderBrush"/>
                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoUnEnabled}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource MainViewUndoRedoUnEnabled}" Property="TextBlock.Foreground"/>
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="true">
                  <Setter TargetName="bborder" Property="Border.CornerRadius" Value="50"/>
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoEnabled}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style.Setters>
    </Style>
    <Style x:Key="listboxStyle" TargetType="{x:Type ListBoxItem}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
      <Setter Property="Control.Background" Value="{DynamicResource MainViewToolBarBackground}"/>
      <Setter Property="FrameworkElement.Height" Value="28"/>
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.BorderThickness" Value="0"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListBoxItem}">
            <Grid x:Name="backgrid" Background="{DynamicResource MainViewToolBarBackground}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition MinWidth="100"/>
              </Grid.ColumnDefinitions>
              <TextBlock x:Name="checkedTextblock" Text="ï„¾" VerticalAlignment="Center" FontSize="20"
                         FontFamily="Segoe MDL2 Assets" Visibility="Hidden" Grid.Column="0"/>
              <Border x:Name="border" Grid.Column="1" CornerRadius="0" Margin="2"
                      BorderBrush="{DynamicResource TextBrushWhiteAndBlack}">
                <ContentPresenter HorizontalAlignment="Stretch"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Margin="0,0,0,0"/>
              </Border>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ListBoxItem.IsSelected" Value="true">
                <Setter Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Control.Foreground"/>
                <Setter TargetName="backgrid" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                        Property="Panel.Background"/>
                <Setter TargetName="border" Value="{DynamicResource MainViewSideBarBorder}" Property="Border.BorderBrush"/>
                <Setter TargetName="checkedTextblock" Property="UIElement.Visibility" Value="Visible"/>
              </Trigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="UIElement.IsMouseOver" Value="true"/>
                  <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                  <Setter Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Control.Foreground"/>
                  <Setter TargetName="backgrid" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                          Property="Panel.Background"/>
                  <Setter TargetName="border" Value="{DynamicResource MainViewSideBarBorder}" Property="Border.BorderBrush"/>
                </MultiTrigger.Setters>
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <DropShadowEffect x:Key="UnhoverThumbEffect" BlurRadius="1" ShadowDepth="0" Opacity="0.8" Color="#EF5B52"/>
    <DropShadowEffect x:Key="HoverThumbEffect" BlurRadius="1" ShadowDepth="0" Opacity="0.5" Color="#EF5B52"/>
    <DropShadowEffect x:Key="DragThumbEffect" BlurRadius="2" ShadowDepth="0" Opacity="1" Color="#EF5B52"/>
    <Style x:Key="DefaultSliderThumbStyle" TargetType="{x:Type Thumb}">
      <Setter Property="FrameworkElement.Width" Value="14"/>
      <Setter Property="FrameworkElement.Height" Value="14"/>
      <Setter Property="Control.Background" Value="{DynamicResource MainViewToolBarBackground}"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Ellipse Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                     Fill="{TemplateBinding Control.Background}" StrokeThickness="2" Stroke="#EF5B52"
                     Effect="{StaticResource UnhoverThumbEffect}"/>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Value="{StaticResource HoverThumbEffect}" Property="UIElement.Effect"/>
                <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
              </Trigger>
              <Trigger Property="Thumb.IsDragging" Value="true">
                <Setter Value="{StaticResource DragThumbEffect}" Property="UIElement.Effect"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="DefaultLeftRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Background="#EF5B52" Height="3"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="SliderIncreaseButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Width="4" Background="#FFEBEBEB" SnapsToDevicePixels="true"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="DownSliderDecreaseButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Width="4" Background="#FFEBEBEB" SnapsToDevicePixels="true"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="TopSliderDecreaseButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Width="4" Background="#EF5B52" SnapsToDevicePixels="true"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="FrameworkElement.Height" Value="15"/>
      <Setter Property="FrameworkElement.Width" Value="15"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border BorderBrush="#FFEBEBEB" BorderThickness="1" CornerRadius="7">
              <Ellipse Width="14" Height="14" Fill="White"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="SliderStyle1" TargetType="{x:Type Slider}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Slider}">
            <Grid>
              <Track x:Name="PART_Track">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource TopSliderDecreaseButtonStyle}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource DownSliderDecreaseButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Focusable="false" Style="{StaticResource DefaultSliderThumbStyle}" VerticalAlignment="Top"/>
                </Track.Thumb>
              </Track>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="DefaultRightRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RepeatButton}">
            <Border Background="Transparent"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="BaseSliderStyle" TargetType="{x:Type Slider}">
      <Setter Property="FrameworkElement.Height" Value="22"/>
      <Setter Property="Control.Background" Value="LightGray"/>
      <Setter Property="Control.Foreground" Value="#EF5B52"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="RangeBase.Maximum" Value="100"/>
      <Setter Property="RangeBase.Minimum" Value="0"/>
    </Style>
    <Style x:Key="BeautifySliderStyle" TargetType="{x:Type Slider}" BasedOn="{StaticResource BaseSliderStyle}">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Slider}">
            <Grid VerticalAlignment="Center">
              <Border Name="TrackBackground" Height="3" Background="{TemplateBinding Control.Background}"/>
              <Track Name="PART_Track">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource DefaultLeftRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                  <Thumb Style="{StaticResource DefaultSliderThumbStyle}"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource DefaultRightRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                </Track.IncreaseRepeatButton>
              </Track>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="5"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="35"/>
      <RowDefinition Height="20"/>
    </Grid.RowDefinitions>
    <Grid Row="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="8"/>
        <ColumnDefinition Width="30"/>
        <ColumnDefinition Width="170"/>
        <ColumnDefinition Width="30"/>
        <ColumnDefinition Width="20"/>
      </Grid.ColumnDefinitions>
      <Image x:Name="_imgicon" Grid.Column="1" Width="20" Height="20" Stretch="Uniform"
             Source="{DynamicResource SpeechControlVoiceImage}"/>
      <Slider x:Name="VolumeSlider" Grid.Column="2" Margin="3 0" Value="60" IsSnapToTickEnabled="true"
              Style="{StaticResource BeautifySliderStyle}"/>
      <TextBlock x:Name="VolumeBlock" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="3"
                 Margin="5 0" Text=""/>
    </Grid>
    <Grid Row="2" Margin="0 3 0 0">
      <Button Click="StartButton_Click" Height="28" Width="28" VerticalAlignment="Center"
              HorizontalAlignment="Left" Margin="13 0 0 2" Style="{StaticResource btnstyle2}">
        <Image x:Name="Start"/>
      </Button>
      <Button Click="StopButton_Click" x:Name="StopBtn" Height="28" Width="28" VerticalAlignment="Center"
              HorizontalAlignment="Left" Margin="45 0 0 2" Style="{StaticResource btnstyle2}">
        <Image Source="/Style/Resources/Speech/Stop.png"/>
      </Button>
      <Button Click="TonedBtn_Click" x:Name="ToneBtn" Height="28" Width="28" VerticalAlignment="Center"
              HorizontalAlignment="Right" Margin="0 0 10 2" Style="{StaticResource btnstyle}">
        <Image Source="{DynamicResource SpeechControlToneImage}"/>
      </Button>
      <Button Click="Button_Click" x:Name="SpeedBtn" Height="28" Width="28" VerticalAlignment="Center"
              HorizontalAlignment="Right" Margin="0 0 43 2" Style="{StaticResource btnstyle}">
        <Image Source="{DynamicResource SpeechControlSpeedImage}"/>
      </Button>
      <Button Click="GlobeBtn_Click" x:Name="GlobeBtn" Height="28" Width="28" VerticalAlignment="Center"
              HorizontalAlignment="Right" Margin="0 0 76 2" Style="{StaticResource btnstyle}">
        <Image Source="{DynamicResource SpeechControlGlobeImage}"/>
      </Button>
      <Popup x:Name="Speed" PlacementRectangle="-5 28 0 0" StaysOpen="false" AllowsTransparency="true"
             PlacementTarget="{Binding ElementName=SpeedBtn}">
        <Border BorderThickness="1" BorderBrush="Gray">
          <Grid Height="130" MinWidth="40" Background="{DynamicResource MainViewToolBarBackground}">
            <Grid.RowDefinitions>
              <RowDefinition Height="30"/>
              <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{x:Static localprop:Resources.ReadWinSpeedBtn}" Grid.Row="0" FontSize="10"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Foreground="{DynamicResource MainViewTextForeground}"/>
            <local:FormattedSlider x:Name="SpeedSli" Grid.Row="1" Orientation="Vertical" Value="5" AutoToolTipFormat="{0}0% speed"
                                   AutoToolTipPlacement="BottomRight" Margin="0 0 0 10" IsSnapToTickEnabled="true"
                                   Ticks="0 1 2 3 4 5 6 7 8 9 10" Style="{StaticResource SliderStyle1}"/>
          </Grid>
        </Border>
      </Popup>
      <Popup x:Name="Tone" PlacementRectangle="-8 28 0 0" StaysOpen="false" AllowsTransparency="true"
             PlacementTarget="{Binding ElementName=ToneBtn}">
        <Border BorderThickness="1" BorderBrush="Gray">
          <Grid Height="130" MinWidth="40" Background="{DynamicResource MainViewToolBarBackground}">
            <Grid.RowDefinitions>
              <RowDefinition Height="30"/>
              <RowDefinition Height="100"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{x:Static localprop:Resources.ReadWinPitchBtn}" Grid.Row="0" FontSize="10"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Foreground="{DynamicResource MainViewTextForeground}"/>
            <local:FormattedSlider x:Name="ToneSli" Grid.Row="1" Orientation="Vertical" Value="5" Margin="0 0 0 10"
                                   IsSnapToTickEnabled="true" AutoToolTipFormat="{0}0% pitch" AutoToolTipPlacement="BottomRight"
                                   Ticks="0 1 2 3 4 5 6 7 8 9 10" Style="{StaticResource SliderStyle1}"/>
          </Grid>
        </Border>
      </Popup>
      <Popup x:Name="Globe" PlacementRectangle="-5 28 0 0" StaysOpen="false" AllowsTransparency="true"
             PlacementTarget="{Binding ElementName=GlobeBtn}">
        <Grid MinWidth="100" Background="{DynamicResource MainViewToolBarBackground}">
          <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
          </Grid.RowDefinitions>
          <ListBox x:Name="CultureListBox" Grid.Row="0" BorderThickness="1 1 1 0.5"
                   BorderBrush="{DynamicResource MainViewSideBarBorder}"
                   Background="{DynamicResource MainViewToolBarBackground}"
                   ItemContainerStyle="{StaticResource listboxStyle}"/>
          <Button Click="CluButton_Click" Height="28" Grid.Row="1"
                  Content="{x:Static localprop:Resources.ReadWinAddMore}" HorizontalAlignment="Stretch"
                  Margin="0 0 0 0" Style="{StaticResource CulBtnStyle}"/>
        </Grid>
      </Popup>
    </Grid>
  </Grid>
</Window>