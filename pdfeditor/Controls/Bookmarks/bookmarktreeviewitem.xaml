<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pdfeditor.Controls.Bookmarks">
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.Static.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.Static.Fill" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.MouseOver.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.MouseOver.Fill" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.Static.Checked.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.Static.Checked.Fill" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.MouseOver.Checked.Stroke" Color="#888888"/>
  <SolidColorBrush x:Key="BookmarkTreeViewItem.TreeArrow.MouseOver.Checked.Fill" Color="#888888"/>
  <PathGeometry x:Key="BookmarkTreeArrow">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure IsFilled="true" StartPoint="0 0" IsClosed="true">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment Point="0 6"/>
              <LineSegment Point="6 0"/>
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="BookmarkTreeViewExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Width" Value="16"/>
    <Setter Property="FrameworkElement.Height" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
            <Path x:Name="ExpandPath" Fill="{StaticResource BookmarkTreeViewItem.TreeArrow.Static.Fill}"
                  Stroke="{StaticResource BookmarkTreeViewItem.TreeArrow.Static.Stroke}"
                  Data="{StaticResource BookmarkTreeArrow}">
              <UIElement.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Value="{StaticResource BookmarkTreeViewItem.TreeArrow.Static.Checked.Fill}"
                      Property="Shape.Fill"/>
              <Setter TargetName="ExpandPath"
                      Value="{StaticResource BookmarkTreeViewItem.TreeArrow.Static.Checked.Stroke}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ExpandPath" Value="{StaticResource BookmarkTreeViewItem.TreeArrow.MouseOver.Stroke}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="ExpandPath" Value="{StaticResource BookmarkTreeViewItem.TreeArrow.MouseOver.Fill}"
                      Property="Shape.Fill"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ExpandPath"
                      Value="{StaticResource BookmarkTreeViewItem.TreeArrow.MouseOver.Checked.Stroke}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="ExpandPath"
                      Value="{StaticResource BookmarkTreeViewItem.TreeArrow.MouseOver.Checked.Fill}"
                      Property="Shape.Fill"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BookmarkTreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:BookmarkTreeViewItem}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Padding" Value="5,4,4,4"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle"
            Value="{StaticResource BookmarkTreeViewItemFocusVisual}"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="local:BookmarkTreeViewItem.IsHighlighted" Value="{Binding IsHighlighted}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:BookmarkTreeViewItem}">
          <Grid x:Name="LayoutRoot" RenderTransformOrigin="0.5,0.5">
            <UIElement.RenderTransform>
              <ScaleTransform/>
            </UIElement.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DragStates">
                <VisualState x:Name="NotDragging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Dragging">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity" To="0.6" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" To="0.9"
                                     Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="LayoutRoot"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" To="0.9"
                                     Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="NotDragging" To="Dragging" GeneratedDuration="0:0:0.15"/>
                  <VisualTransition From="Dragging" To="NotDragging" GeneratedDuration="0:0:0.15"/>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DropIndicatorStates">
                <VisualState x:Name="DropIndicatorInvisible"/>
                <VisualState x:Name="DropIndicatorForChildren">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropIndicator" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="DropIndicator"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)" To="24" Duration="0"/>
                    <DoubleAnimation Storyboard.TargetName="DropIndicator"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="3" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropIndicatorForPreviousSibling">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropIndicator" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropIndicator" Storyboard.TargetProperty="VerticalAlignment" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static VerticalAlignment.Top}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DropIndicatorForNextSibling">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DropIndicator" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="DropIndicator"
                                     Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)" To="3" Duration="0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="MarginColumn" Width="0" MaxWidth="0"/>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <Border x:Name="BackgroundBorder" Grid.ColumnSpan="3" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" Focusable="false"/>
            <ToggleButton x:Name="Expander" Grid.Column="1"
                          Style="{StaticResource BookmarkTreeViewExpandCollapseToggleStyle}" ClickMode="Press"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border Name="Bd" Grid.Column="2" Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"/>
            <Grid x:Name="DropIndicator" Visibility="Collapsed" IsHitTestVisible="false"
                  HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Column="2" Row="0"
                  UseLayoutRounding="false" SnapsToDevicePixels="false">
              <UIElement.RenderTransform>
                <TranslateTransform X="5" Y="0"/>
              </UIElement.RenderTransform>
              <Path Data="M 0,0 L 5,3 0,6 Z" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="#888888"
                    UseLayoutRounding="false" SnapsToDevicePixels="false"/>
              <Rectangle Height="1" Margin="5,0,0,0" HorizontalAlignment="Stretch" VerticalAlignment="Center" Fill="#888888"
                         UseLayoutRounding="false" SnapsToDevicePixels="false"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="true">
              <Setter TargetName="BackgroundBorder" Property="Border.Background" Value="#CA393B"/>
              <Setter Property="Control.Foreground" Value="#FFFFFF"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="TreeViewItem.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="BackgroundBorder" Property="Border.Background" Value="#CA393B"/>
              <Setter Property="Control.Foreground" Value="#FFFFFF"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="local:BookmarkTreeViewItem.IsHighlighted" Value="true">
              <Setter TargetName="PART_Header" Property="TextElement.FontSize" Value="13"/>
              <Setter TargetName="PART_Header" Property="TextElement.FontWeight" Value="Bold"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <VirtualizingStackPanel/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>