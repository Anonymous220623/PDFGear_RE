<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:utils="clr-namespace:pdfeditor.Utils">
  <SolidColorBrush x:Key="PrimaryDialogButton.Static.Background" Color="#EF5B52"/>
  <SolidColorBrush x:Key="PrimaryDialogButton.Static.Border" Color="#FFEF5B52"/>
  <SolidColorBrush x:Key="PrimaryDialogButton.Static.Foreground" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="DialogButton.Static.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="DialogButton.Static.Border" Color="#FFBBBBBB"/>
  <SolidColorBrush x:Key="DialogButton.Static.Foreground" Color="#FF000000"/>
  <SolidColorBrush x:Key="DialogButton.Disabled.Background" Color="#FFF4F4F4"/>
  <SolidColorBrush x:Key="DialogButton.Disabled.Border" Color="#FFF4F4F4"/>
  <SolidColorBrush x:Key="DialogButton.Disabled.Foreground" Color="#FF838383"/>
  <Style x:Key="DialogButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="-1" SnapsToDevicePixels="false"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     RadiusX="2" RadiusY="2" Opacity="0.6"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DialogButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="Control.Background" Value="{DynamicResource DialogButtonStaticBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource DialogButtonStaticBorder}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="8"/>
    <Setter Property="FrameworkElement.MinWidth" Value="80"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource DialogButtonFocusVisual}"/>
    <Setter Property="utils:UIElementExtension.CornerRadius" Value="2,2,2,2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" CornerRadius="{TemplateBinding utils:UIElementExtension.CornerRadius}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{DynamicResource DialogButtonStaticBorder}" SnapsToDevicePixels="true">
            <Grid>
              <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         Fill="{DynamicResource TextBrushWhiteAndBlack}" Opacity="0" SnapsToDevicePixels="false"
                         RadiusX="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(utils:UIElementExtension.CornerRadius).TopLeft}"
                         RadiusY="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(utils:UIElementExtension.CornerRadius).BottomLeft}"/>
              <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.04"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.12"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource DialogButtonDisabledBackground}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource DialogButtonDisabledBorder}" TargetName="border"
                      Property="Border.BorderBrush"/>
              <Setter Value="{DynamicResource DialogButtonDisabledForeground}" TargetName="contentPresenter"
                      Property="TextElement.Foreground"/>
            </Trigger>
            <Trigger Property="Button.IsDefault" Value="true">
              <Setter Value="{StaticResource PrimaryDialogButton.Static.Background}" Property="Control.Background"/>
              <Setter Value="{StaticResource PrimaryDialogButton.Static.Border}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource PrimaryDialogButton.Static.Foreground}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PrimaryDialogButtonStyle" TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource DialogButtonStyle}">
    <Setter Property="Control.Background" Value="{StaticResource PrimaryDialogButton.Static.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource PrimaryDialogButton.Static.Border}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource PrimaryDialogButton.Static.Foreground}"/>
  </Style>
</ResourceDictionary>