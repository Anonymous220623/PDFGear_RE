<UserControl x:Class="pdfeditor.Controls.Menus.SelectPageComboBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:pdfeditor.Controls.Menus"
             xmlns:localprop="clr-namespace:pdfeditor.Properties"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors2="clr-namespace:pdfeditor.Utils.Behaviors"
             xmlns:utils="clr-namespace:pdfeditor.Utils"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:commonCtrls="clr-namespace:CommomLib.Controls;assembly=CommomLib"
             MinWidth="150">
  <Grid VerticalAlignment="Center">
    <FrameworkElement.Resources>
      <Style x:Key="ArrowButtonFocusVisual">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate>
              <Rectangle Margin="-1" SnapsToDevicePixels="false" Stroke="#1A000000" StrokeThickness="1" RadiusX="2"
                         RadiusY="2" Opacity="1"/>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ArrowButtonStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Control.Background" Value="{DynamicResource SolidBrushWhiteAndBlack}"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource DialogButton.Static.Border}"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="Control.Padding" Value="8"/>
        <Setter Property="FrameworkElement.MinWidth" Value="80"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ArrowButtonFocusVisual}"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="border" CornerRadius="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                <Grid>
                  <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             Fill="{DynamicResource TextBrushWhiteAndBlack}" Opacity="0" SnapsToDevicePixels="false" RadiusX="2"
                             RadiusY="2"/>
                  <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.02"/>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed" Value="true">
                  <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.04"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Value="{StaticResource DialogButton.Disabled.Background}" TargetName="border"
                          Property="Border.Background"/>
                  <Setter Value="{StaticResource DialogButton.Disabled.Border}" TargetName="border"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{StaticResource DialogButton.Disabled.Foreground}" TargetName="contentPresenter"
                          Property="TextElement.Foreground"/>
                </Trigger>
                <Trigger Property="Button.IsDefault" Value="true">
                  <Setter Value="{StaticResource PrimaryDialogButton.Static.Background}" Property="Control.Background"/>
                  <Setter Value="{StaticResource PrimaryDialogButton.Static.Border}" Property="Control.BorderBrush"/>
                  <Setter Value="{StaticResource PrimaryDialogButton.Static.Foreground}" Property="Control.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </FrameworkElement.Resources>
    <TextBox x:Name="_TextBox" HorizontalAlignment="Stretch" Height="26" VerticalContentAlignment="Center"
             Style="{StaticResource DefaultTextBoxStyle}"
             Foreground="{DynamicResource MainViewBtnInfoStyleText}" Padding="4,0,20,0"
             Background="{DynamicResource SolidBrushWhiteAndBlack}"
             commonCtrls:TextBoxExtensions.Placeholder="eg.1,8,10-12"
             commonCtrls:TextBoxExtensions.PlaceholderPadding="4,4,0,2">
      <behaviors:Interaction.Behaviors>
        <behaviors2:TextBoxEditBehavior TextChanged="_TextBoxEditBehavior_TextChanged" x:Name="_TextBoxEditBehavior"/>
      </behaviors:Interaction.Behaviors>
    </TextBox>
    <Button Click="_ArrowButton_Click" x:Name="_ArrowButton" Style="{StaticResource ArrowButtonStyle}"
            MinWidth="0" Width="24" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center"
            BorderThickness="0" Padding="8" Margin="0,0,1,0">
      <Viewbox>
        <Path Data="M 1,1 L 4,4 7,1 " Stroke="{DynamicResource MainViewPageRangeDropBtn}" StrokeThickness="1"/>
      </Viewbox>
    </Button>
    <ComboBox SelectionChanged="_SelectPageComboBox_SelectionChanged" x:Name="_SelectPageComboBox" Height="0"
              VerticalAlignment="Bottom" Style="{DynamicResource DefaultComboBoxStyle}"
              ItemContainerStyle="{DynamicResource DefaultComboBoxItemStyle}" Focusable="false">
      <FrameworkElement.Resources>
        <SolidColorBrush x:Key="{x:Static SystemColors.WindowFrameBrushKey}" Color="#D2D2D2"/>
      </FrameworkElement.Resources>
      <ComboBoxItem Tag="AllPages" HorizontalContentAlignment="Stretch">
        <ContentControl.Content>
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" Text="{x:Static localprop:Resources.SelectPageAllPagesItem}"
                       Foreground="{DynamicResource ToolBarButtonContextMenu}"/>
            <TextBlock Grid.Column="2" Text="Ctrl + A" Foreground="{DynamicResource ToolBarButtonContextMenu}"
                       Opacity="0.5"/>
          </Grid>
        </ContentControl.Content>
      </ComboBoxItem>
      <ComboBoxItem Content="{x:Static localprop:Resources.SelectPageAllEvenPagesItem}" Tag="AllEvenPages"/>
      <ComboBoxItem Content="{x:Static localprop:Resources.SelectPageAllOddPagesItem}" Tag="AllOddPages"/>
      <ComboBoxItem Content="{x:Static localprop:Resources.SelectPageUnselectAllItem}" Tag="UnselectAll"/>
    </ComboBox>
  </Grid>
</UserControl>