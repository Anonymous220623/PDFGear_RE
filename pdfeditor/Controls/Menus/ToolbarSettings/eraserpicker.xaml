<UserControl x:Class="pdfeditor.Controls.Menus.ToolbarSettings.EraserPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:pdfeditor.Controls.Menus.ToolbarSettings"
             xmlns:localprop="clr-namespace:pdfeditor.Properties"
             xmlns:converter="clr-namespace:pdfeditor.Utils.Converters"
             TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}">
  <Grid>
    <FrameworkElement.Resources>
      <ResourceDictionary>
        <ResourceDictionary.MergedDictionaries>
          <ResourceDictionary Source="/Controls/Menus/ToolbarSettings/ToolbarSettingStyles.xaml"/>
        </ResourceDictionary.MergedDictionaries>
        <converter:EraserTypeToBoolConverter x:Key="EraserTypeToBoolConverter"/>
        <converter:EraserTypeToBoolInverseConverter x:Key="EraserTypeToBoolInverseConverter"/>
        <converter:EraserTypeToVisibilityConverter x:Key="EraserTypeToVisibilityConverter"/>
        <DropShadowEffect x:Key="UnhoverThumbEffect" BlurRadius="1" ShadowDepth="0" Opacity="0.8" Color="#EF5B52"/>
        <DropShadowEffect x:Key="HoverThumbEffect" BlurRadius="1" ShadowDepth="0" Opacity="0.5" Color="#EF5B52"/>
        <DropShadowEffect x:Key="DragThumbEffect" BlurRadius="2" ShadowDepth="0" Opacity="1" Color="#EF5B52"/>
        <Style x:Key="DefaultSliderThumbStyle" TargetType="{x:Type Thumb}">
          <Setter Property="FrameworkElement.Width" Value="12"/>
          <Setter Property="FrameworkElement.Height" Value="12"/>
          <Setter Property="Control.Background" Value="White"/>
          <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Thumb}">
                <Ellipse Width="{TemplateBinding FrameworkElement.Width}" Height="{TemplateBinding FrameworkElement.Height}"
                         Fill="{TemplateBinding Control.Background}" Effect="{StaticResource UnhoverThumbEffect}"/>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter Value="{StaticResource HoverThumbEffect}" Property="UIElement.Effect"/>
                    <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
                  </Trigger>
                  <Trigger Property="Thumb.IsDragging" Value="true">
                    <Setter Value="{StaticResource DragThumbEffect}" Property="UIElement.Effect"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style x:Key="DefaultLeftRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type RepeatButton}">
                <Border Background="#EF5B52" Height="3"/>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style x:Key="DefaultRightRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
          <Setter Property="Control.IsTabStop" Value="false"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type RepeatButton}">
                <Border Background="Transparent"/>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
        <Style x:Key="BaseSliderStyle" TargetType="{x:Type Slider}">
          <Setter Property="FrameworkElement.Height" Value="22"/>
          <Setter Property="Control.Background" Value="LightGray"/>
          <Setter Property="Control.Foreground" Value="#EF5B52"/>
          <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
          <Setter Property="RangeBase.Maximum" Value="100"/>
          <Setter Property="RangeBase.Minimum" Value="0"/>
        </Style>
        <Style x:Key="BeautifySliderStyle" TargetType="{x:Type Slider}" BasedOn="{StaticResource BaseSliderStyle}">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type Slider}">
                <Grid VerticalAlignment="Center">
                  <Border Name="TrackBackground" Height="3" Background="{TemplateBinding Control.Background}"/>
                  <Track Name="PART_Track">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource DefaultLeftRepeatButtonStyle}" Command="Slider.DecreaseLarge"/>
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb Style="{StaticResource DefaultSliderThumbStyle}"/>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource DefaultRightRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
                    </Track.IncreaseRepeatButton>
                  </Track>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid.ColumnDefinitions>
      <ColumnDefinition/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <StackPanel Orientation="Horizontal" Margin="3 0" Grid.Column="0"
                DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:EraserPicker}, Path=Model}">
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
      </Grid>
      <ToggleButton x:Name="Eraser" Margin="5 0" IsChecked="{Binding IsChecked}">
        <Grid>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="25"/>
          </Grid.ColumnDefinitions>
          <Image Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                 Source="{Binding EraserImage}" ToolTip="{Binding InkName}"/>
          <TextBlock Grid.Column="1" Text="{x:Static localprop:Resources.InkToolbarEraserBtn}"
                     Foreground="{DynamicResource TextBrushWhiteAndBlack}" VerticalAlignment="Center"
                     HorizontalAlignment="Center"/>
          <ToggleButton x:Name="EraserBar" Grid.Column="2" Background="Transparent" BorderBrush="Transparent">
            <Path Data="M 3.6,0 L 0,0 3.6,4 7.2,0 Z" Fill="{DynamicResource TextBrushWhiteAndBlack}"
                  Stroke="{DynamicResource TextBrushWhiteAndBlack}" HorizontalAlignment="Right" Margin="0 2 0 0"
                  VerticalAlignment="Center"/>
            <FrameworkElement.Style>
              <Style TargetType="{x:Type ToggleButton}">
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                      <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                              BorderThickness="{TemplateBinding Control.BorderThickness}"
                              Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                          <Setter TargetName="bborder" Value="{DynamicResource EraserBtnDropBackground}" Property="Border.Background"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </FrameworkElement.Style>
          </ToggleButton>
          <Popup x:Name="EraserBarPopup" Placement="Bottom" StaysOpen="false" AllowsTransparency="true"
                 PopupAnimation="Fade" PlacementTarget="{Binding ElementName=Eraser}"
                 IsOpen="{Binding ElementName=EraserBar, Path=IsChecked, Mode=TwoWay}">
            <Border BorderThickness="1" BorderBrush="{DynamicResource MainViewFontSizeBorder}">
              <Grid Background="{DynamicResource SolidBrushWhiteAndBlack}" MinWidth="170">
                <Grid.RowDefinitions>
                  <RowDefinition Height="40"/>
                  <RowDefinition Height="auto"/>
                  <RowDefinition Height="AUTO"/>
                  <RowDefinition Height="AUTO"/>
                </Grid.RowDefinitions>
                <Grid Row="0" MinWidth="170">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <ToggleButton Click="ToggleButton_Click" Margin="5 0"
                                IsChecked="{Binding IsPartial, Converter={StaticResource EraserTypeToBoolInverseConverter}}">
                    <ContentControl.Content>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="20"/>
                          <ColumnDefinition MinWidth="40"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{DynamicResource EraserPartialImage}" Width="19" Height="15" HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Margin="3.5 0" VerticalAlignment="Center" HorizontalAlignment="Left"
                                   Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                                   Text="{x:Static localprop:Resources.EraserToolbarPaitialBtn}"/>
                      </Grid>
                    </ContentControl.Content>
                    <FrameworkElement.Style>
                      <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Control.Background" Value="Transparent"/>
                        <Setter Property="UIElement.IsEnabled" Value="true"/>
                        <Setter Property="Control.BorderBrush" Value="Transparent"/>
                        <Setter Property="Control.BorderThickness" Value="1"/>
                        <Setter Property="FrameworkElement.Height" Value="24"/>
                        <Setter Property="FrameworkElement.Margin" Value="9 0 4 0"/>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                              <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                  <Setter TargetName="bborder" Value="{DynamicResource MainViewFontSizeBorder}" Property="Border.BorderBrush"/>
                                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="False">
                                  <Setter TargetName="bborder" Property="Border.BorderBrush" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </FrameworkElement.Style>
                  </ToggleButton>
                  <ToggleButton Click="ToggleButton_Click" Grid.Column="1"
                                IsChecked="{Binding IsPartial, Converter={StaticResource EraserTypeToBoolConverter}}">
                    <ContentControl.Content>
                      <Grid>
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="20"/>
                          <ColumnDefinition MinWidth="40"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{DynamicResource EraserWholeImage}" Width="19" Height="15" HorizontalAlignment="Center"
                               Margin="3 2" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="1" Margin="3.5 0" VerticalAlignment="Center"
                                   Foreground="{DynamicResource TextBrushWhiteAndBlack}" HorizontalAlignment="Left"
                                   Text="{x:Static localprop:Resources.EraserToolbarWholeBtn}"/>
                      </Grid>
                    </ContentControl.Content>
                    <FrameworkElement.Style>
                      <Style TargetType="{x:Type ToggleButton}">
                        <Setter Property="Control.Background" Value="Transparent"/>
                        <Setter Property="Control.BorderBrush" Value="Transparent"/>
                        <Setter Property="Control.BorderThickness" Value="1"/>
                        <Setter Property="FrameworkElement.Height" Value="24"/>
                        <Setter Property="FrameworkElement.Margin" Value="4 0 9 0"/>
                        <Setter Property="Control.Template">
                          <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                              <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                              </Border>
                              <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                  <Setter TargetName="bborder" Value="{DynamicResource MainViewFontSizeBorder}" Property="Border.BorderBrush"/>
                                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                                </Trigger>
                                <Trigger Property="ToggleButton.IsChecked" Value="False">
                                  <Setter TargetName="bborder" Property="Border.BorderBrush" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="true">
                                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                                </Trigger>
                              </ControlTemplate.Triggers>
                            </ControlTemplate>
                          </Setter.Value>
                        </Setter>
                      </Style>
                    </FrameworkElement.Style>
                  </ToggleButton>
                </Grid>
                <Rectangle Width="auto" Grid.Row="1" Height="0.5" Margin="5 4 5 8" Fill="#d2d2d2" Stroke="#d2d2d2"
                           Visibility="{Binding IsPartial, Converter={StaticResource EraserTypeToVisibilityConverter}}"/>
                <TextBlock Text="{x:Static localprop:Resources.EraserToolbarSizeContent}"
                           Foreground="{DynamicResource TextBrushWhiteAndBlack}" Grid.Row="2" FontSize="12" LineHeight="14"
                           HorizontalAlignment="Left" VerticalAlignment="Center" Margin="8 0 0 0"
                           Visibility="{Binding IsPartial, Converter={StaticResource EraserTypeToVisibilityConverter}}"/>
                <Grid Row="3" Margin="0 0 0 8"
                      Visibility="{Binding IsPartial, Converter={StaticResource EraserTypeToVisibilityConverter}}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                  </Grid.ColumnDefinitions>
                  <Slider x:Name="EraserSizeSlider" Grid.Column="0" Margin="8 0" Maximum="30" Minimum="1"
                          IsMoveToPointEnabled="true" IsSnapToTickEnabled="true" Style="{StaticResource BeautifySliderStyle}"
                          Value="{Binding SelectSize}"/>
                  <Grid Column="1">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="20"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Foreground="{DynamicResource TextBrushWhiteAndBlack}" VerticalAlignment="Center"
                               HorizontalAlignment="Right" Text="{Binding ElementName=EraserSizeSlider, Path=Value}"/>
                    <TextBlock Grid.Column="1" Text="Pt" Margin="2 0 0 0" VerticalAlignment="Center"
                               Foreground="{DynamicResource TextBrushWhiteAndBlack}" HorizontalAlignment="Left"/>
                  </Grid>
                </Grid>
              </Grid>
            </Border>
          </Popup>
        </Grid>
        <FrameworkElement.Style>
          <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="FrameworkElement.Height" Value="25"/>
            <Setter Property="FrameworkElement.MinWidth" Value="95"/>
            <Setter Property="Control.Background" Value="Transparent"/>
            <Setter Property="UIElement.IsEnabled" Value="true"/>
            <Setter Property="Control.BorderBrush" Value="Transparent"/>
            <Setter Property="Control.BorderThickness" Value="1"/>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                  <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                  </Border>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ToggleButton.IsChecked" Value="True">
                      <Setter TargetName="bborder" Value="{DynamicResource MainViewFontSizeBorder}" Property="Border.BorderBrush"/>
                      <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                    </Trigger>
                    <Trigger Property="ToggleButton.IsChecked" Value="False">
                      <Setter TargetName="bborder" Property="Border.BorderBrush" Value="Transparent"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="true">
                      <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Style>
      </ToggleButton>
    </StackPanel>
  </Grid>
</UserControl>