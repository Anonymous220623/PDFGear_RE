<UserControl x:Class="pdfeditor.Controls.Menus.ToolbarSettings.TextMarkupColorPicker"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:pdfeditor.Controls.Menus.ToolbarSettings"
             xmlns:control="clr-namespace:pdfeditor.Controls"
             xmlns:colorpicker="clr-namespace:pdfeditor.Controls.ColorPickers"
             xmlns:cv="clr-namespace:pdfeditor.Utils.Converters">
  <Grid>
    <FrameworkElement.Resources>
      <local:StringColorConverter x:Key="StringColorConverter"/>
      <local:ColorIndicatorConverter x:Key="ColorIndicatorConverter"/>
      <cv:StringBrushConverter x:Key="StringBrushConverter"/>
      <Geometry x:Key="ColorSelectIndicator">
        m1.4186,6.19411l3.55283,3.76507l7.42857,-7.95918
      </Geometry>
      <Style x:Key="ColorRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderBrush" Value="#99000000"/>
        <Setter Property="Control.Foreground" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.Width" Value="16"/>
        <Setter Property="FrameworkElement.Height" Value="16"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type RadioButton}">
              <Border x:Name="bd" Background="Transparent">
                <Grid>
                  <Viewbox x:Name="content" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           SnapsToDevicePixels="false" UseLayoutRounding="false" Tag="{TemplateBinding FrameworkElement.Tag}">
                    <Grid SnapsToDevicePixels="false" UseLayoutRounding="false" Width="32" Height="32">
                      <Ellipse x:Name="circle" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                               Fill="{TemplateBinding Control.Background}" SnapsToDevicePixels="false" UseLayoutRounding="false"/>
                      <Image x:Name="TransparentImage" Source="/Style/Resources/ContextMenu/ToolbarSetting_Transparent.png"
                             Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             SnapsToDevicePixels="false" UseLayoutRounding="false" Visibility="Collapsed"/>
                    </Grid>
                  </Viewbox>
                  <Ellipse x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="2" Visibility="Collapsed"
                           SnapsToDevicePixels="false" UseLayoutRounding="false"/>
                  <Path x:Name="SelectedIndicator" Data="{StaticResource ColorSelectIndicator}" StrokeThickness="2"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Collapsed"
                        Stroke="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=Tag, Converter={StaticResource ColorIndicatorConverter}}"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="content" Property="UIElement.Opacity" Value="0.6"/>
                </Trigger>
                <Trigger Property="ButtonBase.IsPressed" Value="true"/>
                <Trigger Property="ToggleButton.IsChecked" Value="true">
                  <Setter TargetName="content" Property="FrameworkElement.Margin" Value="0"/>
                  <Setter TargetName="SelectedIndicator" Property="UIElement.Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="FrameworkElement.Tag">
                  <Trigger.Value>
                    <Color>#FFFFFF</Color>
                  </Trigger.Value>
                  <Setter TargetName="circle" Property="Shape.Stroke" Value="#000000"/>
                  <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1"/>
                </Trigger>
                <DataTrigger Value="0" Binding="{Binding ElementName=content, Path=Tag.A, Mode=OneWay}">
                  <Setter TargetName="circle" Property="UIElement.Visibility" Value="Collapsed"/>
                  <Setter TargetName="TransparentImage" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="SelectedIndicator" Property="UIElement.Opacity" Value="0"/>
                </DataTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="MoreColorButtonStyle" TargetType="{x:Type colorpicker:ColorPickerButton}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderBrush" Value="#99000000"/>
        <Setter Property="Control.Foreground" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="FrameworkElement.Width" Value="16"/>
        <Setter Property="FrameworkElement.Height" Value="16"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
        <Setter Property="colorpicker:ColorPickerButton.Placement" Value="Bottom"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FrameworkElement.ToolTip" Value="More Colors..."/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type colorpicker:ColorPickerButton}">
              <Border x:Name="bd" Background="Transparent">
                <Grid>
                  <Image x:Name="content" Stretch="Uniform" Width="16" Height="16"
                         Source="/Style/Resources/ContextMenu/ToolbarSetting_MoreColor.png" SnapsToDevicePixels="false"
                         UseLayoutRounding="false"/>
                  <Image x:Name="content2" Margin="2" Stretch="Uniform" Visibility="Collapsed" Width="18" Height="18"
                         Source="/Style/Resources/ContextMenu/ToolbarSetting_MoreColor.png" SnapsToDevicePixels="false"
                         UseLayoutRounding="false"/>
                  <Ellipse x:Name="content3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="2" Visibility="Collapsed"
                           SnapsToDevicePixels="false" UseLayoutRounding="false"/>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="content" Property="UIElement.Visibility" Value="Collapsed"/>
                  <Setter TargetName="content2" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="content2" Property="UIElement.Opacity" Value="0.8"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="ColorItemsControl" TargetType="{x:Type ItemsControl}">
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Foreground"
                Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="false"/>
        <Setter Property="ItemsControl.ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemContainerStyle">
          <Setter.Value>
            <Style TargetType="{x:Type ContentPresenter}">
              <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
              <Setter Property="FrameworkElement.Margin" Value="6,0"/>
            </Style>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemsControl.ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <RadioButton Style="{StaticResource ColorRadioButtonStyle}" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                           Background="{Binding Value, Converter={StaticResource StringBrushConverter}}"
                           Tag="{Binding Value, Converter={StaticResource StringColorConverter}}" Command="{Binding Command}"/>
            </DataTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ItemsControl}">
              <Border Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Border>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </FrameworkElement.Resources>
    <StackPanel Orientation="Horizontal" Margin="6,0,0,0"
                DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:TextMarkupColorPicker}, Path=Model}">
      <ItemsControl x:Name="StandardColorItemsControl" Style="{StaticResource ColorItemsControl}"
                    ItemsSource="{Binding StandardColors}"/>
      <ItemsControl x:Name="RecentColorItemsControl" Style="{StaticResource ColorItemsControl}"
                    ItemsSource="{Binding RecentColors}"/>
      <colorpicker:ColorPickerButton ItemClick="ColorPickerButton_ItemClick" Margin="6,0" Style="{StaticResource MoreColorButtonStyle}"
                                     RecentColorsKey="{Binding RecentColorsKey}"/>
    </StackPanel>
  </Grid>
</UserControl>