<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:localprop="clr-namespace:pdfeditor.Properties"
                    xmlns:local="clr-namespace:pdfeditor.Controls.ColorPickers"
                    xmlns:appTheme="clr-namespace:CommomLib.AppTheme;assembly=CommomLib">
  <local:ColorPickerColorBrushConverter x:Key="ColorPickerColorBrushConverter"/>
  <Style x:Key="ColorButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="-1" RadiusX="1" RadiusY="1" SnapsToDevicePixels="false" Stroke="#66000000"
                     StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ColorButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ColorButtonFocusVisual}"/>
    <Setter Property="Control.Background" Value="{DynamicResource ColorButton.Static.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ColorButton.Static.Border}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource ColorButton.Static.Foreground}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="FrameworkElement.Height" Value="18"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" Background="Transparent"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="false">
            <Rectangle Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch"
                       VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                       Fill="{TemplateBinding Control.Background}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource ColorButton.MouseOver.Border}" TargetName="border"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{DynamicResource ColorButton.Pressed.Border}" TargetName="border"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.4"/>
              <Setter TargetName="border" Property="FrameworkElement.Cursor" Value="No"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TransparentColorButtonStyle" TargetType="{x:Type ButtonBase}"
         BasedOn="{StaticResource ColorButtonStyle}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" Background="Transparent"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="false">
            <Grid>
              <Rectangle Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                         Fill="White"/>
              <Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0.5"
                       SnapsToDevicePixels="false">
                <Path Data="M 0,0 L 10,10 " Stroke="#99FF0000" StrokeThickness="1" StrokeStartLineCap="Triangle"
                      StrokeEndLineCap="Triangle"/>
              </Viewbox>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{DynamicResource ColorButton.MouseOver.Border}" TargetName="border"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{DynamicResource ColorButton.Pressed.Border}" TargetName="border"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.4"/>
              <Setter TargetName="border" Property="FrameworkElement.Cursor" Value="No"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ColorPicker}">
    <Setter Property="Control.Background" Value="{DynamicResource ColorPicker.Static.Background}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource ColorPicker.Static.Foreground}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ColorPicker.Static.Border}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Width" Value="218"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorPicker}">
          <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}">
            <FrameworkElement.Resources>
              <Style x:Key="TitleButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="Control.Background" Value="{DynamicResource TitleButton.Static.Background}"/>
                <Setter Property="Control.BorderBrush" Value="{DynamicResource ColorPicker.Static.Border}"/>
                <Setter Property="Control.Foreground" Value="{DynamicResource ColorPicker.Static.Foreground}"/>
                <Setter Property="Control.BorderThickness" Value="0"/>
                <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                <Setter Property="Control.Padding" Value="8"/>
                <Setter Property="FrameworkElement.MinWidth" Value="80"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ColorButtonFocusVisual}"/>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                      <Border x:Name="border" CornerRadius="0" BorderThickness="{TemplateBinding Control.BorderThickness}"
                              Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                        <Grid>
                          <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                     Fill="{DynamicResource TitleButton.Static.HoverBackground}" Opacity="0" SnapsToDevicePixels="false"
                                     RadiusX="0" RadiusY="0"/>
                          <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                        </Grid>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsMouseOver" Value="true">
                          <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.07"/>
                        </Trigger>
                        <Trigger Property="ButtonBase.IsPressed" Value="true">
                          <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.16"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                          <Setter Value="{DynamicResource TitleButton.Disabled.Background}" TargetName="border"
                                  Property="Border.Background"/>
                          <Setter Value="{DynamicResource TitleButton.Disabled.Border}" TargetName="border"
                                  Property="Border.BorderBrush"/>
                          <Setter Value="{DynamicResource TitleButton.Disabled.Foreground}" TargetName="contentPresenter"
                                  Property="TextElement.Foreground"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="StandardColorStates">
                <VisualState x:Name="StandardColorVisible"/>
                <VisualState x:Name="StandardColorInvisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StandardColorListTitle" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="StandardColorListContainer" Storyboard.TargetProperty="Visibility"
                                                   Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="RecentColorStates">
                <VisualState x:Name="RecentColorVisible"/>
                <VisualState x:Name="RecentColorInvisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorListTitle" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="RecentColorListContainer" Storyboard.TargetProperty="Visibility"
                                                   Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="MoreColorStates">
                <VisualState x:Name="MoreColorVisible"/>
                <VisualState x:Name="MoreColorInvisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MoreColorButton" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Margin" Duration="0">
                      <DiscreteThicknessKeyFrame KeyTime="0" Value="0,0,0,12"/>
                    </ThicknessAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="TransparentColorStates">
                <VisualState x:Name="TransparentColorVisible"/>
                <VisualState x:Name="TransparentColorInvisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="TransparentColorButton" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="LayoutRoot">
              <Grid.RowDefinitions>
                <RowDefinition x:Name="DefaultColorRow" Height="Auto"/>
                <RowDefinition x:Name="ThemeColorsTitleRow" Height="Auto"/>
                <RowDefinition x:Name="ThemeColorsRow" Height="Auto"/>
                <RowDefinition x:Name="StandardColorsTitleRow" Height="Auto"/>
                <RowDefinition x:Name="StandardColorsRow" Height="Auto"/>
                <RowDefinition x:Name="RecentColorsTitleRow" Height="Auto"/>
                <RowDefinition x:Name="RecentColorsRow" Height="Auto"/>
                <RowDefinition x:Name="TransparentColorRow" Height="Auto"/>
                <RowDefinition x:Name="MoreColorRow" Height="Auto"/>
              </Grid.RowDefinitions>
              <Button x:Name="DefaultColorButton" Style="{StaticResource TitleButtonStyle}">
                <StackPanel Orientation="Horizontal">
                  <Rectangle x:Name="Indicator" Width="14" Height="14"/>
                  <TextBlock Text="Default" Margin="8,0,0,0"/>
                </StackPanel>
              </Button>
              <Border Background="{DynamicResource ColorPicker.Static.TitleBackground}" Grid.Row="1">
                <TextBlock Text="{x:Static localprop:Resources.ColorPickerThemeLabelContent}" Margin="8"/>
              </Border>
              <StackPanel x:Name="ColorFamilyListContainer" Orientation="Horizontal" Grid.Row="2" Margin="8,4,8,0">
                <local:ColorFamilyListView x:Name="ColorFamilyList1"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily1.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily1}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList2"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily2.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily2}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList3"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily3.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily3}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList4"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily4.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily4}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList5"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily5.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily5}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList6"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily6.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily6}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList7"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily7.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily7}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList8"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily8.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily8}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList9"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily9.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily9}"/>
                <local:ColorFamilyListView x:Name="ColorFamilyList10"
                                           Header="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily10.Header}"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ColorFamily10}"/>
              </StackPanel>
              <Border x:Name="StandardColorListTitle" Background="{DynamicResource ColorPicker.Static.TitleBackground}"
                      Grid.Row="3" Margin="0,4,0,0">
                <TextBlock Text="{x:Static localprop:Resources.ColorPickerStandardLabelContent}" Margin="8"/>
              </Border>
              <Grid x:Name="StandardColorListContainer" Row="4" Margin="8,4,8,0">
                <local:ColorFamilyListView x:Name="StandardColorList" HorizontalAlignment="Left"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.StandardColors}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </local:ColorFamilyListView>
              </Grid>
              <Border x:Name="RecentColorListTitle" Background="{DynamicResource ColorPicker.Static.TitleBackground}"
                      Grid.Row="5" Margin="0,4,0,0">
                <TextBlock Text="Recent" Margin="8"/>
              </Border>
              <Grid x:Name="RecentColorListContainer" Row="6" Margin="8,4,8,0">
                <local:ColorFamilyListView x:Name="RecentColorList" HorizontalAlignment="Left"
                                           ItemsSource="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.RecentColors}">
                  <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </ItemsControl.ItemsPanel>
                </local:ColorFamilyListView>
              </Grid>
              <Button x:Name="TransparentColorButton" Grid.Row="7" Style="{StaticResource TitleButtonStyle}"
                      Margin="0,4,0,0">
                <StackPanel Orientation="Horizontal">
                  <Grid Width="16" Height="16">
                    <Rectangle Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                               Fill="White" Stroke="#11000000" StrokeThickness="1"/>
                    <Viewbox Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="1"
                             SnapsToDevicePixels="false">
                      <Path Data="M 0,0 L 10,10 " Stroke="#99FF0000" StrokeThickness="1" StrokeStartLineCap="Triangle"
                            StrokeEndLineCap="Triangle"/>
                    </Viewbox>
                  </Grid>
                  <TextBlock Text="No color" Margin="8,0,0,0"/>
                </StackPanel>
              </Button>
              <Button x:Name="MoreColorButton" Grid.Row="8" Style="{StaticResource TitleButtonStyle}" Margin="0,4,0,0">
                <StackPanel Orientation="Horizontal">
                  <Canvas Width="16" Height="16" VerticalAlignment="Center">
                    <Rectangle Canvas.Left="2" Canvas.Top="2" Width="5" Height="5" Fill="#EF5B52"/>
                    <Rectangle Canvas.Left="9" Canvas.Top="2" Width="5" Height="5" Fill="#EFDF52"/>
                    <Rectangle Canvas.Left="2" Canvas.Top="9" Width="5" Height="5" Fill="#52EFAD"/>
                    <Rectangle Canvas.Left="9" Canvas.Top="9" Width="5" Height="5" Fill="#84CBFF"/>
                  </Canvas>
                  <TextBlock Text="{x:Static localprop:Resources.ColorPickerMoreColorsLabelContent}" Margin="8,0,0,0"/>
                </StackPanel>
              </Button>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate x:Key="ColorFamilyListItemSolidColorTemplate" DataType="{x:Type local:ColorValue}">
    <Button Style="{StaticResource ColorButtonStyle}" ToolTip="{Binding DisplayName}"
            Background="{Binding Color, Converter={StaticResource ColorPickerColorBrushConverter}}"/>
  </DataTemplate>
  <DataTemplate x:Key="ColorFamilyListItemTransparentTemplate" DataType="{x:Type local:ColorValue}">
    <Button Style="{StaticResource TransparentColorButtonStyle}" ToolTip="{Binding DisplayName}"
            Background="{Binding Color, Converter={StaticResource ColorPickerColorBrushConverter}}"/>
  </DataTemplate>
  <local:ColorFamilyListViewItemTemplateSelector x:Key="ColorFamilyListViewItemTemplateSelector"
                                                 SolidColorTemplate="{StaticResource ColorFamilyListItemSolidColorTemplate}"
                                                 TransparentTemplate="{StaticResource ColorFamilyListItemTransparentTemplate}"/>
  <Style TargetType="{x:Type local:ColorFamilyListView}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorFamilyListView}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition x:Name="HeaderRow" Height="Auto"/>
                <RowDefinition x:Name="SpaceRow" Height="8"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <ContentPresenter x:Name="HeaderContentPresenter" ContentSource="Header"/>
              <ItemsPresenter Grid.Row="2" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="HeaderContentPresenter" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="SpaceRow" Property="RowDefinition.Height" Value="0"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HeaderedItemsControl.HeaderTemplateSelector"
            Value="{StaticResource ColorFamilyListViewItemTemplateSelector}"/>
    <Setter Property="ItemsControl.ItemTemplateSelector"
            Value="{StaticResource ColorFamilyListViewItemTemplateSelector}"/>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ColorFamilyListViewItem}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Margin" Value="1,0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorFamilyListViewItem}">
          <ContentPresenter ContentSource="Content"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>