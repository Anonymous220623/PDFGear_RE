<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pdfeditor.Controls.ColorPickers">
  <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
  <SolidColorBrush x:Key="Button.Static.Border" Color="#D2D2D2"/>
  <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Transparent"/>
  <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#999999"/>
  <SolidColorBrush x:Key="Button.Pressed.Background" Color="Transparent"/>
  <SolidColorBrush x:Key="Button.Pressed.Border" Color="#666666"/>
  <SolidColorBrush x:Key="Button.Disabled.Background" Color="Transparent"/>
  <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
  <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
  <Style x:Key="ColorButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="-1" RadiusX="1" RadiusY="1" SnapsToDevicePixels="false" Stroke="#66000000"
                     StrokeThickness="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ColorPickerButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ColorButtonFocusVisual}"/>
    <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource ColorPickerButton.Static.Border}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Top"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="FrameworkElement.MinWidth" Value="22"/>
    <Setter Property="FrameworkElement.MinHeight" Value="22"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorPickerButton}">
          <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="false">
            <Grid SnapsToDevicePixels="false">
              <Rectangle x:Name="Indicator" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Stretch"
                         VerticalAlignment="Stretch"/>
              <Viewbox x:Name="transparentLine" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       SnapsToDevicePixels="false" Visibility="Collapsed"
                       Tag="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=SelectedColor}">
                <Path Data="M 0,0 L 10,10 " Stroke="#99FF0000" StrokeThickness="1" StrokeStartLineCap="Triangle"
                      StrokeEndLineCap="Triangle" SnapsToDevicePixels="false"/>
              </Viewbox>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="true">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}" TargetName="border"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{StaticResource Button.MouseOver.Background}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource Button.MouseOver.Border}" TargetName="border" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{StaticResource Button.Pressed.Background}" TargetName="border" Property="Border.Background"/>
              <Setter Value="{StaticResource Button.Pressed.Border}" TargetName="border" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource Button.Disabled.Background}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource Button.Disabled.Border}" TargetName="border" Property="Border.BorderBrush"/>
            </Trigger>
            <DataTrigger Value="0" Binding="{Binding ElementName=transparentLine, Path=Tag.A, Mode=OneWay}">
              <Setter TargetName="transparentLine" Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>