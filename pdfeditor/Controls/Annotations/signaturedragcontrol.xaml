<UserControl x:Class="pdfeditor.Controls.Annotations.SignatureDragControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:pdfeditor.Controls.Annotations"
             xmlns:localprop="clr-namespace:pdfeditor.Properties"
             xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
             xmlns:control="clr-namespace:pdfeditor.Controls"
             Focusable="true">
  <FrameworkElement.Resources>
    <cv:BooleanToVisibilityReverseConverter x:Key="BooleanToVisibilityReverseConverter"/>
    <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Style x:Key="btnstyle" TargetType="{x:Type ButtonBase}">
      <Style.Setters>
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="TextBlock.Foreground" Value="{DynamicResource MainViewBtnInfoStyleText}"/>
        <Setter Property="TextBlock.TextAlignment" Value="Left"/>
        <Setter Property="TextBlock.FontSize" Value="12"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ButtonBase}">
              <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" Margin="5,2,5,2"
                      Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="bborder" Property="Border.CornerRadius" Value="3"/>
                  <Setter TargetName="bborder" Value="{DynamicResource SignaturePickerDelBtnBorder}"
                          Property="Border.BorderBrush"/>
                  <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoUnEnabled}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource MainViewUndoRedoUnEnabled}" Property="TextBlock.Foreground"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="true">
                  <Setter TargetName="bborder" Value="{DynamicResource MainViewBtnInfoStyleText}"
                          Property="Border.BorderBrush"/>
                  <Setter Value="{DynamicResource MainViewBtnInfoStyleText}" Property="TextBlock.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style.Setters>
    </Style>
  </FrameworkElement.Resources>
  <Canvas SizeChanged="LayoutRoot_SizeChanged" x:Name="LayoutRoot" Background="Transparent" Width="100"
          Height="100">
    <Rectangle x:Name="AnnotationDrag" Stroke="Blue" StrokeThickness="2" Width="100" Height="100"
               Fill="Transparent" StrokeDashArray="2.5 1.5" Opacity="0.4" UseLayoutRounding="false"
               SnapsToDevicePixels="false" Cursor="SizeAll"/>
    <control:ResizeView x:Name="DragResizeView" ResizeDragStarted="ResizeView_ResizeDragStarted"
                        ResizeDragCompleted="ResizeView_ResizeDragCompleted" CanDragCross="false"
                        DragPlaceholderFill="Transparent" BorderBrush="Transparent" BorderThickness="1"/>
    <Border Name="Border1" Background="{DynamicResource SolidBrushWhiteAndBlack}" BorderBrush="Gray"
            BorderThickness="1" CornerRadius="2" Margin="5,0,0,0"
            Canvas.Left="{Binding ElementName=DragResizeView, Path=Width}">
      <StackPanel x:Name="OperationPanel" Orientation="Vertical">
        <Button Click="Btn_Embed_Click" x:Name="Btn_Embed" Style="{StaticResource btnstyle}">
          <ContentControl.Content>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto" MinWidth="155"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
              </Grid.RowDefinitions>
              <Image Source="{DynamicResource SignatureDargEmbed}" Grid.Column="1" Width="16" Height="16"/>
              <TextBlock Text="{x:Static localprop:Resources.WinSignatureContextMenuFlatten}" HorizontalAlignment="Left"
                         Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="2" FontSize="12"/>
            </Grid>
          </ContentControl.Content>
        </Button>
        <Button Click="Btn_Embed_InBatch_Click" x:Name="Btn_Embed_InBatch" Style="{StaticResource btnstyle}"
                Visibility="{Binding IsApply, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=1}, Converter={StaticResource BooleanToVisibilityConverter}}">
          <ContentControl.Content>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto" MinWidth="155"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
              </Grid.RowDefinitions>
              <Image Source="{DynamicResource SignatureDargEmbedInBatch}" Grid.Column="1" Width="16" Height="16"/>
              <TextBlock Text="{x:Static localprop:Resources.WinSignatureContextMenuFlattenInBatch}"
                         HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="2"
                         FontSize="12"/>
            </Grid>
          </ContentControl.Content>
        </Button>
        <Button Click="Btn_Delete_Click" x:Name="Btn_Delete" Style="{StaticResource btnstyle}">
          <ContentControl.Content>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto" MinWidth="155"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
              </Grid.RowDefinitions>
              <Image Source="{DynamicResource SignatureDelItemButton}" Grid.Column="1" Width="16" Height="16"/>
              <TextBlock Text="{x:Static localprop:Resources.WinSignatureContextMenuDetele}" HorizontalAlignment="Left"
                         Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="2" FontSize="12"/>
            </Grid>
          </ContentControl.Content>
        </Button>
        <Button Click="Btn_Apply_Click" x:Name="Btn_Apply" Style="{StaticResource btnstyle}"
                Visibility="{Binding IsApply, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=1}, Converter={StaticResource BooleanToVisibilityReverseConverter}}">
          <ContentControl.Content>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"/>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="Auto" MinWidth="155"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
              </Grid.RowDefinitions>
              <Image Source="{DynamicResource SignatureDargApply}" Grid.Column="1" Width="16" Height="16"/>
              <TextBlock Text="{x:Static localprop:Resources.WinSignatureContextMenuApplyMulPage}"
                         HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="2"
                         FontSize="12"/>
            </Grid>
          </ContentControl.Content>
        </Button>
        <Button Click="Btn_Delete_InBatch_Click" x:Name="Btn_Delete_InBatch" Style="{StaticResource btnstyle}"
                Visibility="{Binding IsApply, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type UserControl}, AncestorLevel=1}, Converter={StaticResource BooleanToVisibilityConverter}}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="10"/>
              <ColumnDefinition Width="20"/>
              <ColumnDefinition Width="Auto" MinWidth="155"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Image Source="{DynamicResource SignatureDargDeleteBatch}" Grid.Column="1" Width="16" Height="16"/>
            <TextBlock Text="{x:Static localprop:Resources.WinSignatureContextMenuDeteleInBatch}"
                       HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Center" Grid.Column="2"
                       FontSize="12"/>
          </Grid>
        </Button>
      </StackPanel>
    </Border>
  </Canvas>
</UserControl>