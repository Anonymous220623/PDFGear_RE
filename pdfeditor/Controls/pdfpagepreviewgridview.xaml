<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pdfeditor.Controls"
                    xmlns:controls="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel">
  <SolidColorBrush x:Key="PdfPagePreviewGridView.Static.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="PdfPagePreviewGridView.Static.Border" Color="Transparent"/>
  <SolidColorBrush x:Key="PdfPagePreviewGridView.Disabled.Background" Color="Transparent"/>
  <SolidColorBrush x:Key="PdfPagePreviewGridView.Disabled.Border" Color="Transparent"/>
  <Style TargetType="{x:Type local:PdfPagePreviewGridView}">
    <Setter Property="Control.BorderBrush" Value="{StaticResource PdfPagePreviewGridView.Static.Border}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
    <Setter Property="ListBox.SelectionMode" Value="Multiple"/>
    <Setter Property="VirtualizingPanel.IsVirtualizing" Value="true"/>
    <Setter Property="VirtualizingPanel.CacheLength" Value="5"/>
    <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
    <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PdfPagePreviewGridView}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ScrollIntoViewStatus">
                <VisualState x:Name="NotScrolling"/>
                <VisualState x:Name="Scrolling">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ItemPresenter" Storyboard.TargetProperty="Opacity" To="0" Duration="0"/>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Scrolling" To="NotScrolling">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ItemPresenter" Storyboard.TargetProperty="Opacity" To="1"
                                       Duration="0:0:0.12"/>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
              <VisualStateGroup x:Name="DragStates">
                <VisualState x:Name="NotDraging"/>
                <VisualState x:Name="Draging">
                  <Storyboard>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ScrollViewer" Storyboard.TargetProperty="IsHitTestVisible" Duration="0">
                      <DiscreteBooleanKeyFrame KeyTime="0" Value="false"/>
                    </BooleanAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="DragInfoHost" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <ScrollViewer x:Name="ScrollViewer" Padding="{TemplateBinding Control.Padding}" Focusable="false"
                            HorizontalAlignment="Stretch">
                <ItemsPresenter x:Name="ItemPresenter" Margin="12,8,0,0"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" HorizontalAlignment="Center"/>
              </ScrollViewer>
              <Canvas x:Name="DragInfoHost" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" ClipToBounds="true"
                      Visibility="Collapsed">
                <Grid x:Name="InsertPlaceholder" SnapsToDevicePixels="false">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Path Data="M 0,0 L 12,0 7,6 5,6 Z" Fill="Black" SnapsToDevicePixels="false"/>
                  <Rectangle Width="2" VerticalAlignment="Stretch" Fill="Black" SnapsToDevicePixels="false" Grid.Row="1"/>
                  <Path Data="M 0,6 L 12,6 7,0 5,0 Z" Fill="Black" SnapsToDevicePixels="false" Grid.Row="2"/>
                </Grid>
                <ContentPresenter x:Name="DragInfo"/>
              </Canvas>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <controls:VirtualizingWrapPanel/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:PdfPagePreviewGridViewItem}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.MinWidth" Value="80"/>
    <Setter Property="FrameworkElement.MinHeight" Value="80"/>
    <Setter Property="Control.Padding" Value="24,24,24,8"/>
    <Setter Property="FrameworkElement.Margin" Value="10,8,10,4"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PdfPagePreviewGridViewItem}">
          <Grid>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="FocusBorderStates">
                <VisualState x:Name="FocusBorderInvisible"/>
                <VisualState x:Name="FocusBorderVisible">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="FocusBorder" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="FocusBorder" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                    BorderBrush="#FF000000" BorderThickness="1" Opacity="0" IsHitTestVisible="false"/>
            <Border x:Name="Bd" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="4" Margin="1"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="true">
              <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                  ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                <Border x:Name="CheckBoxBorder" Margin="0,0,0,7" Width="16" Height="16" CornerRadius="2"
                        BorderThickness="1" BorderBrush="{DynamicResource MainViewPageCheckBorderBrush}"
                        Background="{DynamicResource MainViewPageCheckBcakground}" HorizontalAlignment="Left"
                        VerticalAlignment="Bottom">
                  <TextBlock x:Name="CheckBoxMark" FontFamily="Segoe MDL2 Assets"
                             Foreground="{DynamicResource MainViewPageCheckText}" Text="îœ¾" HorizontalAlignment="Center"
                             VerticalAlignment="Center" Visibility="Collapsed"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource SignaturePickerBorderBrush}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter TargetName="CheckBoxMark" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="CheckBoxBorder" Value="{DynamicResource MainViewPageCheckBcakground}"
                      Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{DynamicResource MainViewPagesSelectedBackground}"
                      Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{DynamicResource GridViewItemBackground}" Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.Setters>
                <Setter TargetName="Bd" Value="{DynamicResource SignaturePickerBorderBrush}" Property="Border.Background"/>
              </MultiTrigger.Setters>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"
                      Property="TextElement.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>