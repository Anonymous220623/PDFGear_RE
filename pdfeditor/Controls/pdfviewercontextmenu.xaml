<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:hotkeys="clr-namespace:CommomLib.Commom.HotKeys;assembly=CommomLib"
                    xmlns:controls="clr-namespace:CommomLib.Controls;assembly=CommomLib"
                    xmlns:local="clr-namespace:pdfeditor.Controls"
                    xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <BitmapImage x:Key="ToolbarContextMenuSelectedIcon" UriSource="/Style/Resources/Annonate/linestrokeselected.png"/>
  <cv:StringBrushConverter x:Key="StringBrushConverter"/>
  <cv:StringStrokeConverter x:Key="StringStrokeConverter"/>
  <controls:HasHotKeyConverter x:Key="HasHotKeyConverter"/>
  <controls:HotKeyNameConverter x:Key="HotKeyNameConverter"/>
  <controls:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
  <Style TargetType="{x:Type local:PdfViewerContextMenuItem}">
    <Setter Property="HeaderedItemsControl.Header" Value="{Binding Caption}"/>
    <Setter Property="MenuItem.Icon" Value="{Binding Icon}"/>
    <Setter Property="ItemsControl.ItemsSource" Value="{Binding}"/>
    <Setter Property="MenuItem.Command" Value="{Binding Command}"/>
    <Setter Property="MenuItem.CommandParameter" Value="{Binding}"/>
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="Control.FontSize" Value="13"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="MenuItem.IsCheckable" Value="false"/>
    <Setter Property="MenuItem.IsChecked" Value="false"/>
    <Setter Property="hotkeys:HotKeyExtensions.InvokeWhen" Value="{Binding HotKeyInvokeWhen}"/>
    <Setter Property="hotkeys:HotKeyExtensions.InvokeAction" Value="{Binding HotKeyInvokeAction}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Height="36" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="CheckIconColumn" Width="30"/>
              <ColumnDefinition Width="36"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="36"/>
              <ColumnDefinition Width="Auto" MinWidth="25"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="_border" CornerRadius="4" Grid.ColumnSpan="5" HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>
            <Image x:Name="_checkImg" Grid.Column="0" Width="24" Height="24" Stretch="Uniform"
                   Source="{StaticResource ToolbarContextMenuSelectedIcon}" Visibility="Collapsed"/>
            <Image x:Name="_imgicon" Grid.Column="1" Width="24" Height="24" Stretch="Uniform"
                   Source="{TemplateBinding MenuItem.Icon}"/>
            <TextBlock x:Name="_txt" Foreground="{TemplateBinding Control.Foreground}" Grid.Column="2" Margin="4,0"
                       VerticalAlignment="Center" HorizontalAlignment="Left"
                       Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Grid Column="4" Margin="4,0">
              <Path x:Name="_path" Visibility="Collapsed" HorizontalAlignment="Right" VerticalAlignment="Center"
                    Data="M 0,8 L 4,4 0,0 Z" Fill="#7E8A92"/>
              <TextBlock x:Name="TextBlock_Shortcut" Visibility="Collapsed" VerticalAlignment="Center" Opacity="0.5"
                         Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="Right"
                         Text="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(hotkeys:HotKeyExtensions.InvokeWhen), Converter={StaticResource HotKeyNameConverter}}"/>
              <TextBlock x:Name="TextBlock_Shortcut2" VerticalAlignment="Center" Opacity="0.5"
                         Foreground="{TemplateBinding Control.Foreground}" HorizontalAlignment="Right"
                         Text="{Binding HotKeyString}"
                         Visibility="{Binding HotKeyString, Converter={StaticResource StringToVisibilityConverter}}"/>
            </Grid>
            <Popup x:Name="SubMenuPopup" Placement="Right" AllowsTransparency="true" Focusable="false"
                   IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" PopupAnimation="Fade">
              <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <Border x:Name="SubmenuBorder" BorderBrush="#33000000" BorderThickness="1" Margin="2" CornerRadius="8"
                        Background="{DynamicResource SolidBrushWhiteAndBlack}" Padding="4"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
              </ScrollViewer>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="true">
              <Setter TargetName="CheckIconColumn" Property="ColumnDefinition.Width" Value="0"/>
              <Setter TargetName="_path" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
              <Setter TargetName="_txt" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
              <Setter TargetName="_path" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
              <Setter TargetName="_txt" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
              <Setter TargetName="_path" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="_txt" Property="TextBlock.Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="MenuItem.IsCheckable" Value="false">
              <Setter TargetName="CheckIconColumn" Property="ColumnDefinition.Width" Value="0"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsCheckable" Value="true"/>
                <Condition Property="MenuItem.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="_checkImg" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="MenuItem.IsSubmenuOpen" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
            </MultiTrigger>
            <DataTrigger Value="true"
                         Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=(hotkeys:HotKeyExtensions.InvokeWhen), Converter={StaticResource HasHotKeyConverter}}">
              <Setter TargetName="TextBlock_Shortcut" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="TextBlock_Shortcut2" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="_path" Property="UIElement.Visibility" Value="Collapsed"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PdfViewerContextMenuColorMenuStyle" TargetType="{x:Type local:PdfViewerContextMenuItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Height="36" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="CheckIconColumn" Width="30"/>
              <ColumnDefinition Width="36"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="36"/>
              <ColumnDefinition x:Name="ExpandColumn" Width="0"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="_border" CornerRadius="4" Grid.ColumnSpan="5" HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>
            <Image x:Name="_checkImg" Grid.Column="0" Width="24" Height="24" Stretch="Uniform"
                   Source="{StaticResource ToolbarContextMenuSelectedIcon}" Visibility="Collapsed"/>
            <Image x:Name="_imgicon" Grid.Column="1" Width="24" Height="24" Stretch="Uniform"
                   Source="{TemplateBinding MenuItem.Icon}"/>
            <TextBlock x:Name="_txt" Foreground="{DynamicResource ToolBarButtonContextMenu}" Grid.Column="2" Margin="4,0"
                       VerticalAlignment="Center" HorizontalAlignment="Left"
                       Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Grid Column="3" Width="18" Height="18" HorizontalAlignment="Right" VerticalAlignment="Center"
                  Margin="0,0,8,0">
              <Ellipse x:Name="_colorIndicator" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       SnapsToDevicePixels="false" UseLayoutRounding="false"
                       Stroke="{DynamicResource TextBrushWhiteAndBlack}"
                       Fill="{Binding SelectedItem.TagData.MenuItemValue, Converter={StaticResource StringBrushConverter}}"/>
            </Grid>
            <Path x:Name="_path" Visibility="Collapsed" Grid.Column="4" HorizontalAlignment="Right"
                  VerticalAlignment="Center" Margin="4,0" Data="M 0,8 L 4,4 0,0 Z" Fill="#7E8A92"/>
            <Button x:Name="ClickProxy" Grid.ColumnSpan="5" Opacity="0"
                    Content="{TemplateBinding HeaderedItemsControl.Header}" HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch" Command="{TemplateBinding MenuItem.Command}"
                    CommandParameter="{TemplateBinding MenuItem.CommandParameter}"/>
            <Popup x:Name="SubMenuPopup" Placement="Right" AllowsTransparency="true" Focusable="false"
                   IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" PopupAnimation="Fade">
              <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <Border x:Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" Margin="8,2,2,2"
                        CornerRadius="8" Background="{DynamicResource SolidBrushWhiteAndBlack}" Padding="4"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
              </ScrollViewer>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="true">
              <Setter TargetName="CheckIconColumn" Property="ColumnDefinition.Width" Value="0"/>
              <Setter TargetName="_path" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
              <Setter TargetName="_txt" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
              <Setter TargetName="_path" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
              <Setter TargetName="_txt" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
              <Setter TargetName="_path" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="_txt" Property="TextBlock.Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="MenuItem.IsCheckable" Value="false">
              <Setter TargetName="CheckIconColumn" Property="ColumnDefinition.Width" Value="0"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsCheckable" Value="true"/>
                <Condition Property="MenuItem.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="_checkImg" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="MenuItem.IsSubmenuOpen" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PdfViewerContextMenuColorItemStyle" TargetType="{x:Type local:PdfViewerContextMenuItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid Height="36" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="CheckIconColumn" Width="30"/>
              <ColumnDefinition Width="44"/>
              <ColumnDefinition Width="0"/>
              <ColumnDefinition x:Name="CaptionColumn" Width="0"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="_border" CornerRadius="6" Grid.ColumnSpan="4" HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"/>
            <Image x:Name="_checkImg" Grid.Column="0" Width="24" Height="24" Stretch="Uniform"
                   Source="{StaticResource ToolbarContextMenuSelectedIcon}" Visibility="Collapsed"/>
            <Image x:Name="_imgicon" Grid.Column="1" Width="24" Height="24" Stretch="Uniform"
                   Source="{TemplateBinding MenuItem.Icon}"/>
            <Grid Column="1" Width="18" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Margin="8,0,8,0" DataContext="{Binding TagData}">
              <Ellipse x:Name="_colorIndicator" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                       SnapsToDevicePixels="false" UseLayoutRounding="false"
                       Stroke="{DynamicResource TextBrushWhiteAndBlack}"
                       Fill="{Binding MenuItemValue, Converter={StaticResource StringBrushConverter}}"/>
            </Grid>
            <TextBlock x:Name="_txt" Foreground="{DynamicResource ToolBarButtonContextMenu}" Grid.Column="2" Margin="4,0"
                       VerticalAlignment="Center" HorizontalAlignment="Left"
                       Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Path x:Name="_path" Visibility="Collapsed" Grid.Column="3" HorizontalAlignment="Right"
                  VerticalAlignment="Center" Margin="4,0" Data="M 0,8 L 4,4 0,0 Z" Fill="#7E8A92"/>
            <Popup x:Name="SubMenuPopup" Placement="Right" AllowsTransparency="true" Focusable="false"
                   IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}" PopupAnimation="Fade">
              <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                <Border x:Name="SubmenuBorder" BorderBrush="LightGray" BorderThickness="1" Margin="2" CornerRadius="8"
                        Background="{DynamicResource SolidBrushWhiteAndBlack}" Padding="4"
                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
                  <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                </Border>
              </ScrollViewer>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.HasItems" Value="true">
              <Setter TargetName="CheckIconColumn" Property="ColumnDefinition.Width" Value="0"/>
              <Setter TargetName="_path" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
              <Setter TargetName="_txt" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
              <Setter TargetName="_path" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
              <Setter TargetName="_border" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
              <Setter TargetName="_txt" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="TextBlock.Foreground"/>
              <Setter TargetName="_path" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="_txt" Property="TextBlock.Foreground" Value="Gray"/>
            </Trigger>
            <Trigger Property="MenuItem.IsCheckable" Value="false">
              <Setter TargetName="CheckIconColumn" Property="ColumnDefinition.Width" Value="0"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsCheckable" Value="true"/>
                <Condition Property="MenuItem.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="_checkImg" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="HeaderedItemsControl.HasHeader" Value="false">
              <Setter TargetName="CaptionColumn" Property="ColumnDefinition.Width" Value="0"/>
            </Trigger>
            <Trigger Value="{x:Static sys:String.Empty}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="CaptionColumn" Property="ColumnDefinition.Width" Value="0"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="MenuItem.IsSubmenuOpen" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="_border" Property="Border.Background" Value="#FFF0F0"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PdfViewerContextMenuSeparatorStyle" TargetType="{x:Type local:PdfViewerContextMenuItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Separator Height="1" Background="#EEEEEE" HorizontalAlignment="Stretch" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BtnInfoStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.Height" Value="auto"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="TextBlock.Foreground" Value="{DynamicResource MainViewBtnInfoStyleText}"/>
    <Setter Property="TextBlock.FontSize" Value="12"/>
    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    <Setter Property="TextBlock.FontSize" Value="12"/>
    <Setter Property="TextBlock.FontStyle" Value="Normal"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter" Focusable="false"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="bborder" Property="Border.CornerRadius" Value="3"/>
              <Setter TargetName="bborder" Property="Border.BorderBrush" Value="#FFBABA"/>
              <Setter TargetName="bborder" Value="{DynamicResource BtnInfoMouseOverColor}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoUnEnabled}"
                      Property="Border.BorderBrush"/>
              <Setter Value="{DynamicResource MainViewUndoRedoUnEnabled}" Property="TextBlock.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true">
              <Setter TargetName="bborder" Value="{DynamicResource MainViewUndoRedoEnabled}"
                      Property="Border.BorderBrush"/>
              <Setter Value="{DynamicResource MainViewUndoRedoEnabled}" Property="TextBlock.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PdfViewerContextMenuHorizontalButtonStyle"
         TargetType="{x:Type local:PdfViewerContextMenuItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="_border" CornerRadius="4" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center" Height="36"
                        Margin="6,0" Background="{TemplateBinding Control.Background}">
              <Button Style="{StaticResource BtnInfoStyle}" ToolTip="{Binding Caption0}" Command="{Binding Command0}">
                <Grid>
                  <Image Width="24" Height="24" Source="{Binding Icon0}"/>
                </Grid>
              </Button>
              <Button Style="{StaticResource BtnInfoStyle}" ToolTip="{Binding Caption1}" Command="{Binding Command1}">
                <Grid>
                  <Image Width="24" Height="24" Source="{Binding Icon1}"/>
                </Grid>
              </Button>
              <Button Style="{StaticResource BtnInfoStyle}" ToolTip="{Binding Caption2}" Command="{Binding Command2}">
                <Grid>
                  <Image Width="24" Height="24" Source="{Binding Icon2}"/>
                </Grid>
              </Button>
              <Button Style="{StaticResource BtnInfoStyle}" ToolTip="{Binding Caption3}" Command="{Binding Command3}">
                <Grid>
                  <Image Width="24" Height="24" Source="{Binding Icon3}"/>
                </Grid>
              </Button>
            </StackPanel>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <local:PdfViewerContextMenuItemStyleSelector x:Key="PdfViewerContextMenuItemStyleSelector"
                                               ColorItemStyle="{StaticResource PdfViewerContextMenuColorItemStyle}"
                                               ColorMenuStyle="{StaticResource PdfViewerContextMenuColorMenuStyle}"
                                               SeparatorStyle="{StaticResource PdfViewerContextMenuSeparatorStyle}"
                                               HorizontalButtonStyle="{StaticResource PdfViewerContextMenuHorizontalButtonStyle}"/>
  <Style TargetType="{x:Type local:PdfViewerContextMenu}">
    <Setter Property="ContextMenu.Placement" Value="MousePoint"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled"/>
    <Setter Property="TextOptions.TextFormattingMode" Value="Ideal"/>
    <Setter Property="Control.BorderBrush" Value="#33000000"/>
    <Setter Property="Control.Background" Value="{DynamicResource SolidBrushWhiteAndBlack}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="ContextMenu.HasDropShadow" Value="true"/>
    <Setter Property="Control.Padding" Value="4"/>
    <Setter Property="ItemsControl.ItemContainerStyleSelector"
            Value="{StaticResource PdfViewerContextMenuItemStyleSelector}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <Grid>
            <Border x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                    CornerRadius="8" Background="{TemplateBinding Control.Background}"
                    Padding="{TemplateBinding Control.Padding}"
                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle"
                              Grid.IsSharedSizeScope="true" Margin="0"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              KeyboardNavigation.TabNavigation="Cycle"/>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>