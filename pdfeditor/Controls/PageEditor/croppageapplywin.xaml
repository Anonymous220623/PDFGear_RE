<Window x:Class="pdfeditor.Controls.PageEditor.CropPageApplyWin"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pdfeditor.Controls.PageEditor"
        xmlns:localprop="clr-namespace:pdfeditor.Properties"
        xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
        xmlns:edittextbox="clr-namespace:pdfeditor.Controls.PageEditor"
        SizeToContent="WidthAndHeight" WindowStartupLocation="CenterScreen" ResizeMode="NoResize"
        Title="{StaticResource ApplicationTitle}" Height="200" Width="470">
  <FrameworkElement.Resources>
    <cv:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFD2D2D2"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFD2D2D2"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#FFEFEFEF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#FFDFDFDF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ButtonBase.ClickMode" Value="Press"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                    Background="{StaticResource ComboBox.Static.Background}">
              <Border x:Name="splitBorder" SnapsToDevicePixels="true" HorizontalAlignment="Right"
                      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" BorderThickness="1"
                      BorderBrush="Transparent" Margin="0,0,4,0">
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Stroke="{StaticResource ComboBox.Static.Glyph}" Data="M 10,0 L 5,5 0,0 " Margin="0"/>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Shape.Stroke"/>
              </Trigger>
              <DataTrigger Value="true" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
              </DataTrigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Stroke"/>
              </Trigger>
              <DataTrigger Value="true" Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                        Property="Border.BorderBrush"/>
              </DataTrigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Shape.Stroke"/>
              </Trigger>
              <DataTrigger Value="false" Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                        Property="Border.BorderBrush"/>
              </DataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Margin="1" Placement="Bottom" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
          <Border x:Name="dropDownBorder" BorderBrush="#3F000000"
                  Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}" BorderThickness="1"
                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas" HorizontalAlignment="Left" VerticalAlignment="Top" Height="0" Width="0">
                  <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Style="{StaticResource ComboBoxToggleButton}" Grid.ColumnSpan="2"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          IsHitTestVisible="false" Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="EditComboboxStyle" TargetType="{x:Type ComboBox}">
      <Setter Property="Control.Padding" Value="6,4"/>
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
      <Setter Property="ItemsControl.ItemContainerStyle">
        <Setter.Value>
          <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.Padding" Value="6,4"/>
          </Style>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid ShowGridLines="false">
    <Grid.RowDefinitions>
      <RowDefinition Height="15"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="15"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="50"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="Auto" MinWidth="70"/>
      <ColumnDefinition Width="15"/>
      <ColumnDefinition Width="Auto" MinWidth="100"/>
      <ColumnDefinition Width="160"/>
      <ColumnDefinition Width="20"/>
    </Grid.ColumnDefinitions>
    <TextBlock Grid.Row="1" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center"
               Text="{x:Static localprop:Resources.WinLabelRangeContent}"/>
    <RadioButton x:Name="AllPagesRadioButton" Grid.Row="1" Grid.Column="3" FontSize="12" IsChecked="True"
                 GroupName="pageRangeGroup" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                 Content="{x:Static localprop:Resources.WinBtnAllPagesContent}"/>
    <RadioButton x:Name="SelectedPagesRadioButton" Grid.Row="2" Grid.Column="3" GroupName="pageRangeGroup"
                 VerticalContentAlignment="Center" FontSize="12"
                 Content="{x:Static localprop:Resources.WinLabelSelectedpagesContent}"/>
    <edittextbox:PageRangeTextBox x:Name="RangeBox" Grid.Row="2" Grid.Column="4" Height="22" FontSize="12"
                                  VerticalContentAlignment="Center"
                                  IsEnabled="{Binding ElementName=SelectedPagesRadioButton, Path=IsChecked}"/>
    <TextBlock Grid.Row="3" Grid.Column="4" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Bottom"
               Text="{x:Static localprop:Resources.WinPageEgContent}"/>
    <TextBlock Grid.Row="4" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center"
               Text="{x:Static localprop:Resources.WinLabelChildRangeContent}"/>
    <ComboBox x:Name="applyToComboBox" Grid.Row="4" Grid.Column="3" Grid.ColumnSpan="2" Height="25"
              Style="{StaticResource EditComboboxStyle}" VerticalContentAlignment="Center"
              IsEnabled="{Binding ElementName=CurrentPageRadioButton, Path=IsChecked, Converter={StaticResource BooleanReverseConverter}}">
      <ComboBoxItem Content="{x:Static localprop:Resources.WinCbxChildAllPagesContent}" IsSelected="true"/>
      <ComboBoxItem Content="{x:Static localprop:Resources.WinCbxChildOddPagesContent}"/>
      <ComboBoxItem Content="{x:Static localprop:Resources.WinCbxChildEvenPagesContent}"/>
    </ComboBox>
    <Grid Row="5" Column="1" ColumnSpan="4">
      <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
        <Button Click="btnCancel_Click" x:Name="btnCancel" Style="{StaticResource DialogButtonStyle}" FontSize="12"
                Content="{x:Static localprop:Resources.WinBtnCancelContent}" IsCancel="true"/>
        <Button Click="btnOk_Click" x:Name="btnOk" Style="{StaticResource PrimaryDialogButtonStyle}"
                Margin="10,0,0,0" IsDefault="true" FontSize="12"
                Content="{x:Static localprop:Resources.WinBtnOkContent}"/>
      </StackPanel>
    </Grid>
  </Grid>
</Window>