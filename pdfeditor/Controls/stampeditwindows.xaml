<Window x:Class="pdfeditor.Controls.StampEditWindows"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pdfeditor.Controls.Signature"
        xmlns:localprop="clr-namespace:pdfeditor.Properties"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
        xmlns:Themes="clr-namespace:CommomLib.Controls;assembly=CommomLib"
        xmlns:colorpickers="clr-namespace:pdfeditor.Controls.ColorPickers"
        xmlns:cv2="clr-namespace:pdfeditor.Controls.Menus.ToolbarSettings"
        xmlns:stamp="clr-namespace:pdfeditor.Controls.Stamp"
        Title="{x:Static localprop:Resources.WinCustomizeStampNewTiltle}"
        Background="{DynamicResource WindowsBackground}" WindowStartupLocation="CenterScreen" Width="450"
        SizeToContent="Height" ResizeMode="NoResize" UseLayoutRounding="true">
  <FrameworkElement.Resources>
    <Style x:Key="btnStyle" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.Width" Value="80"/>
      <Setter Property="FrameworkElement.Height" Value="32"/>
      <Setter Property="Control.BorderBrush" Value="#EEEEEE"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="bborder" BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="bborder" Property="Border.BorderBrush" Value="#EEEEEE"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="BoxRadioButton" TargetType="{x:Type RadioButton}">
      <Setter Property="Control.Background" Value="Transparent"/>
      <Setter Property="Control.Padding" Value="3 2 3 2"/>
      <Setter Property="Control.BorderThickness" Value="3"/>
      <Setter Property="FrameworkElement.Height" Value="auto"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="Control.BorderBrush" Value="#D2D2D2"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type RadioButton}">
            <Grid x:Name="grid">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Ellipse x:Name="colorout" Fill="Transparent" Margin="0,0,7.5,0" Width="25" Height="25"/>
              <Ellipse x:Name="colorrect" Fill="{TemplateBinding Control.Background}" Width="24" Height="24"
                       Margin="0,0,7,0"/>
              <Border x:Name="_borderChecked" Visibility="Collapsed" Background="Transparent"
                      HorizontalAlignment="Center" VerticalAlignment="Center" Width="16" Height="16">
                <Path Data="M 0,5 L 5,10 13,1 " Margin="-2 2 0 0" Stroke="White" StrokeThickness="3"/>
              </Border>
              <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="colorout" Property="Shape.Stroke" Value="#D2D2D2"/>
                <Setter TargetName="colorout" Property="Shape.StrokeThickness" Value="2"/>
                <Setter TargetName="_borderChecked" Property="UIElement.Visibility" Value="Visible"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="colorout" Property="Shape.Stroke" Value="#D2D2D2"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="btnStyle2" TargetType="{x:Type Button}">
      <Setter Property="Control.BorderBrush" Value="#D2D2D2"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="bborder" SnapsToDevicePixels="true" Background="Transparent">
              <Grid>
                <Grid.ColumnDefinitions>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                </Grid.RowDefinitions>
                <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  Margin="{TemplateBinding FrameworkElement.Margin}" RecognizesAccessKey="true"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
                <Rectangle Name="rect" StrokeDashArray="4 4" Opacity="1" Stroke="{TemplateBinding Control.BorderBrush}"
                           Width="{Binding ElementName=contentPresenter, Path=ActualWidth}"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="rect" Property="Shape.Stroke" Value="#000000"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <cv:ColorBrushConverter x:Key="ColorBrushConverter"/>
    <cv2:ColorIndicatorConverter x:Key="ColorIndicatorConverter"/>
  </FrameworkElement.Resources>
  <Grid x:Name="LayoutRoot" Height="300" UseLayoutRounding="false">
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <Grid Margin="20,0,20,0">
      <FrameworkElement.Resources>
        <Style x:Key="StampPanelHeaderedContentControlStyle" TargetType="{x:Type HeaderedContentControl}">
          <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="120" Width="Auto" SharedSizeGroup="StampPanelHeaderedContentControl_HeaderColumn"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" HorizontalAlignment="Left"
                                    VerticalAlignment="Top"/>
                  <ContentPresenter ContentSource="Content" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Top"/>
                </Grid>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </FrameworkElement.Resources>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <ListBox SelectionChanged="Menus_SelectionChanged" x:Name="Menus" Height="32"
               Background="{DynamicResource WindowsBackground}"
               Foreground="{DynamicResource TextBrushWhiteAndBlack}" HorizontalAlignment="Left"
               VerticalAlignment="Center" VerticalContentAlignment="Bottom" DockPanel.Dock="Left"
               ScrollViewer.VerticalScrollBarVisibility="Disabled"
               ItemContainerStyle="{StaticResource ListBoxItemMenuBarStyle}" BorderThickness="0"
               Margin="-12,0,0,4" ItemsSource="{Binding MainMenus}">
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <WrapPanel Orientation="Horizontal" IsItemsHost="true"/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
          <DataTemplate>
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="2"/>
              </Grid.RowDefinitions>
              <TextBlock Padding="0" FontSize="12" Text="{Binding Title}"/>
              <Border Grid.Row="1" BorderThickness="0,2,0,0" BorderBrush="#CA393B" MaxWidth="50"
                      Visibility="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}, AncestorLevel=1}, Path=IsSelected, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
          </DataTemplate>
        </ItemsControl.ItemTemplate>
      </ListBox>
      <StackPanel x:Name="TextPanel" Grid.Row="1" Visibility="Visible">
        <Border Height="120" BorderThickness="1" BorderBrush="#D2D2D2">
          <stamp:StampDefaultTextPreview x:Name="PreviewImageContainer" Width="300" Height="75" BorderThickness="5.33"
                                         HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
        <HeaderedContentControl Style="{StaticResource StampPanelHeaderedContentControlStyle}" Margin="0,12,0,0" Padding="0,2,0,0"
                                Header="WinStampTypeAppearanceHeader">
          <Border x:Name="colorSelecters" Panel.ZIndex="999">
            <FrameworkElement.Resources>
              <Geometry x:Key="ColorSelectIndicator">
                m1.4186,6.19411l3.55283,3.76507l7.42857,-7.95918
              </Geometry>
              <Style x:Key="MoreColorButtonStyle" TargetType="{x:Type colorpickers:ColorPickerButton}">
                <Setter Property="Control.Background" Value="Transparent"/>
                <Setter Property="Control.BorderBrush" Value="#99000000"/>
                <Setter Property="Control.Foreground" Value="Transparent"/>
                <Setter Property="Control.BorderThickness" Value="0"/>
                <Setter Property="FrameworkElement.Width" Value="20"/>
                <Setter Property="FrameworkElement.Height" Value="20"/>
                <Setter Property="FrameworkElement.MinWidth" Value="0"/>
                <Setter Property="FrameworkElement.MinHeight" Value="0"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
                <Setter Property="colorpickers:ColorPickerButton.Placement" Value="Bottom"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="FrameworkElement.ToolTip"
                        Value="{x:Static localprop:Resources.ColorPickerMoreColorsLabelContent}"/>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type colorpickers:ColorPickerButton}">
                      <Grid Background="Transparent">
                        <Image x:Name="content" Stretch="Uniform" Width="20" Height="20"
                               Source="/Style/Resources/ContextMenu/ToolbarSetting_MoreColor.png" SnapsToDevicePixels="false"
                               UseLayoutRounding="false"/>
                      </Grid>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
              <Style x:Key="ColorListBoxStyle" TargetType="{x:Type ListBox}">
                <Setter Property="Control.BorderBrush" Value="Transparent"/>
                <Setter Property="Control.BorderThickness" Value="0"/>
                <Setter Property="Control.Background" Value="Transparent"/>
                <Setter Property="ItemsControl.ItemsPanel">
                  <Setter.Value>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </Setter.Value>
                </Setter>
                <Setter Property="ItemsControl.ItemContainerStyle">
                  <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}">
                      <Setter Property="FrameworkElement.Width" Value="20"/>
                      <Setter Property="FrameworkElement.Height" Value="20"/>
                      <Setter Property="FrameworkElement.Margin" Value="6,0"/>
                      <Setter Property="Control.Padding" Value="0"/>
                      <Setter Property="Control.BorderBrush" Value="#000000"/>
                      <Setter Property="Control.Template">
                        <Setter.Value>
                          <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Grid Background="Transparent">
                              <Ellipse x:Name="content" Width="20" Height="20" SnapsToDevicePixels="false" UseLayoutRounding="false"
                                       Fill="{Binding Path=., Converter={StaticResource ColorBrushConverter}}"/>
                              <Ellipse x:Name="content3" Width="20" Height="20" SnapsToDevicePixels="false" UseLayoutRounding="false"
                                       Fill="Transparent" Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="0"/>
                              <Viewbox x:Name="SelectedIndicator" Width="12" Height="12" HorizontalAlignment="Left"
                                       VerticalAlignment="Top" Focusable="false" Margin="3.5,5,0,0" Visibility="Collapsed">
                                <Path Data="{StaticResource ColorSelectIndicator}" StrokeThickness="2" StrokeStartLineCap="Round"
                                      StrokeEndLineCap="Round" StrokeLineJoin="Round" Focusable="false"
                                      Stroke="{Binding Path=., Converter={StaticResource ColorIndicatorConverter}}"/>
                              </Viewbox>
                            </Grid>
                            <ControlTemplate.Triggers>
                              <Trigger Property="ListBoxItem.IsSelected" Value="true">
                                <Setter TargetName="SelectedIndicator" Property="UIElement.Visibility" Value="Visible"/>
                              </Trigger>
                            </ControlTemplate.Triggers>
                          </ControlTemplate>
                        </Setter.Value>
                      </Setter>
                    </Style>
                  </Setter.Value>
                </Setter>
              </Style>
              <CompositeCollection x:Key="ColorCollection">
                <Color>#20C48F</Color>
                <Color>#298FEE</Color>
                <Color>#FF6932</Color>
                <Color>#B80000</Color>
              </CompositeCollection>
            </FrameworkElement.Resources>
            <StackPanel Orientation="Horizontal">
              <ListBox SelectionChanged="ForegroundPickerList_SelectionChanged" x:Name="ForegroundPickerList"
                       Style="{StaticResource ColorListBoxStyle}" ItemsSource="{StaticResource ColorCollection}"
                       SelectionMode="Single" SelectedIndex="0"/>
              <colorpickers:ColorPickerButton x:Name="ForegroundPicker" SelectedColorChanged="ForegroundPicker_SelectedColorChanged"
                                              Style="{StaticResource MoreColorButtonStyle}" VerticalAlignment="Center" Margin="6,0,0,0"/>
            </StackPanel>
          </Border>
        </HeaderedContentControl>
        <HeaderedContentControl Style="{StaticResource StampPanelHeaderedContentControlStyle}" Margin="0,12,0,0" Padding="0,2,0,0"
                                Header="{x:Static localprop:Resources.LabelTextContent}">
          <TextBox TextChanged="txt_Text_TextChanged" x:Name="TypeWriterCtrl" Grid.Row="1" Grid.Column="2" Height="22"
                   FontSize="12" FontFamily="Segoe UI" VerticalContentAlignment="Center"
                   Style="{StaticResource DefaultTextBoxStyle}"
                   Themes:TextBoxExtensions.Placeholder="{x:Static localprop:Resources.WinStampSampleText}"/>
        </HeaderedContentControl>
        <HeaderedContentControl Style="{StaticResource StampPanelHeaderedContentControlStyle}" Margin="0,12,0,0" Padding="0,2,0,0"
                                Visibility="Collapsed">
          <HeaderedContentControl.Header>
            <CheckBox Click="DateCheck_Click" x:Name="DateCheck" VerticalAlignment="Center" Margin="0,0,8,0"
                      IsChecked="True" Style="{StaticResource DefaultCheckBoxStyle}">
              <TextBlock Text="WinStampTypeDateFormatCheckbox"/>
            </CheckBox>
          </HeaderedContentControl.Header>
          <ComboBox TextBoxBase.TextChanged="DateFormatComboBox_TextChanged" x:Name="DateFormatComboBox" Width="200"
                    IsEditable="true" HorizontalAlignment="Left" VerticalAlignment="Center" SelectedIndex="0"
                    Visibility="{Binding ElementName=DateCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </HeaderedContentControl>
      </StackPanel>
      <StackPanel x:Name="ImagePanel" Grid.Row="1" Visibility="Visible">
        <Border x:Name="body" Height="160" Background="{DynamicResource SignaturebodyBackground}"
                BorderThickness="1" BorderBrush="{DynamicResource SignaturebodyBorder}">
          <Grid>
            <Button Click="PictureCtrl_Click" x:Name="PictureCtrl" MinWidth="120" Width="Auto" Height="32"
                    Style="{StaticResource btnStyle2}" Background="Transparent" Panel.ZIndex="1">
              <StackPanel Orientation="Horizontal" Margin="15,0,15,0">
                <Border Width="16" Height="16">
                  <Path Width="12" Height="12" Data="M 0,6 L 12,6 M 6,0 L 6,12 "
                        Stroke="{DynamicResource RadioButton.Default.Static.Glyph}" StrokeThickness="2"/>
                </Border>
                <TextBlock Foreground="{DynamicResource TextBrushWhiteAndBlack}" Margin="10,1,0,0" FontSize="12"
                           Text="{x:Static localprop:Resources.WinSignatureBtnAddPictureContent}" VerticalAlignment="Center"/>
              </StackPanel>
            </Button>
            <Image x:Name="showPicture" Width="300" Height="160" Stretch="Uniform"/>
            <Button Click="btnClear_Click" x:Name="btnClear" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    Style="{StaticResource btnStyle}" Background="Transparent" BorderBrush="Transparent"
                    Visibility="{Binding StampClearVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}, Converter={StaticResource BooleanToVisibilityConverter}, UpdateSourceTrigger=PropertyChanged}">
              <StackPanel Orientation="Horizontal">
                <Image Source="/Style/Resources/Annonate/clear.png" Width="20" Height="20"/>
                <TextBlock Foreground="#000000" Margin="1,1,0,0" FontSize="12"
                           Text="{x:Static localprop:Resources.WinSignatureBtnClearContent}" VerticalAlignment="Center"/>
              </StackPanel>
            </Button>
          </Grid>
        </Border>
        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,12,0,0">
          <CheckBox x:Name="ckbRemoveBg" MaxWidth="280" Width="Auto" VerticalAlignment="Center" IsChecked="False"
                    Content="{x:Static localprop:Resources.WinCreateSignatureRemoveBackground}"
                    Style="{StaticResource DefaultCheckBoxStyle}"/>
          <Image x:Name="imgHelp" Grid.Column="1" Source="/Style/Resources/Signature/RemoveBghelp.png"
                 ToolTip="{x:Static localprop:Resources.WinCreateSignatureRemoveBackgroundToolTip}"
                 ToolTipService.Placement="Left" Width="12" Height="12" HorizontalAlignment="Center"
                 Margin="2,0,2,0"/>
        </StackPanel>
      </StackPanel>
    </Grid>
    <Grid Row="1" Height="56">
      <Rectangle Height="1" HorizontalAlignment="Stretch" VerticalAlignment="Top" Fill="#D2D2D2"/>
      <CheckBox x:Name="SaveCheck" IsChecked="True" HorizontalAlignment="Left" VerticalAlignment="Center"
                Margin="20,0" Style="{StaticResource DefaultCheckBoxStyle}">
        <TextBlock Text="{x:Static localprop:Resources.SaveMenuStampSubCustomizeContent}"/>
      </CheckBox>
      <StackPanel Orientation="Horizontal" Margin="20,0" HorizontalAlignment="Right" VerticalAlignment="Center">
        <Button x:Name="btnCancel" Style="{StaticResource DialogButtonStyle}"
                Content="{x:Static localprop:Resources.WinBtnCancelContent}" FontSize="12" IsCancel="true"/>
        <Button x:Name="btnOk" Style="{StaticResource PrimaryDialogButtonStyle}"
                Content="{x:Static localprop:Resources.WinBtnOkContent}" Margin="10,0,0,0" FontSize="12"
                IsDefault="true"
                IsEnabled="{Binding StampClearVisible, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}, AncestorLevel=1}}"/>
      </StackPanel>
    </Grid>
  </Grid>
</Window>