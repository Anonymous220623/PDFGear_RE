<UserControl x:Class="pdfeditor.Controls.Screenshots.ScreenshotCropPageToolbar"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:pdfeditor.Controls.Screenshots"
             xmlns:localprop="clr-namespace:pdfeditor.Properties"
             xmlns:edittextbox="clr-namespace:pdfeditor.Controls.PageEditor"
             xmlns:cv="clr-namespace:pdfeditor.Utils.Converters"
             xmlns:commonLibCtrl="clr-namespace:CommomLib.Controls;assembly=CommomLib"
             TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}">
  <FrameworkElement.Resources>
    <cv:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
    <cv:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="Transparent"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#12FF0000"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#12FF0000"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#1DFF0000"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#1DFF0000"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type ButtonBase}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="4" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}" TargetName="border"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{StaticResource Button.Disabled.Background}" TargetName="border"
                        Property="Border.Background"/>
                <Setter Value="{StaticResource Button.Disabled.Border}" TargetName="border" Property="Border.BorderBrush"/>
                <Setter Value="{StaticResource Button.Disabled.Foreground}" TargetName="contentPresenter"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFD2D2D2"/>
    <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFD2D2D2"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#FFEFEFEF"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#FFCCCCCC"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#FFDFDFDF"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="#FFF0F0F0"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
    <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Control.IsTabStop" Value="false"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ButtonBase.ClickMode" Value="Press"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ToggleButton}">
            <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{StaticResource ComboBox.Static.Border}"
                    Background="{StaticResource ComboBox.Static.Background}">
              <Border x:Name="splitBorder" SnapsToDevicePixels="true" HorizontalAlignment="Right"
                      Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" BorderThickness="1"
                      BorderBrush="Transparent" Margin="0,0,4,0">
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Stroke="{StaticResource ComboBox.Static.Glyph}" Data="M 10,0 L 5,5 0,0 " Margin="0"/>
              </Border>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}" Property="Shape.Stroke"/>
              </Trigger>
              <DataTrigger Value="true" Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"
                        Property="Border.BorderBrush"/>
              </DataTrigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}" Property="Shape.Stroke"/>
              </Trigger>
              <DataTrigger Value="true" Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"
                        Property="Border.BorderBrush"/>
              </DataTrigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}" Property="Shape.Stroke"/>
              </Trigger>
              <DataTrigger Value="false" Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}">
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"
                        Property="Border.BorderBrush"/>
              </DataTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
      <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Margin="1" Placement="Bottom" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
          <Border x:Name="dropDownBorder" BorderBrush="#3F000000"
                  Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}" BorderThickness="1"
                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                <Canvas x:Name="canvas" HorizontalAlignment="Left" VerticalAlignment="Top" Height="0" Width="0">
                  <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </Popup>
        <ToggleButton x:Name="toggleButton" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Style="{StaticResource ComboBoxToggleButton}" Grid.ColumnSpan="2"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ContentPresenter x:Name="contentPresenter" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                          ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                          ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                          IsHitTestVisible="false" Margin="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      </Grid>
      <ControlTemplate.Triggers>
        <Trigger Property="ItemsControl.HasItems" Value="false">
          <Setter TargetName="dropDownBorder" Property="FrameworkElement.Height" Value="95"/>
        </Trigger>
        <MultiTrigger>
          <MultiTrigger.Conditions>
            <Condition Property="ItemsControl.IsGrouping" Value="true"/>
            <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
          </MultiTrigger.Conditions>
          <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        </MultiTrigger>
        <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
          <Setter TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Top"/>
          <Setter TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                  Property="Canvas.Left"/>
        </Trigger>
      </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="EditComboboxStyle" TargetType="{x:Type ComboBox}">
      <Setter Property="Control.Padding" Value="6,4"/>
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.Template" Value="{StaticResource ComboBoxTemplate}"/>
      <Setter Property="ItemsControl.ItemContainerStyle">
        <Setter.Value>
          <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Control.FontSize" Value="12"/>
            <Setter Property="Control.Padding" Value="6,4"/>
          </Style>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Canvas SizeChanged="LayoutRoot_SizeChanged" x:Name="LayoutRoot" Width="100" Height="100">
    <Border x:Name="MenuBorder" BorderBrush="#77000000" HorizontalAlignment="Left" Width="Auto" MinWidth="132">
      <StackPanel Orientation="Vertical" Background="Transparent">
        <Button Click="SelectionButton_Click" x:Name="SelectionButton"
                Background="{DynamicResource WindowsBackground}" Height="36" HorizontalContentAlignment="Left"
                Style="{StaticResource ButtonStyle}" Margin="0,0,0,4">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="7"/>
              <ColumnDefinition Width="25"/>
              <ColumnDefinition Width="Auto" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="32"/>
            </Grid.RowDefinitions>
            <Image Source="{DynamicResource ScreenShotPageRangeImage}" Width="24" Height="24" Grid.Column="1"/>
            <TextBlock Foreground="{DynamicResource CropButtonBackground}" Margin="5,1,0,0" FontSize="12"
                       Text="{x:Static localprop:Resources.MainCropPageContextMenuAdjust}" VerticalAlignment="Center"
                       Grid.Column="2"/>
          </Grid>
        </Button>
        <Button Click="AcceptButton_Click" x:Name="AcceptButton" Background="{DynamicResource WindowsBackground}"
                Height="36" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Left" Margin="0,4,0,4">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="7"/>
              <ColumnDefinition Width="25"/>
              <ColumnDefinition Width="Auto" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Image Source="{DynamicResource ScreenShotPageDoneImage}" Width="24" Height="24" Grid.Column="1"/>
            <TextBlock Foreground="{DynamicResource CropButtonBackground}" Margin="5,1,0,0" FontSize="12"
                       Text="{x:Static localprop:Resources.WinScreenshotToolbarDoneContent}" VerticalAlignment="Center"
                       Grid.Column="2"/>
          </Grid>
        </Button>
        <Button Click="CancelButton_Click" x:Name="CancelButton" Background="{DynamicResource WindowsBackground}"
                Height="36" Style="{StaticResource ButtonStyle}" HorizontalContentAlignment="Left" Margin="0,4,0,4">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="7"/>
              <ColumnDefinition Width="25"/>
              <ColumnDefinition Width="Auto" MinWidth="100"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <Image Source="{DynamicResource ScreenShotPageCancelImage}" Width="24" Height="24" Grid.Column="1"/>
            <TextBlock Foreground="{DynamicResource CropButtonBackground}" Margin="5,1,0,0" FontSize="12"
                       Text="{x:Static localprop:Resources.WinScreenshotToolbarCancelContent}" VerticalAlignment="Center"
                       Grid.Column="2"/>
          </Grid>
        </Button>
      </StackPanel>
    </Border>
    <Border x:Name="SelectionBorder" BorderBrush="Black" Background="{DynamicResource WindowsBackground}"
            Width="Auto" MinWidth="323" Height="124" Visibility="Hidden" BorderThickness="1" Margin="0,5,0,0">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition Height="15"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="20"/>
          <ColumnDefinition MinWidth="40" Width="Auto"/>
          <ColumnDefinition MinWidth="80" Width="Auto"/>
          <ColumnDefinition Width="46"/>
          <ColumnDefinition MinWidth="40" Width="Auto"/>
          <ColumnDefinition MinWidth="80" Width="Auto"/>
          <ColumnDefinition Width="25"/>
        </Grid.ColumnDefinitions>
        <Button Click="btn_SelectionBorder_Close_Click" x:Name="btn_SelectionBorder_Close"
                Style="{StaticResource ButtonStyle}" Grid.Row="0" Grid.ColumnSpan="7" HorizontalAlignment="Right">
          <Image Source="/Style/Resources/ContextMenu/Screenshot_Cancel.png" Width="24" Height="24"/>
        </Button>
        <TextBlock Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="6" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Margin="20,-5,0,0">
          <Run Text="{x:Static localprop:Resources.WinPageMarginLabelContent}"/>
          <Run Text=" (cm)">
          </Run>
        </TextBlock>
        <TextBlock Text="{x:Static localprop:Resources.WinPageMarginTopLabelContent}" Grid.Row="2" Grid.Column="1"
                   HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <commonLibCtrl:NumberBox x:Name="topNumBox" Width="80" Height="22" Grid.Row="2" Grid.Column="2" Margin="8,0,0,0"
                                 IsArrowEnabled="true" NumberFormat="{0:0.00}" SmallChange="0.01" Minimum="0"
                                 Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScreenshotCropPageToolbar}}, Path=PageMargin.TopCm, Mode=TwoWay}"/>
        <TextBlock Text="{x:Static localprop:Resources.WinPageMarginBottomLabelContent}" Grid.Row="2" Grid.Column="4"
                   HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <commonLibCtrl:NumberBox x:Name="bottomNumbox" Width="80" Height="22" Grid.Row="2" Grid.Column="5" Margin="8,0,0,0"
                                 IsArrowEnabled="true" NumberFormat="{0:0.00}" SmallChange="0.01" Minimum="0"
                                 Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScreenshotCropPageToolbar}}, Path=PageMargin.BottomCm, Mode=TwoWay}"/>
        <TextBlock Text="{x:Static localprop:Resources.WinPageMarginLeftLabelContent}" Grid.Row="3" Grid.Column="1"
                   HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <commonLibCtrl:NumberBox x:Name="leftNumbox" Width="80" Height="22" Grid.Row="3" Grid.Column="2" Margin="8,0,0,0"
                                 IsArrowEnabled="true" NumberFormat="{0:0.00}" SmallChange="0.01" Minimum="0"
                                 Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScreenshotCropPageToolbar}}, Path=PageMargin.LeftCm, Mode=TwoWay}"/>
        <TextBlock Text="{x:Static localprop:Resources.WinPageMarginRightLabelContent}" Grid.Row="3" Grid.Column="4"
                   HorizontalAlignment="Left" VerticalAlignment="Center"/>
        <commonLibCtrl:NumberBox x:Name="rightNumbox" Width="80" Height="22" Grid.Row="3" Grid.Column="5" Margin="8,0,0,0"
                                 IsArrowEnabled="true" NumberFormat="{0:0.00}" SmallChange="0.01" Minimum="0"
                                 Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:ScreenshotCropPageToolbar}}, Path=PageMargin.RightCm, Mode=TwoWay}"/>
      </Grid>
    </Border>
    <Border x:Name="PageRangeBorder" BorderBrush="Black" Margin="0,45,0,0" BorderThickness="1"
            Visibility="Collapsed" Background="White" Width="323" Height="228">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition/>
          <RowDefinition Height="15"/>
          <RowDefinition Height="32"/>
          <RowDefinition Height="10"/>
          <RowDefinition Height="40"/>
          <RowDefinition Height="15"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="20"/>
          <ColumnDefinition MinWidth="70"/>
          <ColumnDefinition Width="15"/>
          <ColumnDefinition MinWidth="160"/>
          <ColumnDefinition Width="20"/>
        </Grid.ColumnDefinitions>
        <Button Click="btn_PageRangeBorder_Close_Click" x:Name="btn_PageRangeBorder_Close"
                Style="{StaticResource ButtonStyle}" Grid.Column="0" Grid.ColumnSpan="5"
                HorizontalAlignment="Right">
          <Image Source="/Style/Resources/ContextMenu/Screenshot_Cancel.png" Width="24" Height="24"/>
        </Button>
        <TextBlock Grid.Row="1" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center"
                   Text="PageRange"/>
        <RadioButton x:Name="AllPagesRadioButton" Grid.Row="1" Grid.Column="3" FontSize="12" GroupName="pageRangeGroup"
                     HorizontalAlignment="Left" VerticalContentAlignment="Center" Content="All pages"/>
        <RadioButton x:Name="CurrentPageRadioButton" Grid.Row="2" Grid.Column="3" FontSize="12" IsChecked="True"
                     GroupName="pageRangeGroup" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                     Content="Current Page"/>
        <RadioButton x:Name="SelectedPagesRadioButton" Grid.Row="3" Grid.Column="3" FontSize="12"
                     GroupName="pageRangeGroup" HorizontalAlignment="Left" VerticalContentAlignment="Center"
                     Content="Selected pages"/>
        <edittextbox:PageRangeTextBox x:Name="RangeBox" Grid.Row="4" Height="22" Grid.Column="3" FontSize="12"
                                      VerticalContentAlignment="Center"
                                      IsEnabled="{Binding ElementName=SelectedPagesRadioButton, Path=IsChecked}"/>
        <TextBlock Grid.Row="5" Grid.Column="3" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center"
                   Text="{x:Static localprop:Resources.WinPageEgContent}"/>
        <TextBlock Grid.Row="6" Grid.Column="1" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center"
                   Text="{x:Static localprop:Resources.WinLabelChildRangeContent}"/>
        <ComboBox x:Name="applyToComboBox" Grid.Row="6" Grid.Column="3" Height="25"
                  Style="{StaticResource EditComboboxStyle}" VerticalContentAlignment="Center"
                  IsEnabled="{Binding ElementName=CurrentPageRadioButton, Path=IsChecked, Converter={StaticResource BooleanReverseConverter}}">
          <ComboBoxItem Content="{x:Static localprop:Resources.WinCbxChildAllPagesContent}" IsSelected="true"/>
          <ComboBoxItem Content="{x:Static localprop:Resources.WinCbxChildOddPagesContent}"/>
          <ComboBoxItem Content="{x:Static localprop:Resources.WinCbxChildEvenPagesContent}"/>
        </ComboBox>
        <Button Click="btnPageRangeOk_Click" x:Name="btnPageRangeOk"
                Style="{StaticResource PrimaryDialogButtonStyle}" Grid.Row="8" Grid.ColumnSpan="5"
                HorizontalAlignment="Center" Margin="10,0,0,0" IsDefault="true" FontSize="12"
                Content="{x:Static localprop:Resources.WinBtnOkContent}"/>
      </Grid>
    </Border>
  </Canvas>
</UserControl>