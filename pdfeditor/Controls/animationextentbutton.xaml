<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:pdfeditor.Controls">
  <Style TargetType="{x:Type local:AnimationExtentButton}">
    <Setter Property="Control.Background" Value="{StaticResource DialogButton.Static.Background}"/>
    <Setter Property="Control.BorderBrush" Value="#FFFFFF"/>
    <Setter Property="Control.Foreground" Value="#FFFFFF"/>
    <Setter Property="Control.FontWeight" Value="SemiBold"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="Control.BorderThickness" Value="2"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="12,0,0,0"/>
    <Setter Property="FrameworkElement.Width" Value="40"/>
    <Setter Property="FrameworkElement.Height" Value="40"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:AnimationExtentButton}">
          <Border x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent"
                  SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5">
            <UIElement.RenderTransform>
              <TransformGroup>
                <ScaleTransform x:Name="borderScaleTrans"/>
              </TransformGroup>
            </UIElement.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ContentStates">
                <VisualState x:Name="Normal"/>
                <VisualState x:Name="IsMouseOverState">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity" Duration="0" To="1"/>
                    <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ExtentContentHost" Storyboard.TargetProperty="IsHitTestVisible" Duration="0">
                      <DiscreteBooleanKeyFrame KeyTime="0" Value="true"/>
                    </BooleanAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualStateGroup.Transitions>
                  <VisualTransition From="Normal" To="IsMouseOverState">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity" BeginTime="0:0:0.2"
                                       Duration="0:0:0.1" To="1"/>
                    </Storyboard>
                  </VisualTransition>
                  <VisualTransition From="IsMouseOverState" To="Normal">
                    <Storyboard>
                      <DoubleAnimation Storyboard.TargetName="ContentContainer" Storyboard.TargetProperty="Opacity" Duration="0:0:0.1"
                                       To="0"/>
                    </Storyboard>
                  </VisualTransition>
                </VisualStateGroup.Transitions>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Canvas x:Name="ExtentContentHost" HorizontalAlignment="Left" VerticalAlignment="Top"
                      IsHitTestVisible="false">
                <Path x:Name="ContentBackground" Stroke="{TemplateBinding Control.BorderBrush}"
                      Fill="{TemplateBinding Control.Background}"
                      StrokeThickness="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=BorderThickness.Left}">
                  <Path.Data>
                    <PathGeometry>
                      <PathGeometry.Figures>
                        <PathFigure x:Name="StartFigure" StartPoint="20,0">
                          <ArcSegment x:Name="LeftArc" SweepDirection="Counterclockwise" Point="20,40" Size="20,20"/>
                          <LineSegment x:Name="CenterLine1" Point="20,40"/>
                          <ArcSegment x:Name="RightArc" SweepDirection="Counterclockwise" Point="20,0" Size="20,20"/>
                          <LineSegment x:Name="CenterLine2" Point="20,0"/>
                        </PathFigure>
                      </PathGeometry.Figures>
                    </PathGeometry>
                  </Path.Data>
                </Path>
                <Border x:Name="ContentContainer" Opacity="0" Height="{TemplateBinding FrameworkElement.Height}">
                  <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                </Border>
              </Canvas>
              <ContentPresenter x:Name="headerContentPresenter" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"
                                Content="{TemplateBinding local:AnimationExtentButton.Header}"
                                ContentTemplate="{TemplateBinding local:AnimationExtentButton.HeaderTemplate}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true"/>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <TriggerBase.EnterActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="borderScaleTrans" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"
                                     To="0.95"/>
                    <DoubleAnimation Storyboard.TargetName="borderScaleTrans" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"
                                     To="0.95"/>
                  </Storyboard>
                </BeginStoryboard>
              </TriggerBase.EnterActions>
              <TriggerBase.ExitActions>
                <BeginStoryboard>
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="borderScaleTrans" Storyboard.TargetProperty="ScaleX" Duration="0:0:0.1"
                                     To="1"/>
                    <DoubleAnimation Storyboard.TargetName="borderScaleTrans" Storyboard.TargetProperty="ScaleY" Duration="0:0:0.1"
                                     To="1"/>
                  </Storyboard>
                </BeginStoryboard>
              </TriggerBase.ExitActions>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource DialogButton.Disabled.Background}" TargetName="border"
                      Property="Border.Background"/>
              <Setter Value="{StaticResource DialogButton.Disabled.Border}" TargetName="border"
                      Property="Border.BorderBrush"/>
              <Setter Value="{StaticResource DialogButton.Disabled.Foreground}" TargetName="contentPresenter"
                      Property="TextElement.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>