<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:commonLibControl="clr-namespace:CommomLib.Controls;assembly=CommomLib">
  <Style x:Key="TitleContentStyle" TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <Grid>
            <FrameworkElement.Resources>
              <GridLength x:Key="TitleColumnWidth">120</GridLength>
            </FrameworkElement.Resources>
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="HeaderColumn" Width="{StaticResource TitleColumnWidth}"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="0,2,0,0"/>
            <ContentPresenter Grid.Column="1"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HeaderFooterContentTextBoxStyle" TargetType="{x:Type TextBox}"
         BasedOn="{StaticResource DefaultTextBoxStyle}">
    <Setter Property="FrameworkElement.Margin" Value="0,4,0,0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="60"/>
    <Setter Property="TextBoxBase.AcceptsReturn" Value="true"/>
    <Setter Property="TextBox.TextWrapping" Value="Wrap"/>
  </Style>
  <Style x:Key="NoStyleButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource DialogButtonStyle}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <Border x:Name="border" CornerRadius="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <Grid>
              <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                         Fill="#FF000000" Opacity="0" SnapsToDevicePixels="false" RadiusX="2" RadiusY="2"/>
              <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.04"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="BackgroundBorder" Property="UIElement.Opacity" Value="0.12"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="contentPresenter" Property="UIElement.Opacity" Value="0.6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HFDialogComboboxStyle" TargetType="{x:Type ComboBox}"
         BasedOn="{StaticResource DefaultComboBoxStyle}">
    <Setter Property="Control.Padding" Value="6,4"/>
    <Setter Property="Control.FontSize" Value="12"/>
    <Setter Property="ItemsControl.ItemContainerStyle">
      <Setter.Value>
        <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource DefaultComboBoxItemStyle}">
          <Setter Property="Control.FontSize" Value="12"/>
          <Setter Property="Control.Padding" Value="6,4"/>
        </Style>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="MenuItem.Highlight.Border" Color="Transparent"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Background" Color="#E0E0E0"/>
  <SolidColorBrush x:Key="Menu.Disabled.Foreground" Color="#FF707070"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Background" Color="#0A000000"/>
  <SolidColorBrush x:Key="MenuItem.Highlight.Disabled.Border" Color="#21000000"/>
  <Style x:Key="DropDownMenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="MenuItem.IsCheckable" Value="false"/>
    <Setter Property="Control.Padding" Value="12,6,24,6"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}">
            <Grid VerticalAlignment="Center">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
              <Setter TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Background}"
                      Property="Border.Background"/>
              <Setter TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Border}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="templateRoot" Value="{StaticResource Menu.Disabled.Foreground}"
                      Property="TextElement.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="MenuItem.IsHighlighted" Value="true"/>
                <Condition Property="UIElement.IsEnabled" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Background}"
                      Property="Border.Background"/>
              <Setter TargetName="templateRoot" Value="{StaticResource MenuItem.Highlight.Disabled.Border}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DropDownMenuStyle" TargetType="{x:Type ContextMenu}">
    <Setter Property="Control.Background" Value="#FFFFFF"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static JetSystemColors.MenuTextBrushKey}}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="#FF959595"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="ContextMenu.HasDropShadow"
            Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="ItemsControl.ItemContainerStyle" Value="{StaticResource DropDownMenuItemStyle}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <commonLibControl:SystemDropShadowChrome Name="Shdw" Color="Transparent" SnapsToDevicePixels="true">
            <Border Name="ContextMenuBorder" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="2">
              <ScrollViewer Name="ContextMenuScrollViewer" Grid.ColumnSpan="2" Margin="0,0">
                <Grid RenderOptions.ClearTypeHint="Enabled">
                  <Canvas Height="0" Width="0" HorizontalAlignment="Left" VerticalAlignment="Top">
                    <Rectangle Name="OpaqueRect" Height="{Binding ElementName=ContextMenuBorder, Path=ActualHeight}"
                               Width="{Binding ElementName=ContextMenuBorder, Path=ActualWidth}"
                               Fill="{Binding ElementName=ContextMenuBorder, Path=Background}"/>
                  </Canvas>
                  <ItemsPresenter Name="ItemsPresenter" Margin="{TemplateBinding Control.Padding}"
                                  KeyboardNavigation.DirectionalNavigation="Cycle"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </commonLibControl:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="commonLibControl:SystemDropShadowChrome.Color" Value="#33000000"/>
            </Trigger>
            <Trigger SourceName="ContextMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <Setter TargetName="OpaqueRect" Value="{Binding ElementName=ContextMenuScrollViewer, Path=VerticalOffset}"
                      Property="Canvas.Top"/>
              <Setter TargetName="OpaqueRect"
                      Value="{Binding ElementName=ContextMenuScrollViewer, Path=HorizontalOffset}" Property="Canvas.Left"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>