<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">
  <Thickness x:Key="BorderThickness.Default">1,1,1,1</Thickness>
  <LinearGradientBrush x:Key="ButtonBackgroundBrush.Default" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF2F2F2" Offset="0"/>
    <GradientStop Color="LightGray" Offset="1"/>
    <GradientStop Color="#FFEEEEEE" Offset="0.5"/>
    <GradientStop Color="#FFDBDBDB" Offset="0.5"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonBorderBrush.Default" Color="#FF707070"/>
  <SolidColorBrush x:Key="ForegroundBrush.Default" Color="Black"/>
  <Thickness x:Key="ComboBoxItemBorderThickness.Blue">1</Thickness>
  <Thickness x:Key="ProgressBarBorderThickness.Blue">1</Thickness>
  <SolidColorBrush x:Key="SliderTextBrushKey.Blue" Color="#FFC4C4C4"/>
  <SolidColorBrush x:Key="CheckBoxFillNormal.Default" Color="#F4F4F4"/>
  <SolidColorBrush x:Key="CheckBoxStroke.Default" Color="#8E8F8F"/>
  <SolidColorBrush x:Key="ComboBoxItemBackground.Default" Color="Transparent"/>
  <SolidColorBrush x:Key="ComboBoxItemBorderBrush.Blue" Color="Transparent"/>
  <SolidColorBrush x:Key="RadioButtonBackground.Default" Color="#F4F4F4"/>
  <SolidColorBrush x:Key="ListBorder.Default" Color="#828790"/>
  <SolidColorBrush x:Key="ListBoxBackground.Default" Color="White"/>
  <SolidColorBrush x:Key="ForegroundBrush.Blue" Color="Black"/>
  <LinearGradientBrush x:Key="MenuBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F6F6F6" Offset="0.25"/>
      <GradientStop Color="#EAE8E8" Offset="0.25"/>
      <GradientStop Color="#DCD9D9" Offset="0.8"/>
      <GradientStop Color="White" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuItemSelectionFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#34C5EBFF" Offset="0"/>
      <GradientStop Color="#3481D8FF" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="MenuItemPressedFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#28717070" Offset="0"/>
      <GradientStop Color="#50717070" Offset="0.75"/>
      <GradientStop Color="#90717070" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ContextMenuBackground.Default" Color="#F5F5F5"/>
  <SolidColorBrush x:Key="ContextMenuBorderBrush.Default" Color="#FF959595"/>
  <SolidColorBrush x:Key="ToolTipBorderBrush.Default" Color="#767676"/>
  <LinearGradientBrush x:Key="ToolTipBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0"/>
      <GradientStop Color="#E4E5F0" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TextBoxBorder.Default" StartPoint="0,0" EndPoint="0,20" MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ABADB3" Offset="0.05"/>
      <GradientStop Color="#E2E3EA" Offset="0.07"/>
      <GradientStop Color="#E3E9EF" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#FFBFBFBF" Offset="0.5"/>
      <GradientStop Color="#FF878787" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowHoverFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF0F8FE" Offset="0"/>
      <GradientStop Color="#FFE0F3FE" Offset="0.3"/>
      <GradientStop Color="#FF6FA7C5" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ExpanderArrowPressedFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFDCF0FA" Offset="0"/>
      <GradientStop Color="#FFC5E6F7" Offset="0.2"/>
      <GradientStop Color="#FF5690D0" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="GroupBoxBorderBrush.Default" Color="#D5DFE5"/>
  <SolidColorBrush x:Key="StatusBarBackground.Default" Color="#FFF1EDED"/>
  <LinearGradientBrush x:Key="ProgressBarBorderBrush.Default" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B2B2B2" Offset="0"/>
      <GradientStop Color="#8C8C8C" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarBackground.Default" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#BABABA" Offset="0"/>
      <GradientStop Color="#C7C7C7" Offset="0.5"/>
      <GradientStop Color="#BABABA" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarTopHighlight.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#80FFFFFF" Offset="0.05"/>
      <GradientStop Color="#00FFFFFF" Offset="0.25"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarGlassyHighlight.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
      <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlight.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#90FFFFFF" Offset="0.5385"/>
      <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeft.Default" RadiusX="1" RadiusY="1"
                       RelativeTransform="1,0,0,1,0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0"/>
      <GradientStop Color="#00FFFFC4" Offset="1"/>
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffect.Default" StartPoint="0,1" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0"/>
      <GradientStop Color="#00FFFFC4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRight.Default" RadiusX="1" RadiusY="1"
                       RelativeTransform="1,0,0,1,-0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0"/>
      <GradientStop Color="#00FFFFC4" Offset="1"/>
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeft.Default" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#0C000000" Offset="0"/>
      <GradientStop Color="#20000000" Offset="0.3"/>
      <GradientStop Color="#00000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRight.Default" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0"/>
      <GradientStop Color="#20000000" Offset="0.7"/>
      <GradientStop Color="#0C000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill.Default" MappingMode="Absolute" StartPoint="-100,0"
                       EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0"/>
      <GradientStop Color="#FF000000" Offset="0.4"/>
      <GradientStop Color="#FF000000" Offset="0.6"/>
      <GradientStop Color="#00000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ProgressBarForeground.Default" Color="#01D328"/>
  <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground.Default" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted.Default" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground.Default" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted.Default" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground.Default" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted.Default" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground.Default" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted.Default" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollBackground.Default" Color="#FFE0DFE3"/>
  <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder.Default" Color="#3C7FB1"/>
  <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground.Default" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25"/>
      <GradientStop Color="#5EB4E3" Offset="0.5"/>
      <GradientStop Color="#4C8BB4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted.Default" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25"/>
      <GradientStop Color="#5EB4E3" Offset="0.5"/>
      <GradientStop Color="#4C8BB4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground.Default" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25"/>
      <GradientStop Color="#5EB4E3" Offset="0.5"/>
      <GradientStop Color="#4C8BB4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted.Default" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25"/>
      <GradientStop Color="#5EB4E3" Offset="0.5"/>
      <GradientStop Color="#4C8BB4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder.Default" Color="#2C628B"/>
  <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground.Default" Color="#FFE7EAEA"/>
  <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder.Default" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
      <GradientStop Color="White" Offset=".9"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder.Default" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
      <GradientStop Color="White" Offset=".9"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SliderBackground.Default" Color="Transparent"/>
  <SolidColorBrush x:Key="SliderForeground.Default" Color="#FFC4C4C4"/>
  <SolidColorBrush x:Key="ScrollBarDisabledBackground.Default" Color="#F4F4F4"/>
  <LinearGradientBrush x:Key="HorizontalScrollBarBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1" Offset="0"/>
      <GradientStop Color="#EDEDED" Offset="0.20"/>
      <GradientStop Color="#EDEDED" Offset="0.80"/>
      <GradientStop Color="#E3E3E3" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalScrollBarBackground.Default" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#E1E1E1" Offset="0"/>
      <GradientStop Color="#EDEDED" Offset="0.20"/>
      <GradientStop Color="#EDEDED" Offset="0.80"/>
      <GradientStop Color="#E3E3E3" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabControlNormalBorderBrush.Default" Color="#8C8E94"/>
  <SolidColorBrush x:Key="TabControlBackground.Default" Color="#F9F9F9"/>
  <LinearGradientBrush x:Key="TabItemHotBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#EAF6FD" Offset="0.15"/>
      <GradientStop Color="#D9F0FC" Offset=".5"/>
      <GradientStop Color="#BEE6FD" Offset=".5"/>
      <GradientStop Color="#A7D9F5" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabItemSelectedBackground.Default" Color="#F9F9F9"/>
  <SolidColorBrush x:Key="TabItemDisabledBackground.Default" Color="#F4F4F4"/>
  <SolidColorBrush x:Key="TabItemHotBorderBrush.Default" Color="#3C7FB1"/>
  <SolidColorBrush x:Key="TabItemDisabledBorderBrush.Default" Color="#FFC9C7BA"/>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillEnabled.Default" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0"/>
        <GradientStop Color="#CCD4E9" Offset="0.1"/>
        <GradientStop Color="#4881D2" Offset="0.47"/>
        <GradientStop Color="#001A5A" Offset="0.47"/>
        <GradientStop Color="#007BD6" Offset="0.70"/>
        <GradientStop Color="#54DAFF" Offset="0.85"/>
        <GradientStop Color="#86FFFF" Offset="0.95"/>
        <GradientStop Color="#FFFFFF" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillHover.Default" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.0"/>
        <GradientStop Color="#DFEDF9" Offset="0.1"/>
        <GradientStop Color="#3086E1" Offset="0.47"/>
        <GradientStop Color="#003B91" Offset="0.47"/>
        <GradientStop Color="#1793EF" Offset="0.70"/>
        <GradientStop Color="#5AD4FF" Offset="0.85"/>
        <GradientStop Color="#BDFFFF" Offset="0.95"/>
        <GradientStop Color="#FFFFFF" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillPressed.Default" StartPoint="0.5,0.0" EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#C0D2F5" Offset="0.0"/>
        <GradientStop Color="#5E7A9C" Offset="0.47"/>
        <GradientStop Color="#00062D" Offset="0.47"/>
        <GradientStop Color="#005F9F" Offset="0.70"/>
        <GradientStop Color="#1FA4E2" Offset="0.85"/>
        <GradientStop Color="#61DAFF" Offset="0.95"/>
        <GradientStop Color="#48CFFF" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonFillDisabled.Default" StartPoint="0.5,0.0"
                       EndPoint="0.5,1.0">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0"/>
        <GradientStop Color="#EBEEF5" Offset="0.5"/>
        <GradientStop Color="#D8DDEB" Offset="0.5"/>
        <GradientStop Color="#DFE2F0" Offset="1.0"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationButtonStrokeEnabled.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#6C90C4" Offset="0"/>
        <GradientStop Color="#315BB4" Offset="0.5"/>
        <GradientStop Color="#002091" Offset="0.5"/>
        <GradientStop Color="#08377C" Offset="1"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationArrowStrokeEnabled.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#8AB1FB" Offset="0"/>
      <GradientStop Color="#002874" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationArrowFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFFFFF" Offset="0.5"/>
        <GradientStop Color="#EEEEEE" Offset="0.5"/>
        <GradientStop Color="#B0B0B0" Offset="1"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowDownArrowFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#33B5DA" Offset="0"/>
        <GradientStop Color="#335799" Offset="1"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="NavigationWindowNavigationChromeBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0"/>
      <GradientStop Color="#E3E8F4" Offset="0.5"/>
      <GradientStop Color="#CFD7EB" Offset="0.5"/>
      <GradientStop Color="#E9ECFA" Offset="1.0"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CurrentEntryBackground.Default"
                   Color="{StaticResource {x:Static JetSystemColors.HighlightColorKey}}" Opacity="0.25"/>
  <LinearGradientBrush x:Key="GridViewColumnHeaderBorderBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF2F2F2" Offset="0"/>
      <GradientStop Color="#FFD5D5D5" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFFFF" Offset="0"/>
      <GradientStop Color="#FFFFFFFF" Offset="0.4091"/>
      <GradientStop Color="#FFF7F8F9" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderHoverBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFBDEDFF" Offset="0"/>
      <GradientStop Color="#FFB7E7FB" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="GridViewColumnHeaderPressBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF8DD6F7" Offset="0"/>
      <GradientStop Color="#FF8AD1F5" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemHoverFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFF1FBFF" Offset="0"/>
      <GradientStop Color="#FFD5F1FE" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFD9F4FF" Offset="0"/>
      <GradientStop Color="#FF9BDDFB" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedHoverFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFEAF9FF" Offset="0"/>
      <GradientStop Color="#FFC9EDFD" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListItemSelectedInactiveFill.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFEEEDED" Offset="0"/>
      <GradientStop Color="#FFDDDDDD" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ListViewItemBorderBrush.Default" Color="Transparent"/>
  <SolidColorBrush x:Key="ListViewItemBackground.Default" Color="Transparent"/>
  <LinearGradientBrush x:Key="ToolBarTrayBackground.Default" StartPoint="0,0" EndPoint="688,0" MappingMode="Absolute">
    <GradientBrush.GradientStops>
      <GradientStop Color="#F4F4F4" Offset="0"/>
      <GradientStop Color="#FDFDFD" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolBarLightFill.Default" Color="#F7F7FF"/>
  <SolidColorBrush x:Key="ToolBarMediumFill.Default" Color="#D6DBE7"/>
  <SolidColorBrush x:Key="ToolBarDarkFill.Default" Color="#99CCFF"/>
  <SolidColorBrush x:Key="ToolBarDisabledFill.Default" Color="#F7F7F7"/>
  <SolidColorBrush x:Key="ToolBarDisabledBorder.Default" Color="#B5B2B5"/>
  <SolidColorBrush x:Key="ToolBarSeparatorFill.Default" Color="#C6C7C6"/>
  <SolidColorBrush x:Key="ToolBarButtonHover.Default" Color="#C2E0FF"/>
  <SolidColorBrush x:Key="ToolBarButtonHoverBorder.Default" Color="#3399FF"/>
  <SolidColorBrush x:Key="ToolBarButtonChecked.Default" Color="#E6F0FA"/>
  <SolidColorBrush x:Key="ToolBarButtonPressed.Default" Color="#99CCFF"/>
  <SolidColorBrush x:Key="ToolBarButtonPressedBorder.Default" Color="#3399FF"/>
  <SolidColorBrush x:Key="ToolBarMenuBorder.Default" Color="#808080"/>
  <SolidColorBrush x:Key="ToolBarSubMenuBackground.Default" Color="#FDFDFD"/>
  <SolidColorBrush x:Key="ToolBarMenuCheckFill.Default" Color="#E6F0FA"/>
  <LinearGradientBrush x:Key="ToolBarOpenHeaderBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0"/>
      <GradientStop Color="#FFFBFF" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarHorizontalBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0"/>
      <GradientStop Color="#FFFBFF" Offset="0.5"/>
      <GradientStop Color="#F7F7F7" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarVerticalBackground.Default" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0"/>
      <GradientStop Color="#FFFBFF" Offset="0.5"/>
      <GradientStop Color="#F7F7F7" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground.Default" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ECECEC" Offset="0"/>
      <GradientStop Color="#DDDDDD" Offset="0.5"/>
      <GradientStop Color="#A0A0A0" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground.Default" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#ECECEC" Offset="0"/>
      <GradientStop Color="#DDDDDD" Offset="0.5"/>
      <GradientStop Color="#A0A0A0" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SeparatorBackground.Default" Color="LightGray"/>
  <SolidColorBrush x:Key="DefaultCornerBackground" Color="#EDEDED"/>
  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
  </Style>
  <Style BasedOn="{StaticResource DefaultButtonStyle}" TargetType="{x:Type Button}"/>
  <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#F3F3F3" Offset="0"/>
    <GradientStop Color="#EBEBEB" Offset="0.5"/>
    <GradientStop Color="#DDDDDD" Offset="0.5"/>
    <GradientStop Color="#CDCDCD" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
  <Style x:Key="DefaultToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                              Background="{TemplateBinding Control.Background}"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                              RenderDefaulted="{TemplateBinding Button.IsDefaulted}" UIElement.SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.Padding" Value="11,8,11,8"/>
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderMouseOver" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderDefaulted" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="Control.Foreground" Value="#ADADAD"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultToggleButtonStyle}" TargetType="{x:Type ToggleButton}"/>
  <Style x:Key="DefaultRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <theme:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                              Background="{TemplateBinding Control.Background}"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                              RenderDefaulted="{TemplateBinding Button.IsDefaulted}" UIElement.SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.Padding" Value="11,8,11,8"/>
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderMouseOver" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderDefaulted" Value="true"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="Control.Foreground" Value="#ADADAD"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultRepeatButtonStyle}" TargetType="{x:Type RepeatButton}"/>
  <Style x:Key="CheckRadioFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                     SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="EmptyCheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="CheckInnerBorderBrush" Color="#FFF4F4F4"/>
  <LinearGradientBrush x:Key="CheckBoxInnerFillBrush" EndPoint="0.956,0.926" StartPoint="0.184,-0.291">
    <GradientStop Color="#FFCBCFD5" Offset="0.213"/>
    <GradientStop Color="#FFF7F7F7" Offset="0.769"/>
    <GradientStop Color="#FFF7F7F7" Offset="0.925"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFB1B6BB" Offset="0"/>
    <GradientStop Color="#FFE0E1E2" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckBoxBorderBrushHover" Color="#FF2C628B"/>
  <SolidColorBrush x:Key="CheckBoxInnerPressedBackgroundBrush" Color="#FFC2E4F6"/>
  <SolidColorBrush x:Key="PressedBorderBrush" Color="#FF54A6D5"/>
  <SolidColorBrush x:Key="PressedBackgroundBrush" Color="#FF7FBADC"/>
  <SolidColorBrush x:Key="PathFill" Color="#FF31347C"/>
  <Style x:Key="TouchCheckRadioFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="28,2,-2,2" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                     SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="TouchCheckBoxTemplate" TargetType="{x:Type CheckBox}">
    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
      <BulletDecorator.Bullet>
        <Border x:Name="border1" Width="30" Height="30" BorderBrush="{TemplateBinding Control.BorderBrush}"
                BorderThickness="{TemplateBinding Control.BorderThickness}"
                Background="{TemplateBinding Control.Background}">
          <Border x:Name="border2" BorderBrush="{StaticResource CheckInnerBorderBrush}" BorderThickness="2">
            <Border x:Name="border3" BorderThickness="1" Background="{StaticResource CheckBoxInnerFillBrush}"
                    BorderBrush="{StaticResource CheckBoxInnerBorderBrush}">
              <Path x:Name="path" Data="M 1051.2271,374.845 L 1057.6155,380.27524 1069.755,363.02576 " Height="23"
                    Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" Width="25"
                    StrokeThickness="4"/>
            </Border>
          </Border>
        </Border>
      </BulletDecorator.Bullet>
      <ContentPresenter Margin="{TemplateBinding Control.Padding}" TextBlock.FontSize="18"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="ContentControl.HasContent" Value="true">
        <Setter Value="{StaticResource TouchCheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
        <Setter Property="Control.Padding" Value="4,0,0,0"/>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Setter TargetName="path" Value="{StaticResource PathFill}" Property="Shape.Stroke"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="border1" Value="{StaticResource CheckBoxBorderBrushHover}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border2" Value="{StaticResource CheckBoxInnerPressedBackgroundBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="border3" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
        <Setter TargetName="border3" Value="{StaticResource PressedBackgroundBrush}" Property="Border.Background"/>
      </Trigger>
      <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
        <Setter TargetName="border3" Value="{StaticResource PathFill}" Property="Border.Background"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBrush.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonBorderBrush.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                                  RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                  RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                  IsChecked="{TemplateBinding ToggleButton.IsChecked}"/>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="true">
              <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
              <Setter Property="Control.Padding" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
        <Setter Property="Control.Padding" Value="5,2,0,0"/>
        <Setter Property="Control.Template" Value="{StaticResource TouchCheckBoxTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultCheckBoxStyle}" TargetType="{x:Type CheckBox}"/>
  <DataTemplate DataType="{x:Type CollectionViewGroup}">
    <TextBlock Text="{Binding Path=Name}"/>
  </DataTemplate>
  <Geometry x:Key="DownArrowGeometry">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <Style x:Key="ComboBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                              Background="{TemplateBinding Control.Background}"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}" UIElement.SnapsToDevicePixels="true">
            <Grid HorizontalAlignment="Right"
                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center"
                    Margin="3,1,0,0" VerticalAlignment="Center"/>
            </Grid>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
    <GradientStop Color="#ABADB3" Offset="0.05"/>
    <GradientStop Color="#E2E3EA" Offset="0.07"/>
    <GradientStop Color="#E3E9EF" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <theme:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                              Background="{TemplateBinding Control.Background}"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="false"
                              UIElement.SnapsToDevicePixels="true"
                              FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center"
                  Margin="0,1,0,0" VerticalAlignment="Center"/>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="theme:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Grid x:Name="Placement" SnapsToDevicePixels="true">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
             PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
             Placement="Bottom"
             IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
        <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                      FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                      FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=Placement}">
          <Border x:Name="DropDownBorder"
                  BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                  Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
            <ScrollViewer x:Name="DropDownScrollViewer">
              <Grid>
                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                  <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                             Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                             Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                </Canvas>
                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
            </ScrollViewer>
          </Border>
        </theme:SystemDropShadowChrome>
      </Popup>
      <theme:ListBoxChrome x:Name="Border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                           BorderThickness="{TemplateBinding Control.BorderThickness}"
                           Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                           RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                           RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"/>
      <TextBox x:Name="PART_EditableTextBox"
               HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
               Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
               VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
               IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
      <ToggleButton Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
        <Setter Property="Control.Foreground" Value="Black"/>
      </Trigger>
      <Trigger Property="ComboBox.IsDropDownOpen" Value="true">
        <Setter TargetName="Border" Property="theme:ListBoxChrome.RenderFocused" Value="true"/>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="false">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
        <Setter Property="Control.Background" Value="#FFF4F4F4"/>
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
        <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
      </Trigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Top"/>
        <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Left"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="DefaultComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="4,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                            FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                            FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                <Border x:Name="DropDownBorder"
                        BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                        Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
                  <ScrollViewer x:Name="DropDownScrollViewer"
                                CanContentScroll="{Binding Path=(ScrollViewer.CanContentScroll), RelativeSource={RelativeSource TemplatedParent}}">
                    <Grid>
                      <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                   Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                   Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                      </Canvas>
                      <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                          Style="{StaticResource ComboBoxReadonlyToggleButton}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                              ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                              Margin="{TemplateBinding Control.Padding}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              <Setter Property="Control.Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                      Property="Canvas.Top"/>
              <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                      Property="Canvas.Left"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="true">
        <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="Control.Padding" Value="3"/>
        <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultComboBoxStyle}" TargetType="{x:Type ComboBox}"/>
  <Style x:Key="DefaultComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Control.Padding" Value="3,0,3,0"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxItemBackground.Default}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultComboBoxItemStyle}" TargetType="{x:Type ComboBoxItem}"/>
  <RadialGradientBrush x:Key="RadioButtonPathFill" GradientOrigin="0.379,0.326" RadiusY="0.519" RadiusX="0.519">
    <GradientStop Color="#FFB0F4FF" Offset="0"/>
    <GradientStop Color="#FF1480BB" Offset="1"/>
  </RadialGradientBrush>
  <ControlTemplate x:Key="TouchRadioButtonTemplate" TargetType="{x:Type RadioButton}">
    <BulletDecorator Background="Transparent">
      <BulletDecorator.Bullet>
        <Grid>
          <Ellipse x:Name="ellipse1" Width="30" Height="30" Fill="{TemplateBinding Control.Background}"
                   StrokeThickness="{TemplateBinding Control.BorderThickness}"
                   Stroke="{TemplateBinding Control.BorderBrush}"/>
          <Ellipse x:Name="ellipse2" Stroke="{StaticResource CheckInnerBorderBrush}"
                   Fill="{StaticResource CheckBoxInnerFillBrush}" Width="25" Height="25"/>
          <Ellipse x:Name="ellipse" Width="15" Height="15"/>
        </Grid>
      </BulletDecorator.Bullet>
      <ContentPresenter Margin="{TemplateBinding Control.Padding}" TextBlock.FontSize="18"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        RecognizesAccessKey="true"/>
    </BulletDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="ContentControl.HasContent" Value="true">
        <Setter Value="{StaticResource TouchCheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
        <Setter Property="Control.Padding" Value="4,0,0,0"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
      <Trigger Property="ToggleButton.IsChecked" Value="True">
        <Setter TargetName="ellipse" Value="{StaticResource RadioButtonPathFill}" Property="Shape.Fill"/>
        <Setter TargetName="ellipse" Property="Shape.Stroke" Value="#FF224762"/>
        <Setter TargetName="ellipse2" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="DefaultRadioButtonStyle" TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource RadioButtonBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxStroke.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <theme:BulletChrome Background="{TemplateBinding Control.Background}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}" IsRound="true"
                                  RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                  RenderPressed="{TemplateBinding ButtonBase.IsPressed}"
                                  IsChecked="{TemplateBinding ToggleButton.IsChecked}"/>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="true">
              <Setter Value="{StaticResource CheckRadioFocusVisual}" Property="FrameworkElement.FocusVisualStyle"/>
              <Setter Property="Control.Padding" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
        <Setter Property="Control.Template" Value="{StaticResource TouchRadioButtonTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultRadioButtonStyle}" TargetType="{x:Type RadioButton}"/>
  <Style x:Key="DefualtListBoxStyle" TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true" Padding="1">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="false">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefualtListBoxStyle}" TargetType="{x:Type ListBox}"/>
  <Style x:Key="DefaultListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="Control.Padding" Value="2,0,0,0"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"
                              VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultListBoxItemStyle}" TargetType="{x:Type ListBoxItem}"/>
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  <Geometry x:Key="DownArrow">
    M 0,0 L 3.5,4 L 7,0 Z
  </Geometry>
  <Geometry x:Key="UpArrow">
    M 0,4 L 3.5,0 L 7,4 Z
  </Geometry>
  <Geometry x:Key="RightArrow">
    M 0,0 L 4,3.5 L 0,7 Z
  </Geometry>
  <Geometry x:Key="Checkmark">
    M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z
  </Geometry>
  <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}"
                   TargetType="{x:Type ContentControl}">
    <Border Background="#F5F5F5" BorderBrush="#FF959595" BorderThickness="1">
      <Grid>
        <Rectangle Fill="#F1F1F1" HorizontalAlignment="Left" Width="28" Margin="2" RadiusX="2" RadiusY="2"/>
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#E2E3E3"/>
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="31,2,0,2" Fill="White"/>
        <ContentPresenter Grid.ColumnSpan="2" Margin="1,0"/>
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="DefaultMenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ButtonBase.ClickMode" Value="Hover"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Background="Transparent" SnapsToDevicePixels="true">
            <Rectangle x:Name="R1" DockPanel.Dock="Right" Width="1" Fill="Transparent"/>
            <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Height="1" Fill="Transparent"/>
            <Rectangle x:Name="L1" DockPanel.Dock="Left" Width="1" Fill="Transparent"/>
            <Rectangle x:Name="T1" DockPanel.Dock="Top" Height="1" Fill="Transparent"/>
            <ContentPresenter x:Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="R1" Value="{DynamicResource {x:Static JetSystemColors.ControlLightLightBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="B1" Value="{DynamicResource {x:Static JetSystemColors.ControlLightLightBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="L1" Value="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="T1" Value="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="ContentContainer" Property="FrameworkElement.Margin" Value="3,3,1,1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultMenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}"/>
            </Border>
            <RepeatButton Style="{StaticResource DefaultMenuScrollButton}" Grid.Row="0" Grid.Column="0"
                          Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static JetSystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource UpArrow}"/>
            </RepeatButton>
            <RepeatButton Style="{StaticResource DefaultMenuScrollButton}" Grid.Row="2" Grid.Column="0"
                          Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static JetSystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource DownArrow}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Grid SnapsToDevicePixels="true" Margin="0,6,0,4">
            <Rectangle Height="1" Margin="30,0,1,1" Fill="#E0E0E0"/>
            <Rectangle Height="1" Margin="30,1,1,0" Fill="White"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultMenuStyle" TargetType="{x:Type Menu}">
    <Setter Property="Control.Background" Value="{StaticResource MenuBackground.Default}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultMenuStyle}" TargetType="{x:Type Menu}"/>
  <Style x:Key="DefaultMenuItemStyle" TargetType="{x:Type MenuItem}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                       Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle x:Name="InnerBorder" Margin="1" RadiusX="2" RadiusY="2"/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="37"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="17"/>
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="Icon" Margin="1" Height="16" Width="16" VerticalAlignment="Center" ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <Border x:Name="GlyphPanel" Background="#E6EFF4" BorderBrush="#CDD3E6" BorderThickness="1" CornerRadius="3"
                      Margin="1" Visibility="Hidden" Width="22" Height="22">
                <Path Name="Glyph" Width="9" Height="11" Fill="#0C12A1" FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark}"/>
              </Border>
              <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}"
                         Margin="{TemplateBinding Control.Padding}"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="true">
              <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
              <Setter TargetName="Bg" Value="{StaticResource MenuItemSelectionFill.Default}" Property="Shape.Fill"/>
              <Setter TargetName="Bg" Property="Shape.Stroke" Value="#8071CBF1"/>
              <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#40FFFFFF"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="Control.Foreground" Value="#FF9A9A9A"/>
              <Setter TargetName="GlyphPanel" Property="Border.Background" Value="#EEE9E9"/>
              <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="#DBD6D6"/>
              <Setter TargetName="Glyph" Property="Shape.Fill" Value="#848589"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="Control.Padding" Value="7,2,8,3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2"/>
                <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                  <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Path x:Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"
                        Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight"
                        Data="{StaticResource Checkmark}"/>
                  <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </DockPanel>
                <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                       Placement="Bottom" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                    <ContentControl Name="SubMenuBorder" IsTabStop="false"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}">
                      <ScrollViewer CanContentScroll="true" Style="{StaticResource DefaultMenuScrollViewer}">
                        <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                      </ScrollViewer>
                    </ContentControl>
                  </theme:SystemDropShadowChrome>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                  <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="true">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                  <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="Bg" Property="Shape.Stroke" Value="#90717070"/>
                  <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#50FFFFFF"/>
                  <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50FFFFFF"/>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070"/>
                  <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedFill.Default}" Property="Shape.Fill"/>
                  <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272"/>
                </Trigger>
                <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                  <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070"/>
                  <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedFill.Default}" Property="Shape.Fill"/>
                  <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="Control.Foreground" Value="#FF9A9A9A"/>
                  <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#848589"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="Control.Padding" Value="7,2,8,3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2"/>
                <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                  <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Path x:Name="GlyphPanel" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"
                        Fill="{TemplateBinding Control.Foreground}" FlowDirection="LeftToRight"
                        Data="{StaticResource Checkmark}"/>
                  <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </DockPanel>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="true">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="Bg" Property="Shape.Stroke" Value="#90717070"/>
                  <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#50FFFFFF"/>
                  <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50FFFFFF"/>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter TargetName="Bg" Property="Shape.Stroke" Value="#E0717070"/>
                  <Setter TargetName="Bg" Value="{StaticResource MenuItemPressedFill.Default}" Property="Shape.Fill"/>
                  <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#50747272"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="Control.Foreground" Value="#FF9A9A9A"/>
                  <Setter TargetName="GlyphPanel" Property="Shape.Fill" Value="#848589"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="Control.Padding" Value="8,3,8,3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid SnapsToDevicePixels="true">
                <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                <Rectangle x:Name="InnerBorder" Margin="1" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                  </Grid.ColumnDefinitions>
                  <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Border x:Name="GlyphPanel" Background="#E6EFF4" BorderBrush="#CDD3E6" BorderThickness="1" CornerRadius="3"
                          Margin="1" Visibility="Hidden" Width="22" Height="22">
                    <Path Name="Glyph" Width="9" Height="11" Fill="#0C12A1" FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                  </Border>
                  <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                    RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}"
                             Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed"/>
                  <Path Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0"
                        Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                </Grid>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Right" VerticalOffset="-3"
                       HorizontalOffset="-2" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                    <ContentControl Name="SubMenuBorder" IsTabStop="false"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}">
                      <ScrollViewer CanContentScroll="true" Style="{StaticResource DefaultMenuScrollViewer}">
                        <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                      </ScrollViewer>
                    </ContentControl>
                  </theme:SystemDropShadowChrome>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                  <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="InnerBorder" Property="Shape.Stroke" Value="#D1DBF4FF"/>
                </Trigger>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="true">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                  <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource MenuItemSelectionFill.Default}" Property="Shape.Fill"/>
                  <Setter TargetName="Bg" Property="Shape.Stroke" Value="#8571CBF1"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="Control.Foreground" Value="#FF9A9A9A"/>
                  <Setter TargetName="GlyphPanel" Property="Border.Background" Value="#EEE9E9"/>
                  <Setter TargetName="GlyphPanel" Property="Border.BorderBrush" Value="#DBD6D6"/>
                  <Setter TargetName="Glyph" Property="Shape.Fill" Value="#848589"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="Control.Padding" Value="8,3,8,3"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultMenuItemStyle}" TargetType="{x:Type MenuItem}"/>
  <Style x:Key="DefaultContextMenuStyle" TargetType="{x:Type ContextMenu}">
    <Setter Property="Control.Background" Value="{StaticResource ContextMenuBackground.Default}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ContextMenuBorderBrush.Default}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="ContextMenu.HasDropShadow"
            Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent" UIElement.SnapsToDevicePixels="true">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid>
                <Rectangle Fill="#F1F1F1" HorizontalAlignment="Left" Width="28" Margin="2" RadiusX="2" RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2" Fill="#E2E3E3"/>
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="31,2,0,2" Fill="White"/>
                <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2" Margin="1,0"
                              Style="{StaticResource DefaultMenuScrollViewer}">
                  <ItemsPresenter Margin="{TemplateBinding Control.Padding}" KeyboardNavigation.DirectionalNavigation="Cycle"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </ScrollViewer>
              </Grid>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenu.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultContextMenuStyle}" TargetType="{x:Type ContextMenu}"/>
  <Style x:Key="DefaultToolTipStyle" TargetType="{x:Type ToolTip}">
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ToolTipBorderBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource ToolTipBackground.Default}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
    <Setter Property="Control.Padding" Value="5,1,5,4"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent" UIElement.SnapsToDevicePixels="true"
                                        CornerRadius="2">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                    CornerRadius="2">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultToolTipStyle}" TargetType="{x:Type ToolTip}"/>
  <Style x:Key="DefaultTreeViewStyle" TargetType="{x:Type TreeView}">
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <ScrollViewer Background="{TemplateBinding Control.Background}" Focusable="false" CanContentScroll="false"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Padding="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTreeViewStyle}" TargetType="{x:Type TreeView}"/>
  <PathGeometry x:Key="TreeArrow">
    <PathGeometry.Figures>
      <PathFigureCollection>
        <PathFigure IsFilled="true" StartPoint="0 0" IsClosed="true">
          <PathFigure.Segments>
            <PathSegmentCollection>
              <LineSegment Point="0 6"/>
              <LineSegment Point="6 0"/>
            </PathSegmentCollection>
          </PathFigure.Segments>
        </PathFigure>
      </PathFigureCollection>
    </PathGeometry.Figures>
  </PathGeometry>
  <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Width" Value="16"/>
    <Setter Property="FrameworkElement.Height" Value="16"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Width="16" Height="16" Background="Transparent" Padding="5,5,5,5">
            <Path x:Name="ExpandPath" Fill="Transparent" Stroke="#FF989898" Data="{StaticResource TreeArrow}">
              <UIElement.RenderTransform>
                <RotateTransform Angle="135" CenterX="3" CenterY="3"/>
              </UIElement.RenderTransform>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA"/>
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                <Setter.Value>
                  <RotateTransform Angle="180" CenterX="3" CenterY="3"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959"/>
              <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.Padding" Value="1,0,0,0"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" ClickMode="Press"
                          IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
            <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="TreeViewItem.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTreeViewItemStyle}" TargetType="{x:Type TreeViewItem}"/>
  <SolidColorBrush x:Key="DisabledBackground" Color="#FFF4F4F4"/>
  <SolidColorBrush x:Key="DisabledForeground" Color="#FFBEB6BC"/>
  <SolidColorBrush x:Key="DisabledBorderBrush" Color="#FFADB2B5"/>
  <SolidColorBrush x:Key="ReadOnlyBackground" Color="#FFF4F4F4"/>
  <SolidColorBrush x:Key="ReadOnlyForeground" Color="#FF6D6D6D"/>
  <SolidColorBrush x:Key="ReadOnlyBorderBrush" Color="#FFADB2B5"/>
  <Style x:Key="DefaultTextBoxStyle" TargetType="{x:Type TextBox}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <theme:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                               UIElement.SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource DisabledBackground}" Property="Control.Background"/>
              <Setter Value="{StaticResource DisabledBorderBrush}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource DisabledForeground}" Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="TextBoxBase.IsReadOnly" Value="true">
              <Setter Value="{StaticResource ReadOnlyBackground}" Property="Control.Background"/>
              <Setter Value="{StaticResource ReadOnlyBorderBrush}" Property="Control.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTextBoxStyle}" TargetType="{x:Type TextBox}"/>
  <Style x:Key="DefualtPasswordBoxStyle" TargetType="{x:Type PasswordBox}">
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder.Default}"/>
    <Setter Property="Control.FontFamily" Value="Times New Roman"/>
    <Setter Property="PasswordBox.PasswordChar" Value="●"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <theme:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                               UIElement.SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                          VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource DisabledBackground}" Property="Control.Background"/>
              <Setter Value="{StaticResource DisabledBorderBrush}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource DisabledForeground}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefualtPasswordBoxStyle}" TargetType="{x:Type PasswordBox}"/>
  <Style x:Key="ExpanderHeaderFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Border>
            <Rectangle Margin="0" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" SnapsToDevicePixels="true"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle" Width="19" Height="19" Stroke="DarkGray" HorizontalAlignment="Center"
                       VerticalAlignment="Center" Fill="{StaticResource ExpanderArrowFill.Default}"/>
              <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#666"
                    StrokeThickness="2" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1"/>
              <Setter Value="{StaticResource ExpanderArrowHoverFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#222"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ExpanderArrowPressedFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366"/>
            </Trigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="circle" Property="FrameworkElement.Width" Value="45"/>
              <Setter TargetName="circle" Property="FrameworkElement.Height" Value="45"/>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,3 L 11,12 20,3 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,11 L 11,1 20,11 "/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="DarkGray" HorizontalAlignment="Center"
                         VerticalAlignment="Center" Fill="{StaticResource ExpanderArrowFill.Default}"/>
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#666"
                      StrokeThickness="2" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              </Grid>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1"/>
              <Setter Value="{StaticResource ExpanderArrowHoverFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#222"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ExpanderArrowPressedFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366"/>
            </Trigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="circle" Property="FrameworkElement.Width" Value="45"/>
              <Setter TargetName="circle" Property="FrameworkElement.Height" Value="45"/>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,3 L 11,12 20,3 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,11 L 11,1 20,11 "/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="DarkGray" HorizontalAlignment="Center"
                         VerticalAlignment="Center" Fill="{StaticResource ExpanderArrowFill.Default}"/>
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#666"
                      StrokeThickness="2" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1"/>
              <Setter Value="{StaticResource ExpanderArrowHoverFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#222"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ExpanderArrowPressedFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366"/>
            </Trigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="circle" Property="FrameworkElement.Width" Value="45"/>
              <Setter TargetName="circle" Property="FrameworkElement.Height" Value="45"/>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,3 L 11,12 20,3 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,11 L 11,1 20,11 "/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="DarkGray" HorizontalAlignment="Center"
                         VerticalAlignment="Center" Fill="{StaticResource ExpanderArrowFill.Default}"/>
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center" Stroke="#666"
                      StrokeThickness="2" SnapsToDevicePixels="false" Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF3C7FB1"/>
              <Setter Value="{StaticResource ExpanderArrowHoverFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#222"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#FF526C7B"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ExpanderArrowPressedFill.Default}" TargetName="circle" Property="Shape.Fill"/>
              <Setter TargetName="arrow" Property="Shape.Stroke" Value="#FF003366"/>
            </Trigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="circle" Property="FrameworkElement.Width" Value="45"/>
              <Setter TargetName="circle" Property="FrameworkElement.Height" Value="45"/>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,3 L 11,12 20,3 "/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="arrow" Property="Path.Data" Value="M 2,11 L 11,1 20,11 "/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultExpanderStyle" TargetType="{x:Type Expander}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Default}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxItemBackground.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" CornerRadius="3" SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" DockPanel.Dock="Top" Margin="1" MinWidth="0" MinHeight="0"
                            Style="{StaticResource ExpanderDownHeaderStyle}"
                            FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}"
                            Content="{TemplateBinding HeaderedContentControl.Header}"
                            ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}"
                            Foreground="{TemplateBinding Control.Foreground}" Padding="{TemplateBinding Control.Padding}"
                            FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                            FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}"
                            FontWeight="{TemplateBinding Control.FontWeight}"
                            HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Collapsed" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="true">
              <Setter TargetName="ExpandSite" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left"/>
              <Setter Value="{StaticResource ExpanderRightHeaderStyle}" TargetName="HeaderSite"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom"/>
              <Setter Value="{StaticResource ExpanderUpHeaderStyle}" TargetName="HeaderSite"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right"/>
              <Setter Value="{StaticResource ExpanderLeftHeaderStyle}" TargetName="HeaderSite"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultExpanderStyle}" TargetType="{x:Type Expander}"/>
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
  <Style x:Key="DefaultGroupBoxStyle" TargetType="{x:Type GroupBox}">
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource GroupBoxBorderBrush.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="6"/>
            </Grid.RowDefinitions>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="Transparent"
                    Background="{TemplateBinding Control.Background}"/>
            <Border x:Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Control.Padding}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="White"
                    IsHitTestVisible="false">
              <UIElement.OpacityMask>
                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                  <Binding ElementName="Header" Path="ActualWidth"/>
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="3">
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="White" CornerRadius="2"/>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
        <Setter Property="Control.FontSize" Value="18"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultGroupBoxStyle}" TargetType="{x:Type GroupBox}"/>
  <Style x:Key="GroupItem" TargetType="{x:Type GroupItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupItem}">
          <StackPanel>
            <ContentPresenter/>
            <ItemsPresenter Margin="5,0,0,0"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultHyperlinkStyle" TargetType="{x:Type Hyperlink}">
    <Setter Property="TextElement.Foreground" Value="Blue"/>
    <Setter Property="Inline.TextDecorations" Value="Underline"/>
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="true">
        <Setter Property="TextElement.Foreground" Value="Red"/>
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="false">
        <Setter Property="TextElement.Foreground"
                Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultHyperlinkStyle}" TargetType="{x:Type Hyperlink}"/>
  <Style x:Key="DefaultStatusBarStyle" TargetType="{x:Type StatusBar}">
    <Setter Property="Control.Background" Value="{StaticResource StatusBarBackground.Default}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBar}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultStatusBarStyle}" TargetType="{x:Type StatusBar}"/>
  <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Default}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="1"/>
    <Setter Property="FrameworkElement.MinHeight" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultStatusBarItemStyle" TargetType="{x:Type StatusBarItem}">
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBarItem}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
        <Setter Property="Control.FontSize" Value="18"/>
        <Setter Property="Control.Padding" Value="4,10,4,10"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultStatusBarItemStyle}" TargetType="{x:Type StatusBarItem}"/>
  <LinearGradientBrush x:Key="DefaultProgressBarIndicatorAnimatedFill" MappingMode="Absolute" StartPoint="-100,0"
                       EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0"/>
      <GradientStop Color="#FF000000" Offset="0.4"/>
      <GradientStop Color="#FF000000" Offset="0.6"/>
      <GradientStop Color="#00000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="DefaultProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Foreground" Value="{StaticResource ProgressBarForeground.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource ProgressBarBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ProgressBarBorderBrush.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="Background" SnapsToDevicePixels="true">
            <Rectangle Fill="{TemplateBinding Control.Background}" RadiusX="2" RadiusY="2"/>
            <Border Background="{StaticResource ProgressBarGlassyHighlight.Default}" Margin="1" CornerRadius="2"/>
            <Border BorderBrush="#80FFFFFF" Background="{StaticResource ProgressBarTopHighlight.Default}"
                    BorderThickness="1,0,1,1" Margin="1"/>
            <Rectangle Name="PART_Track" Margin="1"/>
            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
              <Grid Name="Foreground">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="15"/>
                  <ColumnDefinition Width="0.1*"/>
                  <ColumnDefinition MaxWidth="15"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Indicator" Grid.RowSpan="2" Grid.ColumnSpan="3" Fill="{TemplateBinding Control.Foreground}"/>
                <Rectangle x:Name="Animation" Grid.RowSpan="2" Grid.ColumnSpan="3" Fill="{TemplateBinding Control.Foreground}">
                  <UIElement.OpacityMask>
                    <MultiBinding>
                      <MultiBinding.Converter>
                        <theme:ProgressBarHighlightConverter/>
                      </MultiBinding.Converter>
                      <Binding Source="{StaticResource DefaultProgressBarIndicatorAnimatedFill}"/>
                      <Binding Path="ActualWidth" ElementName="Background"/>
                      <Binding Path="ActualHeight" ElementName="Background"/>
                    </MultiBinding>
                  </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="LeftDark" Grid.RowSpan="2" Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeft.Default}"
                           RadiusX="1" RadiusY="1" Margin="1,1,0,1"/>
                <Rectangle x:Name="RightDark" Grid.RowSpan="2" Grid.Column="2" RadiusX="1" RadiusY="1"
                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRight.Default}" Margin="0,1,1,1"/>
                <Rectangle x:Name="LeftLight" Grid.Column="0" Grid.Row="2"
                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeft.Default}"/>
                <Rectangle x:Name="CenterLight" Grid.Column="1" Grid.Row="2"
                           Fill="{StaticResource ProgressBarIndicatorLightingEffect.Default}"/>
                <Rectangle x:Name="RightLight" Grid.Column="2" Grid.Row="2"
                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRight.Default}"/>
                <Border x:Name="Highlight1" Grid.RowSpan="2" Grid.ColumnSpan="3"
                        Background="{StaticResource ProgressBarIndicatorGlassyHighlight.Default}"/>
                <Border x:Name="Highlight2" Grid.RowSpan="2" Grid.ColumnSpan="3"
                        Background="{StaticResource ProgressBarTopHighlight.Default}"/>
              </Grid>
            </Decorator>
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="Background" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Indicator" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Foreground" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
              <Setter TargetName="LeftDark" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="RightDark" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="LeftLight" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="CenterLight" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="RightLight" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="Indicator" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="false">
              <Setter TargetName="Animation" Property="Shape.Fill" Value="#80B5FFA9"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultProgressBarStyle}" TargetType="{x:Type ProgressBar}"/>
  <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">
    M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">
    M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
  </Geometry>
  <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">
    M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
  </Geometry>
  <Geometry x:Key="SliderPointedThumbDisabledGeometry">
    M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="SliderThumbOuterBorderGeometry">
    M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
  </Geometry>
  <Geometry x:Key="SliderThumbMiddleBorderGeometry">
    M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
  </Geometry>
  <Geometry x:Key="SliderThumbDisabledGeometry">
    M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
  </Geometry>
  <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="FrameworkElement.Width" Value="11"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TranslateTransform X="5.5" Y="11"/>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackground.Default}"
                  Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="White" Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Control.Foreground" Value="Blue">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4"/>
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data"/>
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="18"/>
    <Setter Property="FrameworkElement.Width" Value="10"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="5" Y="9"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted.Default}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="White" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background"
                      Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted.Default}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Control.Foreground" Value="Blue">
              <Setter TargetName="Background"
                      Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted.Default}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background"
                      Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4"/>
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data"/>
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"
                      Property="Path.Data"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="18"/>
    <Setter Property="FrameworkElement.Width" Value="10"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TranslateTransform X="5" Y="9"/>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackground.Default}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="White" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Control.Foreground" Value="Blue">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4"/>
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data"/>
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"
                      Property="Path.Data"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="11"/>
    <Setter Property="FrameworkElement.Width" Value="22"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform X="11" Y="5.5"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackground.Default}"
                  Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="White" StrokeThickness="1"
                  Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Control.Foreground" Value="Blue">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4"/>
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}" Property="Path.Data"/>
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="10"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform X="9" Y="5"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackground.Default}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="White" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Control.Foreground" Value="Blue">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4"/>
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"
                      Property="Path.Data"/>
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="10"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform X="9" Y="5"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted.Default}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="White" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Control.Foreground" Value="Blue">
              <Setter TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted.Default}"
                      Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background"
                      Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted.Default}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder.Default}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Background" Property="Shape.Fill" Value="#FFF4F4F4"/>
              <Setter TargetName="InnerBorder" Value="{x:Null}" Property="Shape.Stroke"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"
                      Property="Path.Data"/>
              <Setter TargetName="OuterBorder" Property="Shape.Stroke" Value="#FFAEB1AF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultSliderStyle" TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonBorderBrush.Default}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource SliderTextBrushKey.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <TickBar x:Name="TopTick" Grid.Row="0" Visibility="Collapsed" Placement="Top"
                       Fill="{TemplateBinding Control.Foreground}" Height="4"/>
              <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Placement="Bottom"
                       Fill="{TemplateBinding Control.Foreground}" Height="4"/>
              <Border x:Name="TrackBackground" Grid.Row="1" Margin="5,0" VerticalAlignment="center"
                      BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder.Default}" BorderThickness="1"
                      CornerRadius="1" Background="{StaticResource HorizontalSliderTrackNormalBackground.Default}"
                      Height="4.0">
                <Canvas Margin="-6,-1">
                  <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                             Height="4.0" Visibility="Hidden" StrokeThickness="1.0"
                             Stroke="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"/>
                </Canvas>
              </Border>
              <Track Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}"/>
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Slider.IsSelectionRangeEnabled" Value="true">
              <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Thumb" Property="Control.Foreground" Value="Blue"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Slider.Orientation" Value="Vertical">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Slider}">
              <Border Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding FrameworkElement.MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TickBar x:Name="TopTick" Grid.Column="0" Visibility="Collapsed" Placement="Left"
                           Fill="{TemplateBinding Control.Foreground}" Width="4"/>
                  <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Placement="Right"
                           Fill="{TemplateBinding Control.Foreground}" Width="4"/>
                  <Border Name="TrackBackground" Grid.Column="1" Margin="0,5" HorizontalAlignment="center"
                          BorderBrush="{StaticResource VerticalSliderTrackNormalBorder.Default}" BorderThickness="1"
                          CornerRadius="1" Background="{StaticResource HorizontalSliderTrackNormalBackground.Default}"
                          Width="4.0">
                    <Canvas Margin="-1,-6">
                      <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                                 Width="4.0" Visibility="Hidden" StrokeThickness="1.0"
                                 Stroke="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"/>
                    </Canvas>
                  </Border>
                  <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.DecreaseLarge}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}" Command="{x:Static Slider.IncreaseLarge}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
                    </Track.Thumb>
                  </Track>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                  <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"
                          Property="FrameworkElement.Style"/>
                  <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                  <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"
                          Property="FrameworkElement.Style"/>
                  <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="Both">
                  <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="Slider.IsSelectionRangeEnabled" Value="true">
                  <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter TargetName="Thumb" Property="Control.Foreground" Value="Blue"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultSliderStyle}" TargetType="{x:Type Slider}"/>
  <Style x:Key="DefaultSeparatorStyle" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource SeparatorBackground.Default}"/>
    <Setter Property="FrameworkElement.Margin" Value="0,2,0,2"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true" Height="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultSeparatorStyle}" TargetType="{x:Type Separator}"/>
  <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <theme:ScrollChrome FrameworkElement.Name="Chrome" ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderPressed="{TemplateBinding ButtonBase.IsPressed}" UIElement.SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <theme:ScrollChrome x:Name="Chrome" ScrollGlyph="{TemplateBinding theme:ScrollChrome.ScrollGlyph}"
                              RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                              RenderPressed="{TemplateBinding Thumb.IsDragging}" UIElement.SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}"
                     Height="{TemplateBinding FrameworkElement.Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}"
                     Height="{TemplateBinding FrameworkElement.Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultScrollBarStyle" TargetType="{x:Type ScrollBar}">
    <Setter Property="Control.Background" Value="{StaticResource VerticalScrollBarBackground.Default}"/>
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="FrameworkElement.Width"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="FrameworkElement.MinWidth"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Grid.RowDefinitions>
            <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                          Command="{x:Static ScrollBar.LineUpCommand}" ScrollGlyph="UpArrow"/>
            <Track Name="PART_Track" Grid.Row="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                   IsDirectionReversed="true">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
              </Track.DecreaseRepeatButton>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
              </Track.IncreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarThumb}" ScrollGlyph="VerticalGripper"/>
              </Track.Thumb>
            </Track>
            <RepeatButton Style="{StaticResource ScrollBarButton}" Grid.Row="2"
                          IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}"
                          ScrollGlyph="DownArrow"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground.Default}"
                      Property="Panel.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto"/>
        <Setter Property="FrameworkElement.MinWidth" Value="0"/>
        <Setter Property="FrameworkElement.Height"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="FrameworkElement.MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Control.Background" Value="{StaticResource HorizontalScrollBarBackground.Default}"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                  <ColumnDefinition Width="0.00001*"/>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <RepeatButton Style="{StaticResource ScrollBarButton}" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                              Command="{x:Static ScrollBar.LineLeftCommand}" ScrollGlyph="LeftArrow"/>
                <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButton}"
                                  Command="{x:Static ScrollBar.PageRightCommand}"/>
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" ScrollGlyph="HorizontalGripper"/>
                  </Track.Thumb>
                </Track>
                <RepeatButton Style="{StaticResource ScrollBarButton}" Grid.Column="2"
                              IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}"
                              ScrollGlyph="RightArrow"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="Bg" Value="{StaticResource ScrollBarDisabledBackground.Default}"
                          Property="Panel.Background"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultScrollBarStyle}" TargetType="{x:Type ScrollBar}"/>
  <Style x:Key="DefaultScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Fill="{StaticResource DefaultCornerBackground}" Grid.Column="1" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}" Grid.Column="0"
                                    Grid.Row="0" Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                    CanVerticallyScroll="false"/>
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow"
                       Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"
                       Grid.Column="0" Grid.Row="1" Orientation="Horizontal"
                       ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultScrollViewerStyle}" TargetType="{x:Type ScrollViewer}"/>
  <Style x:Key="DefaultTabControlStyle" TargetType="{x:Type TabControl}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Padding" Value="4,4,4,4"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlNormalBorderBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource TabControlBackground.Default}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true" ClipToBounds="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel x:Name="HeaderPanel" ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0"
                      Margin="2,2,2,0" IsItemsHost="true"/>
            <Border x:Name="ContentPanel" Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" KeyboardNavigation.TabNavigation="Local"
                    KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2"
                    Grid.Column="0" Grid.Row="1">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2"/>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,0,2"/>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0,2,2,2"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTabControlStyle}" TargetType="{x:Type TabControl}"/>
  <Style x:Key="TabItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                     SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultTabItemStyle" TargetType="{x:Type TabItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Padding" Value="6,1,6,1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlNormalBorderBrush.Default}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBrush.Default}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid SnapsToDevicePixels="true">
            <Border Name="Bd" Padding="{TemplateBinding Control.Padding}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}" BorderThickness="1,1,1,0">
              <ContentPresenter Name="Content" ContentSource="Header"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" RecognizesAccessKey="true"
                                HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"
                                VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource TabItemHotBackground.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="TabItem.IsSelected" Value="true">
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter TargetName="Bd" Value="{StaticResource TabItemSelectedBackground.Default}"
                      Property="Border.Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush.Default}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,0,1,1"/>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,1,0,1"/>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,1,1,1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Top"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Bottom"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-1,-2,-2"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Left"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,1,0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Right"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="1,0,0,0"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBackground.Default}"
                      Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush.Default}"
                      Property="Border.BorderBrush"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultTabItemStyle}" TargetType="{x:Type TabItem}"/>
  <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridSplitterPreviewStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Fill="#80000000"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type GridSplitter}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"/>
    <Setter Property="GridSplitter.PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                            Focusable="false">
                <GridViewHeaderRowPresenter Margin="2,0,2,0" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}"/>
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Minimum="0.0"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                       ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"
                       Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
            <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Minimum="0.0"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                       ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow"
                       Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
            <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="false"
                       Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left" Width="1" Fill="White"
                         Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
              <Rectangle DockPanel.Dock="Top" Height="1" Fill="White"
                         Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="FrameworkElement.Height"
            Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="Control.Background" Value="{StaticResource GridViewColumnHeaderBorderBackground.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="Transparent">
            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Control.Background}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultGridViewColumnHeaderStyle" TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="{StaticResource GridViewColumnHeaderBackground.Default}"/>
    <Setter Property="Control.BorderBrush"
            Value="{StaticResource GridViewColumnHeaderBorderBackground.Default}"/>
    <Setter Property="Control.BorderThickness" Value="0,1,0,1"/>
    <Setter Property="Control.Padding" Value="2,0,2,0"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="true">
            <Border Name="HeaderBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Padding="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="7"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#FFE3F7FF"/>
                <Border Grid.RowSpan="2">
                  <ContentPresenter Name="HeaderContent" Margin="0,0,0,1"
                                    VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                    HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                    RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Border>
              </Grid>
            </Border>
            <Border Name="HeaderHoverBorder" BorderThickness="1,0,1,1" Margin="1,1,0,0"/>
            <Border Name="HeaderPressBorder" BorderThickness="1,1,1,0" Margin="1,0,0,1"/>
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}"/>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderHoverBackground.Default}"
                      Property="Border.Background"/>
              <Setter TargetName="HeaderBorder" Property="Border.BorderBrush" Value="#FF88CBEB"/>
              <Setter TargetName="PART_HeaderGripper" Property="Control.Background" Value="Transparent"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="HeaderBorder" Value="{StaticResource GridViewColumnHeaderPressBackground.Default}"
                      Property="Border.Background"/>
              <Setter TargetName="HeaderBorder" Property="Border.BorderBrush" Value="#FF95DAF9"/>
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden"/>
              <Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="1,1,0,0"/>
            </Trigger>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.Padding" Value="1,9,1,9"/>
              <Setter Property="Control.FontSize" Value="18"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
        <Setter Property="UIElement.Opacity" Value="0.4082"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding FrameworkElement.ActualWidth}"
                           Height="{TemplateBinding FrameworkElement.ActualHeight}"/>
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder" BorderThickness="0,1,0,1" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}"/>
              <ControlTemplate.Triggers>
                <Trigger Property="FrameworkElement.Height" Value="Auto">
                  <Setter Property="FrameworkElement.MinHeight" Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultGridViewColumnHeaderStyle}"
         TargetType="{x:Type GridViewColumnHeader}"/>
  <Style x:Key="ListViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="#8E6EA6F5"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <theme:ListBoxChrome FrameworkElement.Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                               UIElement.SnapsToDevicePixels="true">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                          Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="theme:ListBoxChrome.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
    <Setter Property="Control.Background" Value="{StaticResource ListViewItemBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewItemBorderBrush.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1"/>
    <Setter Property="Control.Padding" Value="5,2,5,2"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" CornerRadius="2" SnapsToDevicePixels="true">
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="11"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                <GridViewRowPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{StaticResource ListItemHoverFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FFCCF0FF"/>
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter Value="{StaticResource ListItemSelectedFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemSelectedInactiveFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FFCFCFCF"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemSelectedFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultListViewItemStyle" TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
    <Setter Property="Control.Background" Value="{StaticResource ListViewItemBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewItemBorderBrush.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1"/>
    <Setter Property="Control.Padding" Value="5,2,5,2"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border x:Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" CornerRadius="2" SnapsToDevicePixels="true">
            <Border Name="InnerBorder" CornerRadius="1" BorderThickness="1">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition MaxHeight="11"/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle Name="UpperHighlight" Visibility="Collapsed" Fill="#75FFFFFF"/>
                <GridViewRowPresenter Grid.RowSpan="2" VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="sfshared:SkinStorage.EnableTouch" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemHoverFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FFCCF0FF"/>
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter Value="{StaticResource ListItemSelectedFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#80FFFFFF"/>
              <Setter TargetName="UpperHighlight" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="UpperHighlight" Property="Shape.Fill" Value="#40FFFFFF"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemSelectedFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FF98DDFB"/>
            </MultiTrigger>
            <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="InnerBorder" Property="Border.Padding" Value="1,8,1,8"/>
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="Bd" Property="FrameworkElement.Margin" Value="0,0,0,-1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ListItemSelectedInactiveFill.Default}" Property="Control.Background"/>
              <Setter Property="Control.BorderBrush" Value="#FFCFCFCF"/>
              <Setter TargetName="InnerBorder" Property="Border.Background" Value="#00FFFFFF"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderBrush" Value="#00FFFFFF"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Control.Background" Value="Transparent"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewItemBorderBrush.Default}"/>
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="FrameworkElement.Margin" Value="0,0,0,1"/>
        <Setter Property="Control.Padding" Value="5,2,5,2"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListViewItem}">
              <Border x:Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                      SnapsToDevicePixels="true">
                <ContentPresenter x:Name="content" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                  <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                          Property="Border.Background"/>
                  <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                          Property="Control.Foreground"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                          Property="Border.Background"/>
                  <Setter Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"
                          Property="Control.Foreground"/>
                </MultiTrigger>
                <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
                  <Setter TargetName="Bd" Property="Border.Padding" Value="1,9,1,9"/>
                  <Setter TargetName="content" Property="FrameworkElement.Margin" Value="1"/>
                  <Setter Property="Control.FontSize" Value="18"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultListViewItemStyle}" TargetType="{x:Type ListViewItem}"/>
  <Style x:Key="DefaultListViewStyle" TargetType="{x:Type ListView}">
    <Setter Property="Control.Background" Value="Green"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBorder.Default}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <theme:ListBoxChrome FrameworkElement.Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                               UIElement.SnapsToDevicePixels="true">
            <ScrollViewer x:Name="scrollviewer" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                          Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="ListView.View">
              <Setter TargetName="scrollviewer" Value="{x:Null}" Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="theme:ListBoxChrome.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultListViewStyle}" TargetType="{x:Type ListView}"/>
  <LinearGradientBrush x:Key="ResizeGripperForeground" StartPoint="0,0.25" EndPoint="1,0.75">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0.3"/>
      <GradientStop Color="#BBC5D7" Offset="0.75"/>
      <GradientStop Color="#6D83A9" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style x:Key="DefaultResizeGripStyle" TargetType="{x:Type ResizeGrip}">
    <Setter Property="FrameworkElement.MinWidth"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="FrameworkElement.MinHeight"
            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ResizeGrip}">
          <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}">
            <Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,2"
                  Data="M 9,0 L 11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3 Z">
              <Shape.Fill>
                <DrawingBrush Viewbox="0,0,3,3" Viewport="0,0,3,3" TileMode="Tile" ViewportUnits="Absolute"
                              ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="{StaticResource ResizeGripperForeground}" Geometry="M 0,0 L 2,0 2,2 0,2 Z"/>
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultResizeGripStyle}" TargetType="{x:Type ResizeGrip}"/>
  <Geometry x:Key="ToolBarCheckmark">
    M 0,2.5 L 2.5,5 L 7,0.5
  </Geometry>
  <Style x:Key="DefaultToolBarTrayStyle" TargetType="{x:Type ToolBarTray}">
    <Setter Property="ToolBarTray.Background" Value="{StaticResource ToolBarTrayBackground.Default}"/>
  </Style>
  <Style TargetType="{x:Type ToolBarTray}" BasedOn="{StaticResource DefaultToolBarTrayStyle}"/>
  <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarSeparatorFill.Default}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="1"/>
    <Setter Property="FrameworkElement.MinHeight" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="2,2,2,2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonPressedBorder.Default}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonPressed.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter Value="{StaticResource ToolBarButtonHoverBorder.Default}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource ToolBarButtonChecked.Default}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Value="{StaticResource ToolBarButtonHoverBorder.Default}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource ToolBarButtonHover.Default}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter Value="{StaticResource ToolBarButtonHoverBorder.Default}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource ToolBarButtonHover.Default}" Property="Control.Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ToolBarButtonPressedBorder.Default}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource ToolBarButtonPressed.Default}" Property="Control.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter Value="{StaticResource ToolBarButtonPressedBorder.Default}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource ToolBarButtonPressed.Default}" Property="Control.Background"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter Value="{StaticResource ToolBarButtonPressedBorder.Default}" Property="Control.BorderBrush"/>
              <Setter Value="{StaticResource ToolBarButtonPressed.Default}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
         BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type CheckBox}"/>
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
         BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
         TargetType="{x:Type RadioButton}"/>
  <Style x:Key="ToolBarComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Chrome" Grid.Column="1" Width="13" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
              <Path x:Name="ArrowDownPath" Data="M 2.5,0 L 8.5,0 5.5,3 Z" Fill="Black" VerticalAlignment="Center"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Chrome" Value="{x:Null}" Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource ToolBarButtonHover.Default}"
                      Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ToolBarButtonPressedBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ToolBarButtonPressed.Default}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="ArrowDownPath" Value="{StaticResource ToolBarDisabledBorder.Default}"
                      Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="1,0"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="18"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="true">
            <Grid IsSharedSizeScope="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
              </Grid.ColumnDefinitions>
              <Border Name="Background" Background="{TemplateBinding Control.Background}"/>
              <Border Name="SelectedContentBorder" Margin="2,2,1,2">
                <ContentPresenter x:Name="ContentSite" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                  Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Border>
              <Border Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
              <ToggleButton x:Name="DropDownButton" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2"
                            Style="{StaticResource ToolBarComboBoxTransparentButtonStyle}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBox x:Name="PART_EditableTextBox" Padding="{TemplateBinding Control.Padding}" Margin="1,1,0,1"
                       MinHeight="18" Style="{StaticResource ComboBoxEditableTextBox}" Visibility="Collapsed"
                       VerticalAlignment="Center"
                       IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
            <Popup Name="PART_Popup" AllowsTransparency="true" Placement="Bottom" Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent"
                                            FrameworkElement.MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                            FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border x:Name="DropDownBorder" Background="{TemplateBinding Control.Background}" BorderThickness="1"
                        BorderBrush="{StaticResource ToolBarMenuBorder.Default}">
                  <ScrollViewer>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              <Setter TargetName="Background" Value="{StaticResource ToolBarDisabledFill.Default}"
                      Property="Border.Background"/>
              <Setter TargetName="Background" Property="Grid.ColumnSpan" Value="2"/>
              <Setter TargetName="Border" Value="{StaticResource ToolBarDisabledBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="true"/>
                <Condition Property="ComboBox.IsDropDownOpen" Value="false"/>
                <Condition Property="ComboBox.IsEditable" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="SelectedContentBorder"
                      Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter TargetName="DropDownButton" Value="{x:Null}" Property="Control.Background"/>
              <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHover.Default}"
                      Property="Control.Background"/>
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="DropDownButton" Value="{StaticResource ToolBarButtonHover.Default}"
                      Property="Control.Background"/>
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="true"/>
                <Condition Property="ComboBox.IsDropDownOpen" Value="false"/>
                <Condition Property="ComboBox.IsEditable" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiTrigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter Property="Control.Padding" Value="2"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="1,0"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="18"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Border" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" MinHeight="18"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              <Setter TargetName="Border" Value="{StaticResource ToolBarDisabledFill.Default}"
                      Property="Border.Background"/>
              <Setter TargetName="Border" Value="{StaticResource ToolBarDisabledBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                      Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <FrameworkTemplate.Resources>
            <Style TargetType="{x:Type Separator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.Background" Value="{StaticResource ToolBarSeparatorFill.Default}"/>
              <Setter Property="FrameworkElement.Height" Value="1"/>
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,0"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                        <ColumnDefinition Width="*"/>
                      </Grid.ColumnDefinitions>
                      <Border Grid.Column="1" Margin="8,0,0,0" Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              BorderThickness="{TemplateBinding Control.BorderThickness}"/>
                    </Grid>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
              <Setter Property="Control.VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
              <Setter Property="Control.Background" Value="Transparent"/>
              <Setter Property="Control.Foreground" Value="{DynamicResource {x:Static JetSystemColors.MenuTextBrushKey}}"/>
              <Setter Property="Control.BorderThickness" Value="1"/>
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,0"/>
              <Setter Property="Control.Padding" Value="8,3,8,3"/>
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                        <ColumnDefinition Width="14"/>
                      </Grid.ColumnDefinitions>
                      <Border Name="Border" Background="{TemplateBinding Control.Background}"
                              BorderThickness="{TemplateBinding Control.BorderThickness}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0"/>
                      <ContentPresenter x:Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                              BorderBrush="{StaticResource ToolBarButtonHoverBorder.Default}"
                              Background="{StaticResource ToolBarMenuCheckFill.Default}" BorderThickness="1">
                        <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                              Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                              Data="{StaticResource ToolBarCheckmark}"/>
                      </Border>
                      <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                        RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="4,3,2,3"
                                 HorizontalAlignment="Right"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="true">
                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="true">
                        <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                                Property="Border.BorderBrush"/>
                        <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Default}"
                                Property="Border.Background"/>
                        <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarButtonPressedBorder.Default}"
                                Property="Border.BorderBrush"/>
                        <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarDarkFill.Default}"
                                Property="Border.Background"/>
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled" Value="false">
                        <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                  <Setter Property="Control.Padding" Value="6,2,7,2"/>
                  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                          <DockPanel Name="Header">
                            <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                            <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Popup x:Name="PART_Popup" Placement="Bottom" HorizontalOffset="-1" Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   AllowsTransparency="true"
                                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                              <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                                <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                                        BorderBrush="{StaticResource ToolBarMenuBorder.Default}" BorderThickness="1">
                                  <Grid IsSharedSizeScope="true">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                      <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="{StaticResource ToolBarVerticalBackground.Default}" Margin="0,1"/>
                                    <Rectangle Fill="{StaticResource ToolBarSubMenuBackground.Default}" Grid.ColumnSpan="2" Margin="0,-1,0,0"
                                               VerticalAlignment="Top" HorizontalAlignment="Left" Height="1"
                                               Width="{Binding ElementName=Header, Path=ActualWidth}"/>
                                    <ScrollViewer CanContentScroll="true" Style="{StaticResource DefaultMenuScrollViewer}" Grid.ColumnSpan="2">
                                      <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                      Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                  </Grid>
                                </Border>
                              </theme:SystemDropShadowChrome>
                            </Popup>
                          </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                          </Trigger>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Default}"
                                    Property="Border.Background"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource ToolBarMenuBorder.Default}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarOpenHeaderBackground.Default}"
                                    Property="Border.Background"/>
                          </Trigger>
                          <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                  <Setter Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                  <Setter Property="Control.Padding" Value="7,1,8,2"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                          <DockPanel>
                            <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                            <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Default}"
                                    Property="Border.Background"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                  <Setter Property="DockPanel.Dock" Value="Top"/>
                  <Setter Property="Control.Padding" Value="8,3,8,3"/>
                  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="Transparent" SnapsToDevicePixels="true">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                            <ColumnDefinition Width="14"/>
                          </Grid.ColumnDefinitions>
                          <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0"/>
                          <ContentPresenter x:Name="Icon" Margin="3" VerticalAlignment="Center" ContentSource="Icon"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                                  BorderBrush="{StaticResource ToolBarButtonHoverBorder.Default}"
                                  Background="{StaticResource ToolBarMenuCheckFill.Default}" BorderThickness="1">
                            <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                                  Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                          </Border>
                          <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                            RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0"
                                Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                          <Popup x:Name="PART_Popup" Placement="Right" Focusable="false"
                                 PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                 AllowsTransparency="true"
                                 IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                              <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                                      BorderBrush="{StaticResource ToolBarMenuBorder.Default}" BorderThickness="1"
                                      Grid.IsSharedSizeScope="true">
                                <Grid>
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                  </Grid.ColumnDefinitions>
                                  <Rectangle Fill="{StaticResource ToolBarVerticalBackground.Default}" Margin="0,1"/>
                                  <ScrollViewer CanContentScroll="true" Style="{StaticResource DefaultMenuScrollViewer}" Grid.ColumnSpan="2">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                    Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                  </ScrollViewer>
                                </Grid>
                              </Border>
                            </theme:SystemDropShadowChrome>
                          </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                          </Trigger>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder.Default}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Default}"
                                    Property="Border.Background"/>
                            <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarButtonPressedBorder.Default}"
                                    Property="Border.BorderBrush"/>
                            <Setter TargetName="GlyphPanel" Value="{StaticResource ToolBarDarkFill.Default}"
                                    Property="Border.Background"/>
                          </Trigger>
                          <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
          </FrameworkTemplate.Resources>
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
  <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="Transparent" SnapsToDevicePixels="true">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush Viewbox="0,0,4,4" Viewport="0,0,4,4" TileMode="Tile" ViewportUnits="Absolute"
                              ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="White" Geometry="M 1,1 L 1,3 3,3 3,1 Z"/>
                        <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0,0 L 0,2 2,2 2,0 Z"/>
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background"
            Value="{StaticResource ToolBarToggleButtonHorizontalBackground.Default}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,3,3,0" Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
            <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    SnapsToDevicePixels="true">
              <Path Stroke="White" Data="M 1,1.5 L 6,1.5 "/>
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M 0,0.5 L 5,0.5 "/>
              <Path Fill="White" Data="M 0.5,4 L 6.5,4 3.5,7 Z"/>
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M -0.5,3 L 5.5,3 2.5,6 Z"/>
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background"
            Value="{StaticResource ToolBarToggleButtonVerticalBackground.Default}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,0,3,3" Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
            <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    SnapsToDevicePixels="true">
              <Path Stroke="White" Data="M 1.5,1 L 1.5,6 "/>
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M 0.5,0 L 0.5,5 "/>
              <Path Fill="White" Data="M 3.5,0.5 L 7,3.5 4,6.5 Z"/>
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M 3,-0.5 L 6,2.5 3,5.5 Z"/>
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ToolBarButtonHover.Default}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{StaticResource ToolBarGripper}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultToolBarStyle" TargetType="{x:Type ToolBar}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarHorizontalBackground.Default}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton x:Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                            Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press"
                            FocusVisualStyle="{x:Null}"
                            IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false"
                     Focusable="false"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                  <Border Background="{StaticResource ToolBarSubMenuBackground.Default}"
                          BorderBrush="{StaticResource ToolBarMenuBorder.Default}" BorderThickness="1">
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="true"
                                          KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FocusVisualStyle="{x:Null}"/>
                  </Border>
                </theme:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder" Margin="0,0,11,0" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,3,3"
                    Padding="{TemplateBinding Control.Padding}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Margin="-3,-1,0,0" Width="10"
                       Padding="6,5,1,6"/>
                <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center"
                                  VerticalAlignment="Center" Margin="4,0,4,0"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="true">
              <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="false"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="true">
              <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1"/>
              <Setter TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0"/>
              <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1"/>
              <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4"/>
              <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2"/>
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom"/>
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right"/>
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11"/>
              <Setter Value="{StaticResource ToolBarVerticalBackground.Default}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultToolBarStyle}" TargetType="{x:Type ToolBar}"/>
  <Style x:Key="ContentControlStyle" TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource ContentControlStyle}" TargetType="{x:Type ContentControl}"/>
  <Style x:Key="DefaultFlowDocumentStyle" TargetType="{x:Type FlowDocument}">
    <Setter Property="FlowDocument.TextAlignment" Value="Justify"/>
    <Setter Property="FlowDocument.FontFamily" Value="Georgia"/>
    <Setter Property="FlowDocument.FontSize" Value="16.0"/>
    <Setter Property="FlowDocument.Background" Value="{StaticResource ListBoxBackground.Default}"/>
    <Setter Property="FlowDocument.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
  </Style>
  <Style BasedOn="{StaticResource DefaultFlowDocumentStyle}" TargetType="{x:Type FlowDocument}"/>
  <Style x:Key="DefaultTextBlockStyle" TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap"/>
    <Setter Property="TextBlock.TextTrimming" Value="None"/>
    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Style.Triggers>
      <Trigger Property="sfshared:SkinStorage.EnableTouch" Value="true">
        <Setter Property="TextBlock.FontSize" Value="18"/>
        <Setter Property="TextBlock.FontWeight" Value="Light"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource DefaultTextBlockStyle}" TargetType="{x:Type TextBlock}"/>
  <Style TargetType="{x:Type Bold}">
    <Setter Property="TextElement.FontWeight" Value="Bold"/>
  </Style>
  <Style x:Key="DefaultFlowDocumentPageViewerStyle" TargetType="{x:Type FlowDocumentPageViewer}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
  </Style>
  <Style BasedOn="{StaticResource DefaultFlowDocumentPageViewerStyle}"
         TargetType="{x:Type FlowDocumentPageViewer}"/>
  <Style x:Key="DefaultFlowDocumentReaderStyle" TargetType="{x:Type FlowDocumentReader}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
  </Style>
  <Style BasedOn="{StaticResource DefaultFlowDocumentReaderStyle}" TargetType="{x:Type FlowDocumentReader}"/>
  <Style TargetType="{x:Type Italic}">
    <Setter Property="TextElement.FontStyle" Value="Italic"/>
  </Style>
  <Style TargetType="{x:Type Underline}">
    <Setter Property="Inline.TextDecorations" Value="Underline"/>
  </Style>
  <Style TargetType="{x:Type Paragraph}">
    <Setter Property="Block.Margin" Value="Auto"/>
    <Setter Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
  </Style>
  <Style TargetType="{x:Type List}">
    <Setter Property="Block.Margin" Value="Auto"/>
    <Setter Property="Block.Padding" Value="Auto"/>
  </Style>
  <Style TargetType="{x:Type Floater}">
    <Setter Property="Floater.HorizontalAlignment" Value="Right"/>
  </Style>
  <DataTemplate DataType="{x:Type FlowDocument}">
    <FlowDocumentReader Document="{Binding}"/>
  </DataTemplate>
  <DataTemplate DataType="{x:Type FixedDocument}">
    <DocumentViewer Document="{Binding}"/>
  </DataTemplate>
  <DataTemplate DataType="{x:Type FixedDocumentSequence}">
    <DocumentViewer Document="{Binding}"/>
  </DataTemplate>
  <Style TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <StackPanel>
            <ContentPresenter ContentSource="Header"/>
            <ContentPresenter/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultLabelStyle" TargetType="{x:Type Label}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Default}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Padding" Value="5"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <FrameworkElement.Resources>
                <Style TargetType="{x:Type TextBlock}"/>
              </FrameworkElement.Resources>
            </ContentPresenter>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource DefaultLabelStyle}" TargetType="{x:Type Label}"/>
  <Style TargetType="{x:Type Page}">
    <Setter Property="Page.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Page}">
          <Border Background="{TemplateBinding Page.Background}">
            <ContentPresenter Content="{TemplateBinding Page.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="DefaultRichTextBoxStyle" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <Style TargetType="{x:Type FlowDocument}">
        <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="true"/>
      </Style>
    </Style.Resources>
    <Setter Property="FrameworkElement.MinWidth" Value="10"/>
  </Style>
  <Style BasedOn="{StaticResource DefaultRichTextBoxStyle}" TargetType="{x:Type RichTextBox}"/>
  <Style TargetType="{x:Type UserControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>