<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sfshared="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <SolidColorBrush x:Key="ForegroundBrush1.Blue" Color="#5C626A"/>
  <SolidColorBrush x:Key="BorderBrush.Blue" Color="Orange"/>
  <SolidColorBrush x:Key="ForegroundBrush.Blue" Color="Black"/>
  <SolidColorBrush x:Key="ComboBoxItemBorderBrush.Blue" Color="Transparent"/>
  <SolidColorBrush x:Key="SliderTextBrushKey.Blue" Color="#FFC4C4C4"/>
  <LinearGradientBrush x:Key="ToolBarHorizontalBorderBrush.Silver" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF7C7C94" Offset="1"/>
    <GradientStop Color="#FFF3F4FA"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonBackgroundBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFCADDF1" Offset="0"/>
    <GradientStop Color="#FFCBDEF3" Offset="0.4"/>
    <GradientStop Color="#FFC1D3EC" Offset="0.4"/>
    <GradientStop Color="#FFD0E1F7" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonBorderBrush.Blue" Color="#FF6593CF"/>
  <LinearGradientBrush x:Key="ButtonPressedBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF3B277" Offset="0"/>
    <GradientStop Color="#FFF4B378" Offset="0.4"/>
    <GradientStop Color="#FFF4A770" Offset="0.4"/>
    <GradientStop Color="#FFF37E24" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonMouseOverBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFE69E" Offset="1"/>
      <GradientStop Color="#FFFFE8A7" Offset="0.4"/>
      <GradientStop Color="#FFFFD767" Offset="0.4"/>
      <GradientStop Color="#FFFFFCDE"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonMouseOverBorderBrush.Blue" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFDBCE99" Offset="0"/>
    <GradientStop Color="#FFCEC0A4" Offset="0.996"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonPressedBorderBrush.Blue" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFA78E66" Offset="0"/>
    <GradientStop Color="#FFB9AE93" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToggleCheckedBrush.Blue" StartPoint="0.5,1" EndPoint="0.5,0">
    <GradientStop Color="#FED5A8" Offset="1"/>
    <GradientStop Color="#FCBC7A" Offset="0.65"/>
    <GradientStop Color="#F99630" Offset="0.6"/>
    <GradientStop Color="#FCC869" Offset="0.25"/>
    <GradientStop Color="#FDECA2" Offset="0.05"/>
    <GradientStop Color="#FDF1B0" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TogglePressedBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Offset="0" Color="#FFFFB672"/>
    <GradientStop Offset="0.65" Color="#FFF69442"/>
    <GradientStop Offset="0.5" Color="#FFF68322"/>
    <GradientStop Offset="1" Color="#FFFEA250"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ToggleMouseOverBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#E3A96B" Offset="1"/>
    <GradientStop Color="#F6A963" Offset="0.65"/>
    <GradientStop Color="#E68736" Offset="0.6"/>
    <GradientStop Color="#F8C35C" Offset="0.25"/>
    <GradientStop Color="#FDD065" Offset="0.05"/>
    <GradientStop Color="#FDD165" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RepeatPressedBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#F6B96B" Offset="1"/>
    <GradientStop Color="#FDAA63" Offset="0.65"/>
    <GradientStop Color="#FC8F3C" Offset="0.6"/>
    <GradientStop Color="#FFBC61" Offset="0.25"/>
    <GradientStop Color="#FFCB7F" Offset="0.05"/>
    <GradientStop Color="#FFD086" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxBackgroundBrush.Blue">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFFFFFFF" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckBoxOuterBorderBrush.Blue" Color="#FFABC1DE"/>
  <LinearGradientBrush x:Key="PressedBorderBrush.Blue" StartPoint="0,0" EndPoint="0.8,1">
    <GradientStop Color="#FFFAB44D" Offset="0"/>
    <GradientStop Color="#FFFEF7E2" Offset="0.71"/>
    <GradientStop Color="#FFFAB44D" Offset="0.466"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="PressedBackgroundBrush.Blue" StartPoint="0,0" EndPoint="0.8,1">
    <GradientStop Color="#FFFFDB81" Offset="0"/>
    <GradientStop Color="#FFFEF7E2" Offset="0.71"/>
    <GradientStop Color="#FFFAD57B" Offset="0.466"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PathFill.Blue" Color="#FF4A6B96"/>
  <SolidColorBrush x:Key="CheckBoxBorderBrushHover.Blue" Color="#FF5577A3"/>
  <SolidColorBrush x:Key="CheckBoxBorderBrush.Blue" Color="#FFABC1DE"/>
  <SolidColorBrush x:Key="CheckInnerBorderBrush.Blue" Color="#FFFFFFFF"/>
  <LinearGradientBrush x:Key="CheckBoxInnerFillBrush.Blue" StartPoint="0,0" EndPoint="0.5,1">
    <GradientStop Color="#FFCDD1D7" Offset="0"/>
    <GradientStop Color="#FFF4F4F4" Offset="0.992"/>
    <GradientStop Color="#FFF4F4F4" Offset="0.6"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxOverInnerBorderBrush.Blue" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="#FFFAD57B" Offset="0"/>
    <GradientStop Color="#FFFEF7E2" Offset="0.71"/>
    <GradientStop Color="#FFFAD57B" Offset="0.466"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxOverInnerFillBrush.Blue" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="#FCE7AF" Offset="0"/>
    <GradientStop Color="#FEF8E7" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush.Blue" StartPoint="0,0" EndPoint="1,1">
    <GradientStop Color="#FFA2ACB9" Offset="0"/>
    <GradientStop Color="#FFF3F3F3" Offset="0.71"/>
    <GradientStop Color="#FFBCC2CB" Offset="0.466"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="BorderBrush1.Blue" Color="#F4C663"/>
  <SolidColorBrush x:Key="ScrollBackground.Blue" Color="#FFF7F7F7"/>
  <SolidColorBrush x:Key="TreeViewFill.Blue" Color="#FF7F9DB9"/>
  <LinearGradientBrush x:Key="MouseOverBrushIn.Blue" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.010989" Color="#ffffffff"/>
      <GradientStop Offset="0.148352" Color="#fffff5d4"/>
      <GradientStop Offset="0.505494" Color="#ffffe5ab"/>
      <GradientStop Offset="0.521978" Color="#ffffd149"/>
      <GradientStop Offset="0.764214" Color="#ffffdb72"/>
      <GradientStop Offset="0.950549" Color="#ffffe59b"/>
      <GradientStop Offset="1.000000" Color="#fffff9cc"/>
      <GradientStop Offset="0.977219" Color="#ffffefb4"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ComboBoxBackground.Blue" Color="#FFEAF2FB"/>
  <SolidColorBrush x:Key="ComboBoxBorderBrush.Blue" Color="#FFABC1DE"/>
  <SolidColorBrush x:Key="ComboBoxHoverBackground.Blue" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ComboBoxItemBackground.Blue" Color="Transparent"/>
  <SolidColorBrush x:Key="ListBoxBorderBrush.Blue" Color="#FF7F9DB9"/>
  <SolidColorBrush x:Key="ListBoxBackground.Blue" Color="#FFDEEBFE"/>
  <SolidColorBrush x:Key="ListBoxMouseOver.Blue" Color="#FFECF2FB"/>
  <LinearGradientBrush x:Key="MenuBackground.Blue" MappingMode="Absolute" StartPoint="237.761719,250.825195"
                       EndPoint="237.761719,274.642578">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ffaed1ff"/>
      <GradientStop Offset="1.000000" Color="#ffddebff"/>
      <GradientStop Offset="-583163032721691960000000000.000000" Color="#ffddebff"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-185.062500,274.642578"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MenuSeparatorBrush.Blue" Color="#C5C5C5"/>
  <SolidColorBrush x:Key="MenuItemBorderBrush.Blue" Color="#FFC5C5C5"/>
  <SolidColorBrush x:Key="MenuItemLeftBarBackground.Blue" Color="#FFE9EEEE"/>
  <LinearGradientBrush x:Key="ToolBarOverflowButtonBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF3F3F3" Offset="0"/>
    <GradientStop Color="#FFCFE4FF" Offset="0.5"/>
    <GradientStop Color="#FFD3E6FF" Offset="0.5"/>
    <GradientStop Color="#FF83AEE5" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolBarButtonHover.Blue" Color="#C2E0FF"/>
  <SolidColorBrush x:Key="SeparatorBrush.Blue" Color="#FF6495ED"/>
  <SolidColorBrush x:Key="ContextMenuBackground.Blue" Color="#F5F5F5"/>
  <SolidColorBrush x:Key="ContextMenuBorderBrush.Blue" Color="#868686"/>
  <SolidColorBrush x:Key="ToolTipBorderBrush.Blue" Color="#FF767676"/>
  <LinearGradientBrush x:Key="ToolTipBackground.Blue" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFFFFF" Offset="0"/>
      <GradientStop Color="#E4E5F0" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TextBoxBorderBrushHover.Blue" Color="#5577A3"/>
  <SolidColorBrush x:Key="TextBoxBorderBrush.Blue" Color="#ABC1DE"/>
  <LinearGradientBrush x:Key="StatusBarSeparator.Blue" MappingMode="Absolute" StartPoint="1,1" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0" Color="#ffaed1ff"/>
      <GradientStop Offset="0.5" Color="Gray"/>
      <GradientStop Offset="1.000000" Color="#ffddebff"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarBorderBrushes.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B2B2B2" Offset="0"/>
      <GradientStop Color="#8C8C8C" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarTopHighlightBrush.Blue" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#80FFFFFF" Offset="0.05"/>
      <GradientStop Color="#00FFFFFF" Offset="0.25"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarGlassyHighlightBrush.Blue" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#50FFFFFF" Offset="0.5385"/>
      <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorGlassyHighlightBrush.Blue" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#90FFFFFF" Offset="0.5385"/>
      <GradientStop Color="#00FFFFFF" Offset="0.5385"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectLeftBrush.Blue" RadiusX="1" RadiusY="1"
                       RelativeTransform="1,0,0,1,0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0"/>
      <GradientStop Color="#00FFFFC4" Offset="1"/>
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorLightingEffectBrush.Blue" StartPoint="0,1" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0"/>
      <GradientStop Color="#00FFFFC4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <RadialGradientBrush x:Key="ProgressBarIndicatorLightingEffectRightBrush.Blue" RadiusX="1" RadiusY="1"
                       RelativeTransform="1,0,0,1,-0.5,0.5">
    <GradientBrush.GradientStops>
      <GradientStop Color="#60FFFFC4" Offset="0"/>
      <GradientStop Color="#00FFFFC4" Offset="1"/>
    </GradientBrush.GradientStops>
  </RadialGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeLeftBrush.Blue" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#0C000000" Offset="0"/>
      <GradientStop Color="#20000000" Offset="0.3"/>
      <GradientStop Color="#00000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ProgressBarIndicatorDarkEdgeRightBrush.Blue" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0"/>
      <GradientStop Color="#20000000" Offset="0.7"/>
      <GradientStop Color="#0C000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ProgressBarFill.Blue" Color="#80B5FFA9"/>
  <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFillBrush.Blue" MappingMode="Absolute" StartPoint="-100,0"
                       EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0"/>
      <GradientStop Color="#FF000000" Offset="0.4"/>
      <GradientStop Color="#FF000000" Offset="0.6"/>
      <GradientStop Color="#00000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DefaultThumbBrush.Blue" MappingMode="Absolute" StartPoint="204.748047,-558.712891"
                       EndPoint="204.748047,-553.257813">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#fff5f5f5"/>
      <GradientStop Offset="0.313187" Color="#ffe5e5ed"/>
      <GradientStop Offset="0.412088" Color="#ffdcdee9"/>
      <GradientStop Offset="0.472527" Color="#ffc4cddd"/>
      <GradientStop Offset="0.770664" Color="#ffd5d9e5"/>
      <GradientStop Offset="1.000000" Color="#ffe5e5ed"/>
      <GradientStop Offset="1.000000" Color="#ffe5e5ed"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ProgressBarForeground.Blue" Color="#01D328"/>
  <SolidColorBrush x:Key="ProgressBarBackground.Blue" Color="Transparent"/>
  <SolidColorBrush x:Key="SeparatorBackground.Blue" Color="#FF6495ED"/>
  <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted.Blue" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground.Blue" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted.Blue" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="White" Offset="0"/>
      <GradientStop Color="#F0EFEF" Offset="0.4"/>
      <GradientStop Color="#D6D5D5" Offset=".8"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted.Blue" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground.Blue" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SliderThumbMouseOver.Blue" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="#FFF9D1" Offset="1"/>
    <GradientStop Color="#FFEAA3" Offset="0.65"/>
    <GradientStop Color="#FFD75C" Offset="0.6"/>
    <GradientStop Color="#FFD456" Offset="0.25"/>
    <GradientStop Color="#FFE395" Offset="0.05"/>
    <GradientStop Color="#FFEAAD" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SliderThumbSelected.Blue" EndPoint="1,0" StartPoint="0,0">
    <GradientStop Color="#F6B96B" Offset="1"/>
    <GradientStop Color="#FDAA63" Offset="0.65"/>
    <GradientStop Color="#FC8F3C" Offset="0.6"/>
    <GradientStop Color="#FFBC61" Offset="0.25"/>
    <GradientStop Color="#FFCB7F" Offset="0.05"/>
    <GradientStop Color="#FFD086" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted.Blue" EndPoint="0,0" StartPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="white" Offset="0"/>
      <GradientStop Color="#B8E2F9" Offset="0.5"/>
      <GradientStop Color="#B0DFF8" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder.Blue" Color="#3C7FB1"/>
  <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25"/>
      <GradientStop Color="#5EB4E3" Offset="0.5"/>
      <GradientStop Color="#4C8BB4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted.Blue" EndPoint="0,0" StartPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#B8E4FA" Offset="0.25"/>
      <GradientStop Color="#5EB4E3" Offset="0.5"/>
      <GradientStop Color="#4C8BB4" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground.Blue" Color="#FFE7EAEA"/>
  <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
      <GradientStop Color="White" Offset=".9"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder.Blue" EndPoint="1,0" StartPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FFAEB1AF" Offset="0.1"/>
      <GradientStop Color="White" Offset=".9"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="SelectedBrush.Blue" StartPoint="0.5,1" EndPoint="0.5,0">
    <GradientStop Color="#FED5A8" Offset="1"/>
    <GradientStop Color="#FCBC7A" Offset="0.65"/>
    <GradientStop Color="#F99630" Offset="0.6"/>
    <GradientStop Color="#FCC869" Offset="0.25"/>
    <GradientStop Color="#FDECA2" Offset="0.05"/>
    <GradientStop Color="#FDF1B0" Offset="0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="SliderBackground.Blue" Color="Transparent"/>
  <SolidColorBrush x:Key="SliderForeground.Blue" Color="#FFC4C4C4"/>
  <LinearGradientBrush x:Key="thumbColorBrush.Blue" MappingMode="Absolute" StartPoint="204.748047,-558.712891"
                       EndPoint="204.748047,-553.257813">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ff9bbde5"/>
      <GradientStop Offset="0.379121" Color="#ffabcdf5"/>
      <GradientStop Offset="0.434066" Color="#ff7aadf5"/>
      <GradientStop Offset="0.753942" Color="#ff9bc1fa"/>
      <GradientStop Offset="1.000000" Color="#ffbcd5ff"/>
      <GradientStop Offset="1.000000" Color="#ffbcd5ff"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="thumbMouseOverBrush.Blue" MappingMode="Absolute" StartPoint="204.748047,-558.712891"
                       EndPoint="204.748047,-553.257813">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ffbcd1ed"/>
      <GradientStop Offset="0.379121" Color="#ffcce0ff"/>
      <GradientStop Offset="0.434066" Color="#ffb3cdf5"/>
      <GradientStop Offset="0.753942" Color="#ffc4d9fa"/>
      <GradientStop Offset="1.000000" Color="#ffd4e5ff"/>
      <GradientStop Offset="1.000000" Color="#ffd4e5ff"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="RepeatInnerBrushes.Blue" MappingMode="Absolute" StartPoint="235.085449,-557.604492"
                       EndPoint="246.529297,-557.604492">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#fff5f5f5"/>
      <GradientStop Offset="0.313187" Color="#ffe5e5ed"/>
      <GradientStop Offset="0.439560" Color="#ffdcdee9"/>
      <GradientStop Offset="0.494506" Color="#ffc4cddd"/>
      <GradientStop Offset="0.780220" Color="#ffd5d9e5"/>
      <GradientStop Offset="1.000000" Color="#ffe5e5ed"/>
      <GradientStop Offset="1.000000" Color="#ffe5e5ed"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,0.000000,1.000000,-197.282227,1005.256836"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalScrollBarBackgroundbrush.Blue" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ff89a9cc"/>
      <GradientStop Offset="0.307692" Color="#ff7294c4"/>
      <GradientStop Offset="1.000000" Color="#ff7a98c4"/>
      <GradientStop Offset="0.539326" Color="#ff7a98c4"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="RepeatOuterBrushes.Blue" Color="#ff516893"/>
  <LinearGradientBrush x:Key="Blue.TabButton.Selected.Blue" EndPoint="0.5, 0" StartPoint="0.5, 1">
    <GradientStop Color="#E0EAF6" Offset="1"/>
    <GradientStop Color="#F4F9FF" Offset="0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabControlBorderBrush.Blue" Color="Transparent"/>
  <SolidColorBrush x:Key="Blue.Ribbon.BorderBrush" Color="#8DB2E3"/>
  <SolidColorBrush x:Key="Black.Ribbon.BorderBrush" Color="#FF9D9B96"/>
  <LinearGradientBrush x:Key="TabSeleted.Blue" EndPoint="0.5, 0" StartPoint="0.5, 1">
    <GradientStop Color="#E0EAF6" Offset="1"/>
    <GradientStop Color="#F4F9FF" Offset="0"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="Blue.Ribbon.TabPanelBackground" Color="#BFDBFF"/>
  <LinearGradientBrush x:Key="Blue.TabButton.SelectedBrush" EndPoint="0.5, 0" StartPoint="0.5, 1">
    <GradientStop Color="#E0EAF6" Offset="1"/>
    <GradientStop Color="#F4F9FF" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="Blue.TabButton.HoverTabHighlight" EndPoint="0.5, 1" StartPoint="0.5, 0">
    <GradientStop Color="#E3D198" Offset="1"/>
    <GradientStop Color="Transparent" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TabMouseOver.Blue" EndPoint="0.5, 1" StartPoint="0.5, 0">
    <GradientStop Color="#E3D198" Offset="1"/>
    <GradientStop Color="Transparent" Offset="0"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="TabBackgroundBrush.Blue" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF6FAFF"/>
    <GradientStop Color="#FFE5EEFA" Offset="0.5"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TabBorderBrush.Blue" Color="#FF8DB2E3"/>
  <SolidColorBrush x:Key="GridViewColumnHeaderBorderBackground.Blue" Color="#FF77BCED"/>
  <LinearGradientBrush x:Key="GridViewColumnHeaderBrush.Blue" MappingMode="Absolute" StartPoint="269.650391,238.907227"
                       EndPoint="269.650391,259.117676">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ffbcd5f5"/>
      <GradientStop Offset="0.043956" Color="#ffcce1f5"/>
      <GradientStop Offset="0.686813" Color="#ffb3d1f5"/>
      <GradientStop Offset="0.703297" Color="#ffc4ddff"/>
      <GradientStop Offset="1.000000" Color="#ffd4e5ff"/>
      <GradientStop Offset="-583163032721691960000000000.000000" Color="#ffd4e5ff"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-203.527344,259.118164"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ListViewSelectedBrush.Blue" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Color="#9BF1AB3D" Offset="0"/>
    <GradientStop Color="#FFF1AB3D" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ListViewBorderBrush.Blue" Color="#FF77BCED"/>
  <SolidColorBrush x:Key="ListViewBackground.Blue" Color="#809FB8FC"/>
  <SolidColorBrush x:Key="ListViewItemBorderBrush.Blue" Color="#FF77BCED"/>
  <SolidColorBrush x:Key="ListViewItemBackground.Blue" Color="#6BBCD5F9"/>
  <LinearGradientBrush x:Key="ToolBarTray.Blue" MappingMode="Absolute" StartPoint="237.761719,250.825195"
                       EndPoint="237.761719,274.642578">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ffaed1ff"/>
      <GradientStop Offset="1.000000" Color="#ffddebff"/>
      <GradientStop Offset="-583163032721691960000000000.000000" Color="#ffddebff"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-185.062500,274.642578"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ToolBarSeparator.Blue" Color="#FF77BCED"/>
  <SolidColorBrush x:Key="ToolBarDisabledBorder.Blue" Color="#B5B2B5"/>
  <SolidColorBrush x:Key="ToolBarButtonHoverBorder.Blue" Color="#3399FF"/>
  <SolidColorBrush x:Key="ToolBarButtonChecked.Blue" Color="#E6F0FA"/>
  <SolidColorBrush x:Key="ToolBarButtonPressed.Blue" Color="#99CCFF"/>
  <SolidColorBrush x:Key="ToolBarButtonPressedBorder.Blue" Color="#3399FF"/>
  <SolidColorBrush x:Key="ToolBarMenuBorder.Blue" Color="#808080"/>
  <SolidColorBrush x:Key="ToolBarSubMenuBackground.Blue" Color="#FDFDFD"/>
  <SolidColorBrush x:Key="ToolBarMenuCheckFill.Blue" Color="#E6F0FA"/>
  <SolidColorBrush x:Key="MenuKeyBoardStroke.Blue" Color="#FF6495ED"/>
  <SolidColorBrush x:Key="MenuKeyBoardFill.Blue" Color="#FFE0EEFF"/>
  <SolidColorBrush x:Key="TabHeaderPanelBackground.Blue" Color="#FFBFDBFF"/>
  <SolidColorBrush x:Key="ThumbBorderBrush.Blue" Color="#FF5F6E93"/>
  <SolidColorBrush x:Key="ThumbHighlightBorderBrush.Blue" Color="#FF3C6EB0"/>
  <SolidColorBrush x:Key="ThumbPressedBorderBrush.Blue" Color="#FF17498A"/>
  <SolidColorBrush x:Key="CornerBackground" Color="#FFF7F7F7"/>
  <LinearGradientBrush x:Key="VerticalThumbBackground.Blue" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFEDF0F3" Offset="0"/>
    <GradientStop Color="#FFE9EDF2" Offset="0.394"/>
    <GradientStop Color="#FFC5D0DE" Offset="0.583"/>
    <GradientStop Color="#FFBECADB" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalThumbBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFEDF0F3" Offset="0"/>
    <GradientStop Color="#FFE9EDF2" Offset="0.394"/>
    <GradientStop Color="#FFC5D0DE" Offset="0.583"/>
    <GradientStop Color="#FFBECADB" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalThumbHightlightBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFC7DBF6" Offset="0"/>
    <GradientStop Color="#FFCADFFA" Offset="0.435"/>
    <GradientStop Color="#FFAACBF6" Offset="0.521"/>
    <GradientStop Color="#FFD3E4FA" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalThumbHightlightBackground.Blue" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFC7DBF6" Offset="0"/>
    <GradientStop Color="#FFCADFFA" Offset="0.435"/>
    <GradientStop Color="#FFAACBF6" Offset="0.521"/>
    <GradientStop Color="#FFAACBF6" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ScrollFill.Blue" Color="#FF4B4F55"/>
  <LinearGradientBrush x:Key="HorizontalThumbPressedBackground.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FF9FC0EB" Offset="0"/>
    <GradientStop Color="#FFA4C7F6" Offset="0.435"/>
    <GradientStop Color="#FF6EA6F0" Offset="0.521"/>
    <GradientStop Color="#FF6EA6F0" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalThumbPressedBackground.Blue" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FF9FC0EB" Offset="0"/>
    <GradientStop Color="#FFA4C7F6" Offset="0.435"/>
    <GradientStop Color="#FF6EA6F0" Offset="0.521"/>
    <GradientStop Color="#FF6EA6F0" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="HorizontalScrollbarBackground.Blue" StartPoint="0,0" EndPoint="0,1">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF7E9DC6" Offset="0"/>
      <GradientStop Color="#FF7395C0" Offset="0.194"/>
      <GradientStop Color="#FF7999C2" Offset="0.80"/>
      <GradientStop Color="#FF7F9DC5" Offset="0.989"/>
      <GradientStop Color="#FF8DAACE" Offset="0.174"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="VerticalScrollBarBackground.Blue" StartPoint="0,0" EndPoint="1,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#FF7E9DC6" Offset="0"/>
      <GradientStop Color="#FF7395C0" Offset="0.194"/>
      <GradientStop Color="#FF7999C2" Offset="0.80"/>
      <GradientStop Color="#FF7F9DC5" Offset="0.989"/>
      <GradientStop Color="#FF8DAACE" Offset="0.174"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ScrollHorizontalRepeatButtonHighlightBrush.Blue" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFF4F9FF" Offset="0"/>
    <GradientStop Color="#FFF4F9FF" Offset="0.5"/>
    <GradientStop Color="#FFD0E2F9" Offset="0.5"/>
    <GradientStop Color="#FFDFECFC" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ScrollVerticalRepeatButtonPressedBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFE6E8EB" Offset="0"/>
    <GradientStop Color="#FFE7E8EB" Offset="0.5"/>
    <GradientStop Color="#FFCBD1D8" Offset="0.5"/>
    <GradientStop Color="#FFEAEDF0" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ScrollHorizontalRepeatButtonPressedBrush.Blue" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFE6E8EB" Offset="0"/>
    <GradientStop Color="#FFE7E8EB" Offset="0.5"/>
    <GradientStop Color="#FFCBD1D8" Offset="0.5"/>
    <GradientStop Color="#FFEAEDF0" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ScrollVerticalRepeatButtonHighlightBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF4F9FF" Offset="0"/>
    <GradientStop Color="#FFF4F9FF" Offset="0.5"/>
    <GradientStop Color="#FFD0E2F9" Offset="0.5"/>
    <GradientStop Color="#FFDFECFC" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ScrollVerticalRepeatButtonBrush.Blue" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#FFF4F9FF" Offset="0"/>
    <GradientStop Color="#FFF4F9FF" Offset="0.5"/>
    <GradientStop Color="#FFD4E5FA" Offset="0.5"/>
    <GradientStop Color="#FFF5F9FF" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ScrollHorizontalRepeatButtonBrush.Blue" EndPoint="1,0.5" StartPoint="0,0.5">
    <GradientStop Color="#FFF4F9FF" Offset="0"/>
    <GradientStop Color="#FFF4F9FF" Offset="0.5"/>
    <GradientStop Color="#FFD4E5FA" Offset="0.5"/>
    <GradientStop Color="#FFF5F9FF" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ButtonBase}">
          <theme:ButtonChrome FrameworkElement.Name="Chrome" Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              RenderDefaulted="{TemplateBinding Button.IsDefaulted}" UIElement.SnapsToDevicePixels="true">
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </theme:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBorderBrush.Blue}"
                      Property="theme:ButtonChrome.BorderBrush"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}"
                      Property="theme:ButtonChrome.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBorderBrush.Blue}"
                      Property="theme:ButtonChrome.BorderBrush"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBrush.Blue}"
                      Property="theme:ButtonChrome.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Chrome" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource BaseButtonStyle}" TargetType="{x:Type Button}"/>
  <Style x:Key="CheckRadioFocusVisual.Blue">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="14,0,0,0" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                     SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="EmptyCheckBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type CheckBox}">
    <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource EmptyCheckBoxFocusVisual}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type CheckBox}">
          <BulletDecorator SnapsToDevicePixels="true" Background="Transparent">
            <BulletDecorator.Bullet>
              <Border x:Name="border1" Width="13" Height="13"
                      BorderBrush="{StaticResource CheckBoxOuterBorderBrush.Blue}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Background="{TemplateBinding Control.Background}">
                <Border x:Name="border2" BorderBrush="{StaticResource CheckInnerBorderBrush.Blue}" BorderThickness="1">
                  <Border x:Name="border3" BorderThickness="1" Background="{StaticResource CheckBoxInnerFillBrush.Blue}"
                          BorderBrush="{StaticResource CheckBoxInnerBorderBrush.Blue}">
                    <Canvas SnapsToDevicePixels="true">
                      <Path x:Name="path">
                        <Path.Data>
                          <PathGeometry>
                            <PathFigure StartPoint="2,4">
                              <LineSegment Point="3,6"/>
                              <LineSegment Point="5,-1"/>
                              <LineSegment Point="7,-1"/>
                              <LineSegment Point="4,8"/>
                              <LineSegment Point="2,8"/>
                              <LineSegment Point="0,5"/>
                            </PathFigure>
                          </PathGeometry>
                        </Path.Data>
                      </Path>
                    </Canvas>
                  </Border>
                </Border>
              </Border>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="true">
              <Setter Value="{StaticResource CheckRadioFocusVisual.Blue}" Property="FrameworkElement.FocusVisualStyle"/>
              <Setter Property="Control.Padding" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="path" Value="{StaticResource PathFill.Blue}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsEnabled" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="border1" Value="{StaticResource CheckBoxBorderBrushHover.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border3" Value="{StaticResource CheckBoxOverInnerBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border3" Value="{StaticResource CheckBoxOverInnerFillBrush.Blue}"
                      Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="border1" Value="{StaticResource CheckBoxBorderBrushHover.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border3" Value="{StaticResource PressedBorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="border3" Value="{StaticResource PressedBackgroundBrush.Blue}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
              <Setter TargetName="border3" Value="{StaticResource PathFill.Blue}" Property="Border.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <DataTemplate DataType="{x:Type CollectionViewGroup}">
    <TextBlock Text="{Binding Path=Name}"/>
  </DataTemplate>
  <Geometry x:Key="DownArrowGeometry">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <Style x:Key="BlueComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" Background="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Chrome1" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
              </Grid.ColumnDefinitions>
              <Border Name="Chrome" Background="{TemplateBinding Control.Background}" BorderThickness="0"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.Column="1" Width="16">
                <Path Name="Arrow" Fill="{StaticResource PathFill.Blue}" Data="{StaticResource DownArrowGeometry}"
                      HorizontalAlignment="Center" VerticalAlignment="Center"/>
              </Border>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="Chrome" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome" Property="Border.BorderThickness" Value="1,0,0,0"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger SourceName="Chrome1" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome1" Property="Border.BorderThickness" Value="1"/>
              <Setter TargetName="Chrome" Property="Border.BorderThickness" Value="1,0,0,0"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource ComboBoxBorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome1" Value="{StaticResource ComboBoxBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome1" Property="Border.Background" Value="White"/>
            </Trigger>
            <Trigger SourceName="Chrome1" Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="Chrome1" Property="Border.BorderThickness" Value="1"/>
              <Setter TargetName="Chrome" Property="Border.BorderThickness" Value="1,0,0,0"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource ComboBoxBorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome1" Value="{StaticResource ComboBoxBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome1" Property="Border.Background" Value="White"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Property="Border.BorderThickness" Value="1,0,0,0"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxButtonStyleBlue" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Chrome" Grid.Column="1" Width="16" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
              <Path x:Name="ArrowDownPath" Data="{StaticResource DownArrowGeometry}"
                    Fill="{StaticResource PathFill.Blue}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Chrome" Value="{x:Null}" Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource ComboBoxBorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ComboBoxBorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome" Value="{StaticResource ToggleCheckedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                     SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="4,3"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid Name="MainGrid" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
            </Grid.ColumnDefinitions>
            <Popup Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Placement="Bottom" Margin="1"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent"
                                            FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                            FrameworkElement.MinWidth="{Binding ElementName=MainGrid, Path=ActualWidth}">
                <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}">
                  <ScrollViewer CanContentScroll="true">
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
            <ToggleButton Name="DropDownButton" Grid.ColumnSpan="2"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          Background="{TemplateBinding Control.Background}"
                          BorderBrush="{TemplateBinding Control.BorderBrush}"
                          Style="{StaticResource BlueComboBoxReadonlyToggleButton}"
                          IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ContentPresenter IsHitTestVisible="false" Margin="{TemplateBinding Control.Padding}"
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="DropDownButton" Property="Control.BorderThickness" Value="1"/>
              <Setter TargetName="DropDownButton" Value="{StaticResource ComboBoxBorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="DropDownButton" Property="Control.BorderThickness" Value="1"/>
              <Setter TargetName="DropDownButton" Value="{StaticResource ComboBoxBorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter Property="Control.Padding" Value="2"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="true">
        <Setter Property="Control.BorderThickness" Value="1"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
        <Setter Property="Control.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
        <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="Control.Padding" Value="3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBox}">
              <Grid Name="Placement" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup Name="PART_Popup" Grid.ColumnSpan="2" AllowsTransparency="true" Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent"
                                                FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                FrameworkElement.MinWidth="{Binding ElementName=Placement, Path=ActualWidth}">
                    <Border x:Name="DropDownBorder" BorderThickness="1" BorderBrush="{TemplateBinding Control.BorderBrush}"
                            Background="{TemplateBinding Control.Background}">
                      <ScrollViewer>
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      </ScrollViewer>
                    </Border>
                  </theme:SystemDropShadowChrome>
                </Popup>
                <Border x:Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}"/>
                <TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Control.Padding}"
                         Style="{StaticResource BlueComboBoxEditableTextBox}"
                         HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                         VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                         IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
                <ToggleButton Name="Tb1" Grid.Column="1" BorderBrush="{TemplateBinding Control.BorderBrush}"
                              Style="{StaticResource ComboBoxButtonStyleBlue}"
                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
                  <Setter Property="Control.Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="ItemsControl.HasItems" Value="false">
                  <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="Tb1" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Control.Background"/>
                  <Setter TargetName="Tb1" Value="{StaticResource ButtonMouseOverBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                  <Setter TargetName="Border" Value="{StaticResource ComboBoxBorderBrush.Blue}" Property="Border.BorderBrush"/>
                  <Setter TargetName="Border" Property="Border.Background" Value="White"/>
                  <Setter TargetName="PART_EditableTextBox" Property="Control.Background" Value="White"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="ItemsControl.IsGrouping" Value="true">
                  <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                  <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.Padding" Value="3,0,3,0"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxItemBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" CornerRadius="4" Margin="2,0,2,0" Background="{TemplateBinding Control.Background}"
                  BorderBrush="Transparent" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type RadioButton}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource CheckBoxBackgroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource CheckBoxBorderBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RadioButton}">
          <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
              <Canvas Name="canvas" Width="13" Height="13">
                <Ellipse x:Name="ellipse1" Width="13" Height="13" Fill="{TemplateBinding Control.Background}"
                         StrokeThickness="{TemplateBinding Control.BorderThickness}"
                         Stroke="{TemplateBinding Control.BorderBrush}"/>
                <Ellipse x:Name="ellipse2" Fill="{StaticResource CheckInnerBorderBrush.Blue}" Canvas.Left="2" Canvas.Top="2"
                         Width="9" Height="9"/>
                <Ellipse x:Name="ellipse3" Fill="{StaticResource CheckBoxInnerFillBrush.Blue}" StrokeThickness="1"
                         Canvas.Left="3" Canvas.Top="3" Width="7" Height="7"/>
                <Ellipse x:Name="ellipse" Canvas.Left="4" Canvas.Top="4" Width="5" Height="5"/>
              </Canvas>
            </BulletDecorator.Bullet>
            <ContentPresenter Margin="{TemplateBinding Control.Padding}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              RecognizesAccessKey="true"/>
          </BulletDecorator>
          <ControlTemplate.Triggers>
            <Trigger Property="ContentControl.HasContent" Value="true">
              <Setter Value="{StaticResource CheckRadioFocusVisual.Blue}" Property="FrameworkElement.FocusVisualStyle"/>
              <Setter Property="Control.Padding" Value="4,0,0,0"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ellipse" Value="{StaticResource PathFill.Blue}" Property="Shape.Fill"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="ellipse1" Value="{StaticResource CheckBoxBorderBrushHover.Blue}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="ellipse2" Value="{StaticResource PressedBorderBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="ellipse3" Value="{StaticResource PressedBackgroundBrush.Blue}" Property="Shape.Fill"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsEnabled" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ellipse1" Value="{StaticResource CheckBoxBorderBrushHover.Blue}"
                      Property="Shape.Stroke"/>
              <Setter TargetName="ellipse2" Value="{StaticResource CheckInnerBorderBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="ellipse3" Value="{StaticResource CheckBoxOverInnerFillBrush.Blue}"
                      Property="Shape.Fill"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListBox}">
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListBoxBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBox}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true" Padding="1">
            <ScrollViewer Padding="{TemplateBinding Control.Padding}" Focusable="false">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ListBoxMouseOver.Blue}" Property="Border.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListBoxItem}">
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.Padding" Value="2,0,0,0"/>
    <Setter Property="FrameworkElement.Margin" Value="2"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListBoxItem}">
          <Border Name="Bd" CornerRadius="2" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
  <Geometry x:Key="DownArrow">
    M 0,0 L 3.5,4 L 7,0 Z
  </Geometry>
  <Geometry x:Key="UpArrow">
    M 0,4 L 3.5,0 L 7,4 Z
  </Geometry>
  <Geometry x:Key="RightArrow">
    M 0,0 L 4,3.5 L 0,7 Z
  </Geometry>
  <Geometry x:Key="ToolBarCheckmark">
    M 0,2.5 L 2.5,5 L 7,0.5
  </Geometry>
  <Geometry x:Key="Checkmark">
    M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z
  </Geometry>
  <ControlTemplate x:Key="BlueSubmenuContent" TargetType="{x:Type ContentControl}">
    <Border Background="#F5F5F5" BorderBrush="#868686" BorderThickness="1" CornerRadius="3,3,3,3">
      <Grid>
        <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}" HorizontalAlignment="Left" Width="28"
                   Margin="2" RadiusX="2" RadiusY="2"/>
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="30,2,0,2"
                   Fill="{StaticResource MenuItemBorderBrush.Blue}"/>
        <Rectangle HorizontalAlignment="Left" Width="1" Margin="32,2,0,2" Fill="#FAFAFA"/>
        <ContentPresenter Grid.ColumnSpan="2" Margin="3"/>
      </Grid>
    </Border>
  </ControlTemplate>
  <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
    <Setter Property="ButtonBase.ClickMode" Value="Hover"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <DockPanel Background="Transparent" SnapsToDevicePixels="true">
            <Rectangle x:Name="R1" DockPanel.Dock="Right" Width="1" Fill="Transparent"/>
            <Rectangle x:Name="B1" DockPanel.Dock="Bottom" Height="1" Fill="Transparent"/>
            <Rectangle x:Name="L1" DockPanel.Dock="Left" Width="1" Fill="Transparent"/>
            <Rectangle x:Name="T1" DockPanel.Dock="Top" Height="1" Fill="Transparent"/>
            <ContentPresenter x:Name="ContentContainer" Margin="2,2,2,2" VerticalAlignment="Center" HorizontalAlignment="Center"/>
          </DockPanel>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="R1" Value="{DynamicResource {x:Static JetSystemColors.ControlLightLightBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="B1" Value="{DynamicResource {x:Static JetSystemColors.ControlLightLightBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="L1" Value="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="T1" Value="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"
                      Property="Shape.Fill"/>
              <Setter TargetName="ContentContainer" Property="FrameworkElement.Margin" Value="3,3,1,1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}"
         TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border Grid.Row="1" Grid.Column="0">
              <ScrollContentPresenter Margin="{TemplateBinding Control.Padding}"/>
            </Border>
            <RepeatButton Style="{StaticResource MenuScrollButton}" Grid.Row="0" Grid.Column="0"
                          Command="{x:Static ScrollBar.LineUpCommand}" Focusable="false"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="0">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static JetSystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource UpArrow}"/>
            </RepeatButton>
            <RepeatButton Style="{StaticResource MenuScrollButton}" Grid.Row="2" Grid.Column="0"
                          Command="{x:Static ScrollBar.LineDownCommand}" Focusable="false"
                          CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
              <UIElement.Visibility>
                <MultiBinding FallbackValue="Visibility.Collapsed" Converter="{StaticResource MenuScrollingVisibilityConverter}"
                              ConverterParameter="100">
                  <Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                  <Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}"/>
                </MultiBinding>
              </UIElement.Visibility>
              <Path Fill="{DynamicResource {x:Static JetSystemColors.MenuTextBrushKey}}"
                    Data="{StaticResource DownArrow}"/>
            </RepeatButton>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Menu}">
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.Background" Value="{StaticResource MenuBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <FrameworkTemplate.Resources>
            <Style TargetType="{x:Type Separator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
              <Setter Property="Border.BorderThickness" Value="0,0,0,1"/>
              <Setter Property="FrameworkElement.MinHeight" Value="2"/>
              <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter Property="FrameworkElement.Height" Value="1"/>
              <Setter Property="FrameworkElement.Margin" Value="26,2,2,2"/>
              <Setter Property="Control.Background" Value="{StaticResource SeparatorBrush.Blue}"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Margin="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
              <Setter Property="Control.VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
              <Setter Property="Control.Background" Value="Transparent"/>
              <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
              <Setter Property="Control.BorderThickness" Value="1"/>
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,0"/>
              <Setter Property="Control.Padding" Value="8,3,8,3"/>
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                        <ColumnDefinition Width="14"/>
                      </Grid.ColumnDefinitions>
                      <Border Name="Border" Background="{TemplateBinding Control.Background}"
                              BorderThickness="{TemplateBinding Control.BorderThickness}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0"/>
                      <ContentPresenter x:Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                              BorderBrush="{StaticResource BorderBrush.Blue}" Background="#FFFFA600" BorderThickness="1">
                        <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                              Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                              Data="{StaticResource ToolBarCheckmark}"/>
                      </Border>
                      <ContentPresenter Name="content" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                        RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="4,3,2,3"
                                 HorizontalAlignment="Right"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="true">
                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="true">
                        <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                        <Setter TargetName="Border" Property="Border.Background" Value="#83FFD152"/>
                        <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                        <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.Background"/>
                        <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled" Value="false">
                        <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                  <Setter Property="Control.Padding" Value="6,2,7,2"/>
                  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                  <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                          <DockPanel Name="Header">
                            <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                            <ContentPresenter Name="content" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Popup x:Name="PART_Popup" Placement="Bottom" HorizontalOffset="-1" Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   AllowsTransparency="true"
                                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                              <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                                <Border Background="#F5F5F5" BorderBrush="{StaticResource MenuKeyBoardStroke.Blue}" BorderThickness="1">
                                  <Grid IsSharedSizeScope="true">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                      <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}" Margin="0,1"/>
                                    <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}" Grid.ColumnSpan="2" Margin="0,-1,0,0"
                                               VerticalAlignment="Top" HorizontalAlignment="Left" Height="1"
                                               Width="{Binding ElementName=Header, Path=ActualWidth}"/>
                                    <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2"
                                                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                      <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                      Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                  </Grid>
                                </Border>
                              </theme:SystemDropShadowChrome>
                            </Popup>
                          </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                          </Trigger>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
                            <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                  <Setter Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                  <Setter Property="Control.Padding" Value="7,1,8,2"/>
                  <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                          <DockPanel>
                            <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                            <ContentPresenter Name="content" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
                            <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                  <Setter Property="DockPanel.Dock" Value="Top"/>
                  <Setter Property="Control.Padding" Value="8,3,8,3"/>
                  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="Transparent" SnapsToDevicePixels="true">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                            <ColumnDefinition Width="14"/>
                          </Grid.ColumnDefinitions>
                          <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0"/>
                          <ContentPresenter x:Name="Icon" Margin="3" VerticalAlignment="Center" ContentSource="Icon"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                                  BorderBrush="{StaticResource BorderBrush.Blue}" Background="#FFFFA600" BorderThickness="1">
                            <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                                  Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                          </Border>
                          <ContentPresenter Name="content" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                            RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0"
                                Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                          <Popup x:Name="PART_Popup" Placement="Right" Focusable="false"
                                 PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                 AllowsTransparency="true"
                                 IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                              <Border Background="#F5F5F5" BorderBrush="{StaticResource MenuKeyBoardStroke.Blue}" BorderThickness="1"
                                      Grid.IsSharedSizeScope="true">
                                <Grid>
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                  </Grid.ColumnDefinitions>
                                  <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}" Margin="0,1"/>
                                  <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}" Grid.ColumnSpan="2" Margin="0,-1,0,0"
                                             VerticalAlignment="Top" HorizontalAlignment="Left" Height="1"
                                             Width="{Binding ElementName=Header, Path=ActualWidth}"/>
                                  <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2"
                                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                    Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                  </ScrollViewer>
                                </Grid>
                              </Border>
                            </theme:SystemDropShadowChrome>
                          </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                          </Trigger>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Property="Border.Background" Value="#83FFD152"/>
                            <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                            <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
          </FrameworkTemplate.Resources>
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type MenuItem}">
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type MenuItem}">
          <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                       Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
            <Rectangle x:Name="InnerBorder" Margin="1" RadiusX="2" RadiusY="2"/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                <ColumnDefinition Width="4"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="37"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                <ColumnDefinition Width="17"/>
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <Border x:Name="GlyphPanel" BorderBrush="#F29536" Background="#FFE395" BorderThickness="1" CornerRadius="3"
                      Margin="1" Visibility="Hidden" Width="22" Height="22">
                <Path Stroke="Black" StrokeThickness="1.4">
                  <Path.Data>
                    <GeometryGroup>
                      <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                      <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                    </GeometryGroup>
                  </Path.Data>
                </Path>
              </Border>
              <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}"
                         Margin="{TemplateBinding Control.Padding}"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Value="{x:Null}" Property="MenuItem.Icon">
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsChecked" Value="true">
              <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="MenuItem.IsHighlighted" Value="true">
              <Setter TargetName="Bg" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="Bg" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
        <Setter Property="Control.Padding" Value="7,2,8,3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2"/>
                <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                  <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Border x:Name="GlyphPanel" Grid.Column="0" Visibility="Collapsed" Width="21" Height="21"
                          BorderThickness="1" BorderBrush="#F29536" Background="#FFE395" CornerRadius="2">
                    <Path Stroke="Black" StrokeThickness="1.4">
                      <Path.Data>
                        <GeometryGroup>
                          <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                          <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                        </GeometryGroup>
                      </Path.Data>
                    </Path>
                  </Border>
                  <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </DockPanel>
                <Popup x:Name="PART_Popup" HorizontalOffset="1" VerticalOffset="-1" AllowsTransparency="true"
                       Placement="Bottom" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                    <ContentControl Name="SubMenuBorder" Template="{DynamicResource BlueSubmenuContent}" IsTabStop="false">
                      <ScrollViewer CanContentScroll="true"
                                    Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                      </ScrollViewer>
                    </ContentControl>
                  </theme:SystemDropShadowChrome>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                  <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="true">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                  <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
                  <Setter TargetName="Bg" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Shape.Fill"/>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Shape.Stroke"/>
                  <Setter TargetName="Bg" Value="{StaticResource MenuKeyBoardFill.Blue}" Property="Shape.Fill"/>
                </Trigger>
                <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Shape.Stroke"/>
                  <Setter TargetName="Bg" Value="{StaticResource MenuKeyBoardFill.Blue}" Property="Shape.Fill"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="TopLevelItem">
        <Setter Property="Control.Padding" Value="7,2,8,3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid SnapsToDevicePixels="true">
                <Rectangle x:Name="OuterBorder" RadiusX="2" RadiusY="2"/>
                <Rectangle Name="Bg" Margin="1" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="1" RadiusY="1"/>
                <Rectangle x:Name="InnerBorder" Margin="2"/>
                <DockPanel>
                  <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Border x:Name="GlyphPanel" Grid.Column="0" Visibility="Collapsed" Width="21" Height="21"
                          BorderThickness="1" BorderBrush="#F29536" Background="#FFE395" CornerRadius="2">
                    <Path Stroke="Black" StrokeThickness="1.4">
                      <Path.Data>
                        <GeometryGroup>
                          <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                          <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                        </GeometryGroup>
                      </Path.Data>
                    </Path>
                  </Border>
                  <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </DockPanel>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="true">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
                  <Setter TargetName="Bg" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Shape.Fill"/>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Shape.Stroke"/>
                  <Setter TargetName="Bg" Value="{StaticResource MenuKeyBoardFill.Blue}" Property="Shape.Fill"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
        <Setter Property="Control.Padding" Value="2,3,2,3"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type MenuItem}">
              <Grid SnapsToDevicePixels="true">
                <Rectangle Name="Bg" Fill="{TemplateBinding Control.Background}"
                           Stroke="{TemplateBinding Control.BorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                <Rectangle x:Name="InnerBorder" Margin="1" Stroke="Transparent" StrokeThickness="1" RadiusX="2" RadiusY="2"/>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                  </Grid.ColumnDefinitions>
                  <ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <Border x:Name="GlyphPanel" BorderBrush="#F29536" Background="#FFE395" BorderThickness="1" CornerRadius="3"
                          Margin="1" Visibility="Hidden" Width="22" Height="22">
                    <Path Stroke="Black" StrokeThickness="1.4">
                      <Path.Data>
                        <GeometryGroup>
                          <LineGeometry StartPoint="6 9" EndPoint="9 16"/>
                          <LineGeometry StartPoint="9 16" EndPoint="13 3"/>
                        </GeometryGroup>
                      </Path.Data>
                    </Path>
                  </Border>
                  <ContentPresenter Grid.Column="2" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                    RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  <TextBlock Grid.Column="4" Text="{TemplateBinding MenuItem.InputGestureText}"
                             Margin="{TemplateBinding Control.Padding}" Visibility="Collapsed"/>
                  <Path Grid.Column="5" VerticalAlignment="Center" Margin="4,0,0,0"
                        Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                </Grid>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Placement="Right" VerticalOffset="-3"
                       HorizontalOffset="-2" Focusable="false"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                  <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                    <ContentControl Name="SubMenuBorder" Template="{DynamicResource BlueSubmenuContent}" IsTabStop="false">
                      <ScrollViewer CanContentScroll="true"
                                    Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                        <ItemsPresenter Margin="2" KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" Grid.IsSharedSizeScope="true"/>
                      </ScrollViewer>
                    </ContentControl>
                  </theme:SystemDropShadowChrome>
                </Popup>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                  <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger Property="MenuItem.IsChecked" Value="true">
                  <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                  <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                  <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                </Trigger>
                <Trigger Property="MenuItem.IsHighlighted" Value="true">
                  <Setter TargetName="Bg" Value="{StaticResource MouseOverBrushIn.Blue}" Property="Shape.Fill"/>
                  <Setter TargetName="Bg" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="MenuItem.Role" Value="SubmenuItem">
        <Setter Property="Control.Padding" Value="2,3,2,3"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Margin="28,2,2,2" Height="1" Background="{StaticResource MenuSeparatorBrush.Blue}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ContextMenu}">
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="{StaticResource ContextMenuBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ContextMenuBorderBrush.Blue}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
    <Setter Property="ContextMenu.HasDropShadow"
            Value="{DynamicResource {x:Static SystemParameters.DropShadowKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContextMenu}">
          <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="#00FFFFFF" UIElement.SnapsToDevicePixels="true">
            <Border Background="{TemplateBinding Panel.Background}" CornerRadius="3,3,3,3"
                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                    BorderThickness="{TemplateBinding Border.BorderThickness}">
              <Grid>
                <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}" HorizontalAlignment="Left" Width="28"
                           Margin="1,1,1,1" RadiusX="2" RadiusY="2"/>
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="26,1,0,1"
                           Fill="{StaticResource MenuItemBorderBrush.Blue}"/>
                <Rectangle HorizontalAlignment="Left" Width="1" Margin="27,1,0,1" Fill="#FAFAFA"/>
                <ScrollViewer Margin="1,0,1,0" CanContentScroll="true" Grid.ColumnSpan="2"
                              Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                  <ItemsPresenter Margin="{TemplateBinding Control.Padding}" KeyboardNavigation.DirectionalNavigation="Cycle"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </ScrollViewer>
              </Grid>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ContextMenuService.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToolTip}">
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ToolTipBorderBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ToolTipBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
    <Setter Property="Control.Padding" Value="5,1,5,4"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolTip}">
          <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent" UIElement.SnapsToDevicePixels="true"
                                        CornerRadius="2">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                    CornerRadius="2">
              <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
          </theme:SystemDropShadowChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolTip.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TreeView}">
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ListBoxBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeView}">
          <Border Name="Bd" CornerRadius="2" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <ScrollViewer Background="{TemplateBinding Control.Background}" Focusable="false" CanContentScroll="false"
                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                          Padding="{TemplateBinding Control.Padding}"
                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}">
              <ItemsPresenter/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.Width" Value="12"/>
    <Setter Property="FrameworkElement.Height" Value="12"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Height="11" BorderBrush="{StaticResource TreeViewFill.Blue}" CornerRadius="1" Width="11"
                  BorderThickness="1" SnapsToDevicePixels="true" Background="{StaticResource ToolTipBackground.Blue}">
            <Path Name="ExpandPath" Margin="2" Data="M 0,2 L 0,3 2,3 2,5 3,5 3,3 5,3 5,2 3,2 3,0 2,0 2,2 Z"
                  Fill="{StaticResource TreeViewFill.Blue}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="ExpandPath" Property="Path.Data" Value="M 0,2 L 0,3 5,3 5,2 Z"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TreeViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TreeViewItem}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
    <Setter Property="Control.Padding" Value="1,0,0,0"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TreeViewItem}">
          <Grid>
            <Grid.ColumnDefinitions>
              <ColumnDefinition MinWidth="19" Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Name="Part_Select" Orientation="Horizontal" Grid.ColumnSpan="3" Grid.Column="0">
              <ToggleButton x:Name="Expander" Style="{StaticResource BlueExpandCollapseToggleStyle}" ClickMode="Press"
                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Border Name="Bd" Grid.Column="1" Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
                <ContentPresenter x:Name="PART_Header" ContentSource="Header"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Border>
            </StackPanel>
            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TreeViewItem.IsExpanded" Value="false">
              <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="TreeViewItem.IsSelected" Value="true">
              <Setter TargetName="Part_Select" Value="{StaticResource ButtonMouseOverBrush.Blue}"
                      Property="Panel.Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TreeViewItem.IsSelected" Value="true"/>
                <Condition Property="TreeViewItem.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Part_Select" Value="{StaticResource ButtonMouseOverBrush.Blue}"
                      Property="Panel.Background"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TextBoxBase}" BasedOn="{x:Null}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorderBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBoxBase}">
          <theme:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                               UIElement.SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource TextBoxBorderBrushHover.Blue}"
                      Property="theme:ListBoxChrome.BorderBrush"/>
              <Setter TargetName="Bd" Property="theme:ListBoxChrome.Background" Value="White"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource TextBoxBorderBrushHover.Blue}"
                      Property="theme:ListBoxChrome.BorderBrush"/>
              <Setter TargetName="Bd" Property="theme:ListBoxChrome.Background" Value="White"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type TextBox}"/>
  <Style TargetType="{x:Type PasswordBox}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorderBrush.Blue}"/>
    <Setter Property="Control.FontFamily" Value="Times New Roman"/>
    <Setter Property="PasswordBox.PasswordChar" Value="●"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type PasswordBox}">
          <theme:ListBoxChrome x:Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                               BorderBrush="{TemplateBinding Control.BorderBrush}"
                               Background="{TemplateBinding Control.Background}"
                               RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                               RenderFocused="{TemplateBinding UIElement.IsKeyboardFocusWithin}"
                               UIElement.SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </theme:ListBoxChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource TextBoxBorderBrushHover.Blue}"
                      Property="theme:ListBoxChrome.BorderBrush"/>
              <Setter TargetName="Bd" Property="theme:ListBoxChrome.Background" Value="White"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource TextBoxBorderBrushHover.Blue}"
                      Property="theme:ListBoxChrome.BorderBrush"/>
              <Setter TargetName="Bd" Property="theme:ListBoxChrome.Background" Value="White"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource TreeViewFill.Blue}"
                       HorizontalAlignment="Center" VerticalAlignment="Center"
                       Fill="{StaticResource ButtonBackgroundBrush.Blue}"/>
              <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                    Stroke="{StaticResource PathFill.Blue}" StrokeThickness="2" SnapsToDevicePixels="false"
                    Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter Value="{StaticResource ButtonMouseOverBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ButtonPressedBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="19"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="180"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource TreeViewFill.Blue}"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         Fill="{StaticResource ButtonBackgroundBrush.Blue}"/>
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Stroke="{StaticResource PathFill.Blue}" StrokeThickness="2" SnapsToDevicePixels="false"
                      Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              </Grid>
              <ContentPresenter Grid.Column="1" Margin="4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter Value="{StaticResource ButtonMouseOverBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ButtonPressedBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource TreeViewFill.Blue}"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         Fill="{StaticResource ButtonBackgroundBrush.Blue}"/>
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Stroke="{StaticResource PathFill.Blue}" StrokeThickness="2" SnapsToDevicePixels="false"
                      Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter Value="{StaticResource ButtonMouseOverBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ButtonPressedBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Padding="{TemplateBinding Control.Padding}">
            <Grid Background="Transparent" SnapsToDevicePixels="false">
              <Grid.RowDefinitions>
                <RowDefinition Height="19"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid>
                <FrameworkElement.LayoutTransform>
                  <TransformGroup>
                    <TransformGroup.Children>
                      <TransformCollection>
                        <RotateTransform Angle="-90"/>
                      </TransformCollection>
                    </TransformGroup.Children>
                  </TransformGroup>
                </FrameworkElement.LayoutTransform>
                <Ellipse x:Name="circle" Width="19" Height="19" Stroke="{StaticResource TreeViewFill.Blue}"
                         HorizontalAlignment="Center" VerticalAlignment="Center"
                         Fill="{StaticResource ButtonBackgroundBrush.Blue}"/>
                <Path x:Name="arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Stroke="{StaticResource PathFill.Blue}" StrokeThickness="2" SnapsToDevicePixels="false"
                      Data="M 1,1.5 L 4.5,5 8,1.5 "/>
              </Grid>
              <ContentPresenter Grid.Row="1" Margin="0,4,0,0" HorizontalAlignment="Center" VerticalAlignment="Top"
                                SnapsToDevicePixels="true" RecognizesAccessKey="true"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="arrow" Property="Path.Data" Value="M 1,4.5 L 4.5,1 8,4.5 "/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter Value="{StaticResource ButtonMouseOverBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="circle" Property="Shape.Stroke" Value="#CAB583"/>
              <Setter TargetName="circle" Property="Shape.StrokeThickness" Value="1.5"/>
              <Setter Value="{StaticResource ButtonPressedBrush.Blue}" TargetName="circle" Property="Shape.Fill"/>
              <Setter Value="{StaticResource PathFill.Blue}" TargetName="arrow" Property="Shape.Stroke"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Expander}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxItemBackground.Blue}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Expander}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" CornerRadius="3" SnapsToDevicePixels="true">
            <DockPanel>
              <ToggleButton x:Name="HeaderSite" DockPanel.Dock="Top" Margin="1" MinWidth="0" MinHeight="0"
                            Style="{StaticResource BlueExpanderDownHeaderStyle}"
                            Content="{TemplateBinding HeaderedContentControl.Header}"
                            ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderedContentControl.HeaderTemplateSelector}"
                            Foreground="{TemplateBinding Control.Foreground}" Padding="{TemplateBinding Control.Padding}"
                            FontFamily="{TemplateBinding Control.FontFamily}" FontSize="{TemplateBinding Control.FontSize}"
                            FontStyle="{TemplateBinding Control.FontStyle}" FontStretch="{TemplateBinding Control.FontStretch}"
                            FontWeight="{TemplateBinding Control.FontWeight}"
                            HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                            IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="Collapsed" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}"/>
            </DockPanel>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Expander.IsExpanded" Value="true">
              <Setter TargetName="ExpandSite" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Right">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left"/>
              <Setter Value="{StaticResource BlueExpanderRightHeaderStyle}" TargetName="HeaderSite"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Up">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom"/>
              <Setter Value="{StaticResource BlueExpanderUpHeaderStyle}" TargetName="HeaderSite"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="Expander.ExpandDirection" Value="Left">
              <Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left"/>
              <Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right"/>
              <Setter Value="{StaticResource BlueExpanderLeftHeaderStyle}" TargetName="HeaderSite"
                      Property="FrameworkElement.Style"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
  <Style TargetType="{x:Type GroupBox}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxItemBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ComboBoxBorderBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupBox}">
          <Grid SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="6"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="6"/>
            </Grid.RowDefinitions>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" BorderBrush="Transparent"
                    Background="{TemplateBinding Control.Background}"/>
            <Border x:Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
              <ContentPresenter ContentSource="Header" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Control.Padding}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{StaticResource ComboBoxBorderBrush.Blue}">
              <UIElement.OpacityMask>
                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                  <Binding ElementName="Header" Path="ActualWidth"/>
                  <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                  <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                </MultiBinding>
              </UIElement.OpacityMask>
              <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="3">
                <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                        BorderBrush="{StaticResource ComboBoxBorderBrush.Blue}" CornerRadius="2"/>
              </Border>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type GroupItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GroupItem}">
          <StackPanel>
            <ContentPresenter/>
            <ItemsPresenter Margin="5,0,0,0"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Hyperlink}">
    <Setter Property="TextElement.Foreground" Value="Blue"/>
    <Setter Property="Inline.TextDecorations" Value="Underline"/>
    <Style.Triggers>
      <Trigger Property="ContentElement.IsMouseOver" Value="true">
        <Setter Property="TextElement.Foreground" Value="Red"/>
      </Trigger>
      <Trigger Property="ContentElement.IsEnabled" Value="false">
        <Setter Property="TextElement.Foreground"
                Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type StatusBar}">
    <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.StatusFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.StatusFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.StatusFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.StatusFontWeightKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBar}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static StatusBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource StatusBarSeparator.Blue}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="1"/>
    <Setter Property="FrameworkElement.MinHeight" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type StatusBarItem}">
    <Setter Property="Control.Padding" Value="3"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type StatusBarItem}">
          <Border Name="bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill1" MappingMode="Absolute" StartPoint="-100,0" EndPoint="0,0">
    <GradientBrush.GradientStops>
      <GradientStop Color="#00000000" Offset="0"/>
      <GradientStop Color="#FF000000" Offset="0.4"/>
      <GradientStop Color="#FF000000" Offset="0.6"/>
      <GradientStop Color="#00000000" Offset="1"/>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <Style TargetType="{x:Type ProgressBar}">
    <Setter Property="Control.Foreground" Value="{StaticResource ProgressBarForeground.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource ProgressBarBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ProgressBarBorderBrushes.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid Name="Background" SnapsToDevicePixels="true">
            <Rectangle Fill="{TemplateBinding Control.Background}" RadiusX="2" RadiusY="2"/>
            <Border Background="{StaticResource ProgressBarGlassyHighlightBrush.Blue}" Margin="1" CornerRadius="2"/>
            <Border BorderBrush="#80FFFFFF" Background="{StaticResource ProgressBarTopHighlightBrush.Blue}"
                    BorderThickness="1,0,1,1" Margin="1"/>
            <Rectangle Name="PART_Track" Margin="1" Fill="{StaticResource DefaultThumbBrush.Blue}" Stroke="DarkGray"
                       StrokeThickness="0.5"/>
            <Decorator x:Name="PART_Indicator" HorizontalAlignment="Left" Margin="1">
              <Grid Name="Foreground">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="15"/>
                  <ColumnDefinition Width="0.1*"/>
                  <ColumnDefinition MaxWidth="15"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition/>
                  <RowDefinition/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="Indicator" Grid.RowSpan="2" Grid.ColumnSpan="3" Fill="{TemplateBinding Control.Foreground}"/>
                <Rectangle x:Name="Animation" Grid.RowSpan="2" Grid.ColumnSpan="3" Fill="{TemplateBinding Control.Foreground}">
                  <UIElement.OpacityMask>
                    <MultiBinding>
                      <MultiBinding.Converter>
                        <theme:ProgressBarHighlightConverter/>
                      </MultiBinding.Converter>
                      <Binding Source="{StaticResource ProgressBarIndicatorAnimatedFill1}"/>
                      <Binding Path="ActualWidth" ElementName="Background"/>
                      <Binding Path="ActualHeight" ElementName="Background"/>
                    </MultiBinding>
                  </UIElement.OpacityMask>
                </Rectangle>
                <Rectangle x:Name="LeftDark" Grid.RowSpan="2"
                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeLeftBrush.Blue}" RadiusX="1" RadiusY="1"
                           Margin="1,1,0,1"/>
                <Rectangle x:Name="RightDark" Grid.RowSpan="2" Grid.Column="2" RadiusX="1" RadiusY="1"
                           Fill="{StaticResource ProgressBarIndicatorDarkEdgeRightBrush.Blue}" Margin="0,1,1,1"/>
                <Rectangle x:Name="LeftLight" Grid.Column="0" Grid.Row="2"
                           Fill="{StaticResource ProgressBarIndicatorLightingEffectLeftBrush.Blue}"/>
                <Rectangle x:Name="CenterLight" Grid.Column="1" Grid.Row="2"
                           Fill="{StaticResource ProgressBarIndicatorLightingEffectBrush.Blue}"/>
                <Rectangle x:Name="RightLight" Grid.Column="2" Grid.Row="2"
                           Fill="{StaticResource ProgressBarIndicatorLightingEffectRightBrush.Blue}"/>
                <Border x:Name="Highlight1" Grid.RowSpan="2" Grid.ColumnSpan="3"
                        Background="{StaticResource ProgressBarIndicatorGlassyHighlightBrush.Blue}"/>
                <Border x:Name="Highlight2" Grid.RowSpan="2" Grid.ColumnSpan="3"
                        Background="{StaticResource ProgressBarTopHighlightBrush.Blue}"/>
              </Grid>
            </Decorator>
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" CornerRadius="2"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="Background" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Track" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="PART_Indicator" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="90"/>
                </Setter.Value>
              </Setter>
              <Setter TargetName="Foreground" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
              <Setter TargetName="LeftDark" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="RightDark" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="LeftLight" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="CenterLight" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="RightLight" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="Indicator" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="false">
              <Setter TargetName="Animation" Value="{StaticResource ProgressBarFill.Blue}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Geometry x:Key="SliderPointedThumbOuterBorderGeometry">
    M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">
    M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z
  </Geometry>
  <Geometry x:Key="SliderPointedThumbInnerBorderGeometry">
    M 2.5,-6.5 L -2.5,-6.5 L -2.5,4.5 L 0,7 L 2.5 4.5 Z
  </Geometry>
  <Geometry x:Key="SliderPointedThumbDisabledGeometry">
    M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z
  </Geometry>
  <Geometry x:Key="SliderThumbOuterBorderGeometry">
    M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z
  </Geometry>
  <Geometry x:Key="SliderThumbMiddleBorderGeometry">
    M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z
  </Geometry>
  <Geometry x:Key="SliderThumbDisabledGeometry">
    M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z
  </Geometry>
  <Style x:Key="SliderRepeatButtonStyleBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="Transparent"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderThumbStyleBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="22"/>
    <Setter Property="FrameworkElement.Width" Value="11"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TranslateTransform X="5.5" Y="11"/>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource ButtonBackgroundBrush.Blue}"
                  Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="Transparent" Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonMouseOverBorderBrush.Blue}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonPressedBorderBrush.Blue}"
                      Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderUpThumbStyleBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="18"/>
    <Setter Property="FrameworkElement.Width" Value="10"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="180"/>
                    <TranslateTransform X="5" Y="9"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted.Blue}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbMouseOver.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbSelected.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalSliderDownThumbStyleBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="18"/>
    <Setter Property="FrameworkElement.Width" Value="10"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TranslateTransform X="5" Y="9"/>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource HorizontalSliderThumbNormalBackground.Blue}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbMouseOver.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbSelected.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderThumbStyleBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="11"/>
    <Setter Property="FrameworkElement.Width" Value="22"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform X="11" Y="5.5"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackground.Blue}"
                  Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1"
                  Data="{StaticResource SliderThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbMouseOver.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbSelected.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderLeftThumbStyleBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="10"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform X="9" Y="5"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackground.Blue}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbMouseOver.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbSelected.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalSliderRightThumbStyleBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="FrameworkElement.Height" Value="10"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="Control.Foreground" Value="Gray"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Canvas SnapsToDevicePixels="true">
            <UIElement.RenderTransform>
              <TransformGroup>
                <TransformGroup.Children>
                  <TransformCollection>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform X="9" Y="5"/>
                  </TransformCollection>
                </TransformGroup.Children>
              </TransformGroup>
            </UIElement.RenderTransform>
            <Path x:Name="Background" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted.Blue}"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
            <Path x:Name="InnerBorder" Stroke="Transparent" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}"/>
            <Path x:Name="OuterBorder" Stroke="#FF929292" StrokeThickness="1"
                  Data="{StaticResource SliderPointedThumbOuterBorderGeometry}"/>
          </Canvas>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbMouseOver.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="Background" Value="{StaticResource SliderThumbSelected.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource SelectedBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource BorderBrush.Blue}" Property="Shape.Stroke"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Slider}">
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource SliderTextBrushKey.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Slider}">
          <Border Name="OuterBorder" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
            <Grid>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding FrameworkElement.MinHeight}"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <TickBar x:Name="TopTick" Grid.Row="0" Visibility="Collapsed" Placement="Top"
                       Fill="{TemplateBinding Control.Foreground}" Height="4"/>
              <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Placement="Bottom"
                       Fill="{TemplateBinding Control.Foreground}" Height="4"/>
              <Border x:Name="TrackBackground" Grid.Row="1" Margin="5,0" VerticalAlignment="center"
                      BorderBrush="{StaticResource ButtonBorderBrush.Blue}" BorderThickness="1" CornerRadius="1"
                      Background="{StaticResource ButtonBackgroundBrush.Blue}" Height="4.0">
                <Canvas Margin="-6,-1">
                  <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                             Height="4.0" Visibility="Hidden" StrokeThickness="1.0"
                             Stroke="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"/>
                </Canvas>
              </Border>
              <Track Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                  <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlue}" Command="{x:Static Slider.DecreaseLarge}"/>
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                  <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlue}" Command="{x:Static Slider.IncreaseLarge}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                  <Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyleBlue}"/>
                </Track.Thumb>
              </Track>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="Slider.TickPlacement" Value="TopLeft">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyleBlue}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,2,5,0"/>
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="BottomRight">
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyleBlue}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="5,0,5,2"/>
            </Trigger>
            <Trigger Property="Slider.TickPlacement" Value="Both">
              <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="Slider.IsSelectionRangeEnabled" Value="true">
              <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Thumb" Property="Control.Foreground" Value="Blue"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="Slider.Orientation" Value="Vertical">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Slider}">
              <Border Background="{TemplateBinding Control.Background}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding FrameworkElement.MinWidth}"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <TickBar x:Name="TopTick" Grid.Column="0" Visibility="Collapsed" Placement="Left"
                           Fill="{TemplateBinding Control.Foreground}" Width="4"/>
                  <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Placement="Right"
                           Fill="{TemplateBinding Control.Foreground}" Width="4"/>
                  <Border Name="TrackBackground" Grid.Column="1" Margin="0,5" HorizontalAlignment="center"
                          BorderBrush="{StaticResource VerticalSliderTrackNormalBorder.Blue}" BorderThickness="1"
                          CornerRadius="1" Background="{StaticResource HorizontalSliderTrackNormalBackground.Blue}"
                          Width="4.0">
                    <Canvas Margin="-1,-6">
                      <Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                                 Width="4.0" Visibility="Hidden" StrokeThickness="1.0"
                                 Stroke="{DynamicResource {x:Static JetSystemColors.ControlDarkDarkBrushKey}}"/>
                    </Canvas>
                  </Border>
                  <Track Name="PART_Track" Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                      <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlue}" Command="{x:Static Slider.DecreaseLarge}"/>
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                      <RepeatButton Style="{StaticResource SliderRepeatButtonStyleBlue}" Command="{x:Static Slider.IncreaseLarge}"/>
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                      <Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyleBlue}"/>
                    </Track.Thumb>
                  </Track>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="Slider.TickPlacement" Value="TopLeft">
                  <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyleBlue}"
                          Property="FrameworkElement.Style"/>
                  <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="2,5,0,5"/>
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="BottomRight">
                  <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyleBlue}"
                          Property="FrameworkElement.Style"/>
                  <Setter TargetName="TrackBackground" Property="FrameworkElement.Margin" Value="0,5,2,5"/>
                </Trigger>
                <Trigger Property="Slider.TickPlacement" Value="Both">
                  <Setter TargetName="TopTick" Property="UIElement.Visibility" Value="Visible"/>
                  <Setter TargetName="BottomTick" Property="UIElement.Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="Slider.IsSelectionRangeEnabled" Value="true">
                  <Setter TargetName="PART_SelectionRange" Property="UIElement.Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                  <Setter TargetName="Thumb" Property="Control.Foreground" Value="Blue"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource SeparatorBrush.Blue}"/>
    <Setter Property="FrameworkElement.Margin" Value="0,2,0,2"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true" Height="1"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="TriangleInner" MappingMode="Absolute" StartPoint="241.030762,459.043945"
                       EndPoint="241.030762,464.498047">
    <GradientBrush.GradientStops>
      <GradientStop Offset="0.000000" Color="#ff404761"/>
      <GradientStop Offset="1.000000" Color="#ff617093"/>
      <GradientStop Offset="0.539326" Color="#ff617093"/>
    </GradientBrush.GradientStops>
    <Brush.Transform>
      <MatrixTransform Matrix="1.000000,0.000000,-0.000000,-1.000000,-197.282227,469.465820"/>
    </Brush.Transform>
  </LinearGradientBrush>
  <Style x:Key="ScrollBarDownButtonBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="PART_Repeat" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <Border Name="InnerBorderBrush" Background="Transparent" BorderThickness="1" CornerRadius="1">
              <Path Name="Arrow" Data="M 0,0 L 3.5,4 7,0 Z" HorizontalAlignment="Center" Height="5" Width="8"
                    Stretch="Fill" Fill="{StaticResource ScrollFill.Blue}" VerticalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="PART_Repeat" Value="{StaticResource VerticalThumbPressedBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_Repeat" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF404C6B"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="InnerBorderBrush" Property="Border.BorderBrush" Value="#FFE9ECF2"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Value="{StaticResource TriangleInner}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarLeftButtonBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="PART_Repeat"
                  Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <Border Name="InnerBorderBrush" Background="Transparent" BorderThickness="1" CornerRadius="1">
              <Path Name="Arrow" Data="M 7,1 L 3,5 7,9 Z" Stretch="Fill" Height="8" Width="5"
                    HorizontalAlignment="Center" Fill="{StaticResource ScrollFill.Blue}" VerticalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="PART_Repeat" Value="{StaticResource HorizontalThumbPressedBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_Repeat" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF404C6B"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="InnerBorderBrush" Property="Border.BorderBrush" Value="#FFE9ECF2"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Value="{StaticResource TriangleInner}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarRightButtonBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="PART_Repeat"
                  Height="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <Border Name="InnerBorderBrush" Background="Transparent" BorderThickness="1" CornerRadius="1">
              <Path Name="Arrow" Data="M 3,1 L 7,5 3,9 Z" Height="8" Width="5" Stretch="Fill"
                    HorizontalAlignment="Center" Fill="{StaticResource ScrollFill.Blue}" VerticalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="PART_Repeat" Value="{StaticResource HorizontalThumbPressedBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_Repeat" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF404C6B"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="InnerBorderBrush" Property="Border.BorderBrush" Value="#FFE9ECF2"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Value="{StaticResource TriangleInner}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarUpButtonBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Border Name="PART_Repeat" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}">
            <Border Name="InnerBorderBrush" Background="Transparent" BorderThickness="1" CornerRadius="1">
              <Path Name="Arrow" Data="M 0,4 L 7,4 3.5,0 Z" HorizontalAlignment="Center" Height="4" Width="8"
                    Stretch="Fill" Fill="{StaticResource ScrollFill.Blue}" VerticalAlignment="Center"/>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="PART_Repeat" Value="{StaticResource VerticalThumbPressedBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_Repeat" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF404C6B"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="InnerBorderBrush" Property="Border.BorderBrush" Value="#FFE9ECF2"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Value="{StaticResource TriangleInner}" Property="Shape.Fill"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarVerticalThumbBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid>
            <Border Name="PART_RepeatThumb" BorderBrush="{StaticResource ThumbBorderBrush.Blue}" CornerRadius="1"
                    BorderThickness="1" Background="{StaticResource VerticalThumbBackground.Blue}">
              <Border Background="Transparent" BorderThickness="0,1,1,0" CornerRadius="1" BorderBrush="#FFE9ECF2"/>
            </Border>
            <Path Margin="0,-6,0,0" Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path Margin="0,-2,0,0" Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path Margin="0,0,0,-2" Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path Margin="0,0,0,-6" Width="7" Height="1" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 4.8333325,7.2499995 L 12.012101,7.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource VerticalThumbHightlightBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource ThumbHighlightBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource VerticalThumbPressedBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource ThumbPressedBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ScrollBarHorizontalThumbBlue" TargetType="{x:Type Thumb}">
    <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Grid>
            <Border Name="PART_RepeatThumb" BorderBrush="{StaticResource ThumbBorderBrush.Blue}" CornerRadius="1"
                    BorderThickness="1" Background="{StaticResource HorizontalThumbBackground.Blue}">
              <Border Background="Transparent" BorderThickness="0,1,1,0" CornerRadius="1" BorderBrush="#FFE9ECF2"/>
            </Border>
            <Path Margin="-6,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 7.8333325,4.2499995 L 7.012101,12.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path Margin="-2,0,0,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 7.8333325,4.2499995 L 7.012101,12.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path Margin="0,0,-2,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 7.8333325,4.2499995 L 7.012101,12.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
            <Path Margin="0,0,-6,0" Width="1" Height="7" Stretch="Fill" Fill="Transparent" Stroke="#FF8B8C8F"
                  StrokeThickness="1" Data="M 7.8333325,4.2499995 L 7.012101,12.2499995 " VerticalAlignment="Center"
                  HorizontalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource HorizontalThumbHightlightBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource ThumbHighlightBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="Thumb.IsDragging" Value="true">
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource HorizontalThumbPressedBackground.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_RepeatThumb" Value="{StaticResource ThumbPressedBorderBrush.Blue}"
                      Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="HorizontalScrollBarPageButtonBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}"
                     Height="{TemplateBinding FrameworkElement.Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="VerticalScrollBarPageButtonBlue" TargetType="{x:Type RepeatButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type RepeatButton}">
          <Rectangle Fill="{TemplateBinding Control.Background}" Width="{TemplateBinding FrameworkElement.Width}"
                     Height="{TemplateBinding FrameworkElement.Height}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ScrollBar}">
    <Setter Property="Control.Background" Value="{StaticResource VerticalScrollBarBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="FrameworkElement.Width"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="FrameworkElement.MinWidth"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollBar}">
          <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Grid.RowDefinitions>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
              <RowDefinition Height="0.00001*"/>
              <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
            </Grid.RowDefinitions>
            <RepeatButton Name="UpButton" Style="{StaticResource ScrollBarUpButtonBlue}"
                          IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineUpCommand}"/>
            <Track Name="PART_Track" Grid.Row="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}"
                   IsDirectionReversed="true">
              <Track.DecreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlue}"
                              Command="{x:Static ScrollBar.PageUpCommand}"/>
              </Track.DecreaseRepeatButton>
              <Track.Thumb>
                <Thumb Style="{StaticResource ScrollBarVerticalThumbBlue}"/>
              </Track.Thumb>
              <Track.IncreaseRepeatButton>
                <RepeatButton Style="{StaticResource VerticalScrollBarPageButtonBlue}"
                              Command="{x:Static ScrollBar.PageDownCommand}"/>
              </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Name="DownButton" Style="{StaticResource ScrollBarDownButtonBlue}" Grid.Row="2"
                          IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineDownCommand}"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bg" Property="UIElement.Opacity" Value="0.7"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="UpButton" Value="{StaticResource VerticalThumbBackground.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="UpButton" Value="{StaticResource ThumbBorderBrush.Blue}" Property="Control.BorderBrush"/>
              <Setter TargetName="DownButton" Value="{StaticResource VerticalThumbBackground.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="DownButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="PART_Track" Property="UIElement.IsMouseOver" Value="false"/>
                <Condition SourceName="UpButton" Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="UpButton" Value="{StaticResource VerticalThumbHightlightBackground.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="UpButton" Value="{StaticResource ThumbBorderBrush.Blue}" Property="Control.BorderBrush"/>
              <Setter TargetName="DownButton" Value="{StaticResource VerticalThumbHightlightBackground.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="DownButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="PART_Track" Property="UIElement.IsMouseOver" Value="false"/>
                <Condition SourceName="DownButton" Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="UpButton" Value="{StaticResource VerticalThumbHightlightBackground.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="UpButton" Value="{StaticResource ThumbBorderBrush.Blue}" Property="Control.BorderBrush"/>
              <Setter TargetName="DownButton" Value="{StaticResource VerticalThumbHightlightBackground.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="DownButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ScrollBar.Orientation" Value="Horizontal">
        <Setter Property="FrameworkElement.Width" Value="Auto"/>
        <Setter Property="FrameworkElement.MinWidth" Value="0"/>
        <Setter Property="FrameworkElement.Height"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="FrameworkElement.MinHeight"
                Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
        <Setter Property="Control.Background" Value="{StaticResource HorizontalScrollbarBackground.Blue}"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ScrollBar}">
              <Grid Name="Bg" Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                  <ColumnDefinition Width="0.00001*"/>
                  <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                </Grid.ColumnDefinitions>
                <RepeatButton Name="LeftButton" Style="{StaticResource ScrollBarLeftButtonBlue}"
                              IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineLeftCommand}"/>
                <Track Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding UIElement.IsMouseOver}">
                  <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlue}"
                                  Command="{x:Static ScrollBar.PageLeftCommand}"/>
                  </Track.DecreaseRepeatButton>
                  <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource HorizontalScrollBarPageButtonBlue}"
                                  Command="{x:Static ScrollBar.PageRightCommand}"/>
                  </Track.IncreaseRepeatButton>
                  <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarHorizontalThumbBlue}"/>
                  </Track.Thumb>
                </Track>
                <RepeatButton Name="RightButton" Style="{StaticResource ScrollBarRightButtonBlue}" Grid.Column="2"
                              IsEnabled="{TemplateBinding UIElement.IsMouseOver}" Command="{x:Static ScrollBar.LineRightCommand}"/>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="Bg" Property="UIElement.Opacity" Value="0.7"/>
                </Trigger>
                <Trigger Property="UIElement.IsMouseOver" Value="true">
                  <Setter TargetName="LeftButton" Value="{StaticResource HorizontalThumbBackground.Blue}"
                          Property="Control.Background"/>
                  <Setter TargetName="LeftButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                  <Setter TargetName="RightButton" Value="{StaticResource HorizontalThumbBackground.Blue}"
                          Property="Control.Background"/>
                  <Setter TargetName="RightButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Track" Property="UIElement.IsMouseOver" Value="false"/>
                    <Condition SourceName="LeftButton" Property="UIElement.IsMouseOver" Value="true"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="LeftButton" Value="{StaticResource HorizontalThumbHightlightBackground.Blue}"
                          Property="Control.Background"/>
                  <Setter TargetName="LeftButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                  <Setter TargetName="RightButton" Value="{StaticResource HorizontalThumbHightlightBackground.Blue}"
                          Property="Control.Background"/>
                  <Setter TargetName="RightButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                </MultiTrigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition SourceName="PART_Track" Property="UIElement.IsMouseOver" Value="false"/>
                    <Condition SourceName="RightButton" Property="UIElement.IsMouseOver" Value="true"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="LeftButton" Value="{StaticResource HorizontalThumbHightlightBackground.Blue}"
                          Property="Control.Background"/>
                  <Setter TargetName="LeftButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                  <Setter TargetName="RightButton" Value="{StaticResource HorizontalThumbHightlightBackground.Blue}"
                          Property="Control.Background"/>
                  <Setter TargetName="RightButton" Value="{StaticResource ThumbBorderBrush.Blue}"
                          Property="Control.BorderBrush"/>
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type ScrollViewer}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="Grid" Background="{TemplateBinding Control.Background}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="Corner" Fill="{StaticResource CornerBackground}" Grid.Column="1" Grid.Row="1"/>
            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Margin="{TemplateBinding Control.Padding}" Grid.Column="0"
                                    Grid.Row="0" Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}" CanHorizontallyScroll="false"
                                    CanVerticallyScroll="false"/>
            <ScrollBar x:Name="PART_VerticalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow"
                       Grid.Column="1" Grid.Row="0" ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}" Minimum="0"
                       AutomationProperties.AutomationId="VerticalScrollBar"
                       Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
            <ScrollBar x:Name="PART_HorizontalScrollBar"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"
                       Grid.Column="0" Grid.Row="1" Orientation="Horizontal"
                       ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}" Minimum="0"
                       AutomationProperties.AutomationId="HorizontalScrollBar"
                       Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TabControl}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlBorderBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource Blue.TabButton.Selected.Blue}"/>
    <Setter Property="Control.Padding" Value="4,4,4,4"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabControl}">
          <Grid KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="true" ClipToBounds="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition x:Name="ColumnDefinition0"/>
              <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
              <RowDefinition x:Name="RowDefinition1" Height="*"/>
            </Grid.RowDefinitions>
            <TabPanel x:Name="HeaderPanel" ZIndex="1" KeyboardNavigation.TabIndex="1" Grid.Column="0" Grid.Row="0"
                      Margin="2,2,2,0" IsItemsHost="true" Background="{StaticResource TabHeaderPanelBackground.Blue}"/>
            <Border x:Name="ContentPanel" CornerRadius="5" Background="{TemplateBinding Control.Background}"
                    BorderThickness="2,0,2,0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained"
                    KeyboardNavigation.TabIndex="2" Grid.Column="0" Grid.Row="1">
              <ContentPresenter x:Name="PART_SelectedContentHost"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                Margin="{TemplateBinding Control.Padding}" ContentSource="SelectedContent"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,0,2,2"/>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Left">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="2,2,0,2"/>
            </Trigger>
            <Trigger Property="TabControl.TabStripPlacement" Value="Right">
              <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1"/>
              <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0"/>
              <Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*"/>
              <Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto"/>
              <Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*"/>
              <Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0"/>
              <Setter TargetName="HeaderPanel" Property="FrameworkElement.Margin" Value="0,2,2,2"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="TabItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="3,3,3,1" StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2"
                     SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type TabItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource TabItemFocusVisual}"/>
    <Setter Property="Control.Padding" Value="6,1,6,1"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TabControlBorderBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{StaticResource TabHeaderPanelBackground.Blue}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TabItem}">
          <Grid Margin="2,3,2,0" SnapsToDevicePixels="true">
            <Border Name="Bd" Height="23" Background="Transparent">
              <Grid ClipToBounds="true">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="7"/>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="7"/>
                </Grid.ColumnDefinitions>
                <Path Name="leftPath" Fill="{TemplateBinding Control.BorderBrush}" Grid.Column="0">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure StartPoint="0,30">
                        <LineSegment Point="0,21.5"/>
                        <ArcSegment Point="2,19" Size="2,2" RotationAngle="0" SweepDirection="Counterclockwise"/>
                        <LineSegment Point="2,5"/>
                        <ArcSegment Point="7,0" Size="5,5" RotationAngle="0" SweepDirection="Clockwise"/>
                        <LineSegment Point="7,30"/>
                        <LineSegment Point="0,30"/>
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
                <Path Name="PART_leftPath" Fill="{TemplateBinding Control.Background}" Grid.Column="0">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure StartPoint="0,23">
                        <ArcSegment Point="3,21" Size="3,3" RotationAngle="0" SweepDirection="Counterclockwise"/>
                        <LineSegment Point="3,5"/>
                        <ArcSegment Point="7,1" Size="4,4" RotationAngle="0" SweepDirection="Clockwise"/>
                        <LineSegment Point="7,23"/>
                        <LineSegment Point="0,23"/>
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
                <Border Name="PART_highlightBorder" Grid.Column="1" Margin="-5.7,-3.5,-5.7,0" BorderThickness="2,2,2,0"
                        CornerRadius="4,4,0,0" Height="20" Opacity="0.75"/>
                <Border Name="PART_highlightContour" Grid.Column="1"/>
                <Border Name="MainButton" Margin="-1,0,-1,0" Grid.Column="1" BorderThickness="0,1,0,0"
                        BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}">
                  <ContentPresenter Name="Content" ContentSource="Header"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" RecognizesAccessKey="true"
                                    HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"
                                    VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
                </Border>
                <Path Name="rightPath" Fill="{TemplateBinding Control.BorderBrush}" Grid.Column="2">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure StartPoint="7,28">
                        <LineSegment Point="7,21.5"/>
                        <ArcSegment Point="5,19" Size="2,2" RotationAngle="0" SweepDirection="Clockwise"/>
                        <LineSegment Point="5,5"/>
                        <ArcSegment Point="0,0" Size="5,5" RotationAngle="0" SweepDirection="Counterclockwise"/>
                        <LineSegment Point="0,28"/>
                        <LineSegment Point="7,28"/>
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
                <Path Name="PART_rightPath" Fill="{TemplateBinding Control.Background}" Grid.Column="2">
                  <Path.Data>
                    <PathGeometry>
                      <PathFigure StartPoint="7,23">
                        <ArcSegment Point="4,21" Size="3,3" RotationAngle="0" SweepDirection="Clockwise"/>
                        <LineSegment Point="4,5"/>
                        <ArcSegment Point="0,1" Size="4,4" RotationAngle="0" SweepDirection="Counterclockwise"/>
                        <LineSegment Point="0,23"/>
                        <LineSegment Point="7,23"/>
                      </PathFigure>
                    </PathGeometry>
                  </Path.Data>
                </Path>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="PART_highlightBorder" Value="{StaticResource Blue.Ribbon.BorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_highlightBorder" Property="Border.BorderThickness" Value="1,1,1,1"/>
              <Setter TargetName="PART_highlightBorder" Property="FrameworkElement.Height" Value="22.83"/>
              <Setter TargetName="PART_highlightBorder" Property="FrameworkElement.Margin" Value="-5.7,0,-5.7,0"/>
              <Setter TargetName="PART_highlightBorder" Value="{StaticResource TabMouseOver.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="MainButton" Value="{StaticResource TabMouseOver.Blue}" Property="Border.Background"/>
              <Setter TargetName="PART_rightPath" Value="{StaticResource TabMouseOver.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="PART_leftPath" Value="{StaticResource TabMouseOver.Blue}" Property="Shape.Fill"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="Panel.ZIndex" Value="1"/>
              <Setter TargetName="MainButton" Value="{StaticResource TabSeleted.Blue}" Property="Border.Background"/>
              <Setter TargetName="PART_leftPath" Value="{StaticResource TabSeleted.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="PART_rightPath" Value="{StaticResource TabSeleted.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="MainButton" Value="{StaticResource ButtonBackgroundBrush.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="rightPath" Value="{StaticResource ButtonBackgroundBrush.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="leftPath" Value="{StaticResource ButtonBackgroundBrush.Blue}" Property="Shape.Fill"/>
              <Setter Property="Control.Foreground" Value="Black"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="MainButton" Value="{StaticResource TabSeleted.Blue}" Property="Border.Background"/>
              <Setter TargetName="PART_leftPath" Value="{StaticResource TabSeleted.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="PART_rightPath" Value="{StaticResource TabSeleted.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="PART_highlightBorder" Value="{StaticResource BorderBrush1.Blue}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="MainButton" Value="{StaticResource BorderBrush1.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="rightPath" Value="{StaticResource BorderBrush1.Blue}" Property="Shape.Fill"/>
              <Setter TargetName="leftPath" Value="{StaticResource BorderBrush1.Blue}" Property="Shape.Fill"/>
              <Setter Property="Control.Foreground" Value="Black"/>
            </MultiTrigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,0,1,1"/>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="1,1,0,1"/>
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
              <Setter TargetName="Bd" Property="Border.BorderThickness" Value="0,1,1,1"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Top"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-2,-1"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,0,1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Bottom"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-1,-2,-2"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,1,0,0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Left"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-2,-2,-1,-2"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="0,0,1,0"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TabItem.IsSelected" Value="true"/>
                <Condition Property="TabItem.TabStripPlacement" Value="Right"/>
              </MultiTrigger.Conditions>
              <Setter Property="FrameworkElement.Margin" Value="-1,-2,-2,-2"/>
              <Setter TargetName="Content" Property="FrameworkElement.Margin" Value="1,0,0,0"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static SystemParameters.FocusVisualStyleKey}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" Stroke="Black" StrokeDashArray="1 2" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="GridSplitterPreviewStyle">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Fill="#80000000"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type GridSplitter}">
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"/>
    <Setter Property="GridSplitter.PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridSplitter}">
          <Border BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <DockPanel Margin="{TemplateBinding Control.Padding}">
              <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                            Focusable="false">
                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}">
                  <GridViewRowPresenterBase.Columns>
                    <Binding Path="TemplatedParent.View.Columns" RelativeSource="{RelativeSource TemplatedParent}"/>
                  </GridViewRowPresenterBase.Columns>
                </GridViewHeaderRowPresenter>
              </ScrollViewer>
              <ScrollContentPresenter Name="PART_ScrollContentPresenter" KeyboardNavigation.DirectionalNavigation="Local"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      CanContentScroll="{TemplateBinding ScrollViewer.CanContentScroll}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </DockPanel>
            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Minimum="0.0"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableWidth}"
                       ViewportSize="{TemplateBinding ScrollViewer.ViewportWidth}"
                       Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}" Cursor="Arrow"
                       Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
            <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Minimum="0.0"
                       Maximum="{TemplateBinding ScrollViewer.ScrollableHeight}"
                       ViewportSize="{TemplateBinding ScrollViewer.ViewportHeight}"
                       Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}" Cursor="Arrow"
                       Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"/>
            <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="false"
                       Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}">
              <Rectangle DockPanel.Dock="Left" Width="1" Fill="White"
                         Visibility="{TemplateBinding ScrollViewer.ComputedVerticalScrollBarVisibility}"/>
              <Rectangle DockPanel.Dock="Top" Height="1" Fill="White"
                         Visibility="{TemplateBinding ScrollViewer.ComputedHorizontalScrollBarVisibility}"/>
            </DockPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueGridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
    <Setter Property="Canvas.Right" Value="-9"/>
    <Setter Property="FrameworkElement.Width" Value="18"/>
    <Setter Property="FrameworkElement.Height"
            Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="Transparent">
            <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Control.Background}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type GridViewColumnHeader}">
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonBackgroundBrush.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource GridViewColumnHeaderBorderBackground.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="Control.Padding" Value="2,0,2,0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
          <Grid SnapsToDevicePixels="true">
            <Border Name="HeaderBorder" BorderThickness="0,0,1,0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}">
              <ContentPresenter Name="HeaderContent" Margin="0"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </Border>
            <Canvas>
              <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource BlueGridViewColumnHeaderGripper}"/>
            </Canvas>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="HeaderBorder" Value="{StaticResource ButtonMouseOverBrush.Blue}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="HeaderBorder" Value="{StaticResource ButtonPressedBrush.Blue}"
                      Property="Border.Background"/>
              <Setter TargetName="PART_HeaderGripper" Property="UIElement.Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="FrameworkElement.Height" Value="Auto">
              <Setter Property="FrameworkElement.MinHeight" Value="20"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="GridViewColumnHeader.Role" Value="Floating">
        <Setter Property="UIElement.Opacity" Value="0.4082"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Canvas Name="PART_FloatingHeaderCanvas">
                <Rectangle Opacity="0.4697" Fill="#FF000000" Width="{TemplateBinding FrameworkElement.ActualWidth}"
                           Height="{TemplateBinding FrameworkElement.ActualHeight}"/>
              </Canvas>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
              <Border Name="HeaderBorder" BorderThickness="0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}"/>
              <ControlTemplate.Triggers>
                <Trigger Property="FrameworkElement.Height" Value="Auto">
                  <Setter Property="FrameworkElement.MinHeight" Value="20"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ListViewItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle StrokeThickness="1" RadiusX="2" RadiusY="2" Stroke="#8E6EA6F5"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewStyleKey}" TargetType="{x:Type ListView}">
    <Setter Property="Control.Background" Value="{StaticResource ListViewBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                          Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static GridView.GridViewItemContainerStyleKey}" TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
    <Setter Property="Control.Background" Value="{StaticResource ListViewItemBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewItemBorderBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1"/>
    <Setter Property="Control.Padding" Value="5,2,5,2"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Name="Bd" BorderThickness="0,1,0,0" Height="22" CornerRadius="2"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListView}">
    <Setter Property="Control.Background" Value="{StaticResource ListViewBackground.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewBorderBrush.Blue}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}"
                          Padding="{TemplateBinding Control.Padding}">
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
            </ScrollViewer>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.ControlBrushKey}}"
                      Property="Border.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ListViewItem}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
    <Setter Property="Control.Background" Value="Red"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ListViewItemBorderBrush.Blue}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="0,0,0,1"/>
    <Setter Property="Control.Padding" Value="5,2,5,2"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Border Name="Bd" BorderThickness="0,1,0,0" Height="Auto" CornerRadius="2"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <GridViewRowPresenter VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ListBoxItem.IsSelected" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="Selector.IsSelectionActive" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ListBoxItem.IsSelected" Value="true"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ResizeGripperForegroundBlue" StartPoint="0,0" EndPoint="0,1">
    <GradientStop Offset="0" Color="#D5E3F1"/>
    <GradientStop Offset="0.06" Color="#C8DBEE"/>
    <GradientStop Offset="0.39" Color="#C9DDF6"/>
    <GradientStop Offset="0.45" Color="#C0D4ED"/>
    <GradientStop Offset="0.50" Color="#BCD0E9"/>
    <GradientStop Offset="0.56" Color="#C1D3EC"/>
    <GradientStop Offset="0.66" Color="#C2D5ED"/>
    <GradientStop Offset="0.71" Color="#C6D9F1"/>
    <GradientStop Offset="0.77" Color="#C8DBF3"/>
    <GradientStop Offset="0.94" Color="#D0E1F7"/>
    <GradientStop Offset="1.00" Color="#E3EDFB"/>
  </LinearGradientBrush>
  <Style TargetType="{x:Type ResizeGrip}">
    <Setter Property="FrameworkElement.MinWidth"
            Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    <Setter Property="FrameworkElement.MinHeight"
            Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ResizeGrip}">
          <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Control.Background}">
            <Path HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,2,2"
                  Data="M 8,0 L 10,0 10,2 8,2 M 4,4 L 6,4 6,6 4,6 M 8,4 L 10,4 10,6 8,6 M 0,8 L 2,8 2,10 0,10 M 4,8 L 6,8 6,10 4,10 M 8,8 L 10,8 10,10 8,10 Z">
              <Shape.Fill>
                <DrawingBrush Viewbox="0,0,3,3" Viewport="0,0,3,3" TileMode="Tile" ViewportUnits="Absolute"
                              ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="{StaticResource ResizeGripperForegroundBlue}" Geometry="M 0,0 L 3,0 3,3 0,3 Z"/>
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Path>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToolBarTray}">
    <Setter Property="ToolBarTray.Background" Value="{StaticResource ToolBarTray.Blue}"/>
  </Style>
  <Style x:Key="{x:Static ToolBar.SeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarSeparator.Blue}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="1"/>
    <Setter Property="FrameworkElement.MinHeight" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="2,2,2,2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ToggleButtonStyleKey}" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="True"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource TogglePressedBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ToggleCheckedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ToggleMouseOverBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ToggleMouseOverBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}"
         BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}" TargetType="{x:Type CheckBox}"/>
  <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}"
         BasedOn="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
         TargetType="{x:Type RadioButton}"/>
  <Style x:Key="ToolBarComboBoxTransparentButtonStyleBlue" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.Width" Value="Auto"/>
    <Setter Property="Control.Background" Value="{StaticResource MenuKeyBoardFill.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="White"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="Chrome" Grid.Column="1" Width="13" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
              <Path x:Name="ArrowDownPath" Data="M 0,0 L 3.5,4 7,0 Z" Fill="Black" HorizontalAlignment="Center"
                    VerticalAlignment="Center"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Chrome" Value="{x:Null}" Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="ToggleButton.IsChecked" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Chrome" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </MultiTrigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="1,0"/>
    <Setter Property="Control.Padding" Value="0"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="18"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Grid SnapsToDevicePixels="true">
            <Grid IsSharedSizeScope="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" SharedSizeGroup="ComboBoxButton"/>
              </Grid.ColumnDefinitions>
              <Border Name="Background" Background="{TemplateBinding Control.Background}"/>
              <Border Name="SelectedContentBorder" Margin="2,2,1,2">
                <ContentPresenter x:Name="ContentSite" Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                  ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                  Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Border>
              <Border Name="Border" Grid.ColumnSpan="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="White"/>
              <ToggleButton x:Name="DropDownButton" BorderBrush="White" BorderThickness="1" Grid.ColumnSpan="2"
                            Style="{StaticResource ToolBarComboBoxTransparentButtonStyleBlue}"
                            IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBox x:Name="PART_EditableTextBox" Padding="{TemplateBinding Control.Padding}" Margin="1,1,0,1"
                       MinHeight="18" Style="{StaticResource BlueComboBoxEditableTextBox}" Visibility="Collapsed"
                       VerticalAlignment="Center"
                       IsReadOnly="{Binding Path=IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            </Grid>
            <Popup Name="PART_Popup" AllowsTransparency="true" Placement="Bottom" Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   IsOpen="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
              <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent"
                                            FrameworkElement.MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                            FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                <Border x:Name="DropDownBorder" Background="{TemplateBinding Control.Background}" BorderThickness="1"
                        BorderBrush="{StaticResource ComboBoxBorderBrush.Blue}">
                  <ScrollViewer>
                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                  </ScrollViewer>
                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter TargetName="DropDownButton" Value="{x:Null}" Property="Control.Background"/>
              <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="DropDownButton" Value="{StaticResource BorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="DropDownButton" Value="{StaticResource ButtonMouseOverBrush.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="DropDownButton" Value="{StaticResource BorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="DropDownButton" Value="{StaticResource ButtonMouseOverBrush.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="ComboBox.IsEditable" Value="true">
              <Setter Property="Control.Padding" Value="2"/>
              <Setter Property="Control.IsTabStop" Value="false"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.Margin" Value="1,0"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="18"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <Border Name="Border" Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
            <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" MinHeight="18"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
              <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="{x:Static ToolBar.MenuStyleKey}" TargetType="{x:Type Menu}">
    <Setter Property="Control.FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
    <Setter Property="Control.FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
    <Setter Property="Control.FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
    <Setter Property="Control.FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Menu}">
          <FrameworkTemplate.Resources>
            <Style TargetType="{x:Type Separator}" x:Key="{x:Static MenuItem.SeparatorStyleKey}">
              <Setter Property="Border.BorderThickness" Value="0,0,0,1"/>
              <Setter Property="FrameworkElement.MinHeight" Value="2"/>
              <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter Property="FrameworkElement.Height" Value="1"/>
              <Setter Property="FrameworkElement.Margin" Value="26,2,2,2"/>
              <Setter Property="Control.Background" Value="{StaticResource SeparatorBrush.Blue}"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Margin="{TemplateBinding Control.Padding}" BorderBrush="{TemplateBinding Control.BorderBrush}"
                            BorderThickness="{TemplateBinding Control.BorderThickness}"
                            Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true"/>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
            </Style>
            <Style TargetType="{x:Type MenuItem}">
              <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
              <Setter Property="Control.HorizontalContentAlignment"
                      Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
              <Setter Property="Control.VerticalContentAlignment"
                      Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}, FallbackValue=Stretch}"/>
              <Setter Property="Control.Background" Value="Transparent"/>
              <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
              <Setter Property="Control.BorderThickness" Value="1"/>
              <Setter Property="FrameworkElement.Margin" Value="0,1,0,0"/>
              <Setter Property="Control.Padding" Value="8,3,8,3"/>
              <Setter Property="DockPanel.Dock" Value="Top"/>
              <Setter Property="Control.Template">
                <Setter.Value>
                  <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Grid Background="Transparent" SnapsToDevicePixels="true">
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                        <ColumnDefinition Width="14"/>
                      </Grid.ColumnDefinitions>
                      <Border Name="Border" Background="{TemplateBinding Control.Background}"
                              BorderThickness="{TemplateBinding Control.BorderThickness}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0"/>
                      <ContentPresenter x:Name="Icon" Margin="0" VerticalAlignment="Center" ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                              BorderBrush="{StaticResource BorderBrush.Blue}" Background="#FFFFA600" BorderThickness="1">
                        <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                              Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                              Data="{StaticResource ToolBarCheckmark}"/>
                      </Border>
                      <ContentPresenter Name="content" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                        RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      <TextBlock Grid.Column="2" Text="{TemplateBinding MenuItem.InputGestureText}" Margin="4,3,2,3"
                                 HorizontalAlignment="Right"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                      <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                      </Trigger>
                      <Trigger Property="MenuItem.IsChecked" Value="true">
                        <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                        <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                      </Trigger>
                      <Trigger Property="MenuItem.IsHighlighted" Value="true">
                        <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                        <Setter TargetName="Border" Property="Border.Background" Value="#83FFD152"/>
                        <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                        <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.Background"/>
                        <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                      </Trigger>
                      <Trigger Property="UIElement.IsEnabled" Value="false">
                        <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
                      </Trigger>
                    </ControlTemplate.Triggers>
                  </ControlTemplate>
                </Setter.Value>
              </Setter>
              <Style.Triggers>
                <Trigger Property="MenuItem.Role" Value="TopLevelHeader">
                  <Setter Property="Control.Padding" Value="6,2,7,2"/>
                  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                  <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                          <DockPanel Name="Header">
                            <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                            <ContentPresenter Name="content" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Popup x:Name="PART_Popup" Placement="Bottom" HorizontalOffset="-1" Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                   AllowsTransparency="true"
                                   IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                              <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                                <Border Background="#F5F5F5" BorderBrush="{StaticResource MenuKeyBoardStroke.Blue}" BorderThickness="1">
                                  <Grid IsSharedSizeScope="true">
                                    <Grid.ColumnDefinitions>
                                      <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                      <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}" Margin="0,1"/>
                                    <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}" Grid.ColumnSpan="2" Margin="0,-1,0,0"
                                               VerticalAlignment="Top" HorizontalAlignment="Left" Height="1"
                                               Width="{Binding ElementName=Header, Path=ActualWidth}"/>
                                    <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2"
                                                  Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                      <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                      Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                    </ScrollViewer>
                                  </Grid>
                                </Border>
                              </theme:SystemDropShadowChrome>
                            </Popup>
                          </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                          </Trigger>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
                            <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsSubmenuOpen" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="MenuItem.Role" Value="TopLevelItem">
                  <Setter Property="FrameworkElement.Margin" Value="0,1,0,1"/>
                  <Setter Property="Control.Padding" Value="7,1,8,2"/>
                  <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
                          <DockPanel>
                            <ContentPresenter x:Name="Icon" Margin="4,0,6,0" VerticalAlignment="Center" ContentSource="Icon"
                                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <Path x:Name="GlyphPanel" Margin="4,0,6,0" Visibility="Collapsed" VerticalAlignment="Center"
                                  FlowDirection="LeftToRight" Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                            <ContentPresenter Name="content" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                              RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          </DockPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
                            <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource MenuKeyBoardStroke.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Value="{StaticResource ToolBarButtonHover.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
                <Trigger Property="MenuItem.Role" Value="SubmenuHeader">
                  <Setter Property="DockPanel.Dock" Value="Top"/>
                  <Setter Property="Control.Padding" Value="8,3,8,3"/>
                  <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                  <Setter Property="Control.Template">
                    <Setter.Value>
                      <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Grid Background="Transparent" SnapsToDevicePixels="true">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                            <ColumnDefinition Width="14"/>
                          </Grid.ColumnDefinitions>
                          <Border Name="Border" Background="{TemplateBinding Control.Background}"
                                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                                  BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.ColumnSpan="4" Margin="1,0"/>
                          <ContentPresenter x:Name="Icon" Margin="3" VerticalAlignment="Center" ContentSource="Icon"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          <Border Name="GlyphPanel" Margin="0,1" Width="20" Height="20" Visibility="Hidden"
                                  BorderBrush="{StaticResource BorderBrush.Blue}" Background="#FFFFA600" BorderThickness="1">
                            <Path VerticalAlignment="Center" HorizontalAlignment="Center" FlowDirection="LeftToRight"
                                  Stroke="{TemplateBinding Control.Foreground}" StrokeThickness="1.2"
                                  Data="{StaticResource ToolBarCheckmark}"/>
                          </Border>
                          <ContentPresenter Name="content" Grid.Column="1" ContentSource="Header" Margin="{TemplateBinding Control.Padding}"
                                            RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                          <Path Grid.Column="3" DockPanel.Dock="Right" VerticalAlignment="Center" Margin="4,0,6,0"
                                Fill="{TemplateBinding Control.Foreground}" Data="{StaticResource RightArrow}"/>
                          <Popup x:Name="PART_Popup" Placement="Right" Focusable="false"
                                 PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                 AllowsTransparency="true"
                                 IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                              <Border Background="#F5F5F5" BorderBrush="{StaticResource MenuKeyBoardStroke.Blue}" BorderThickness="1"
                                      Grid.IsSharedSizeScope="true">
                                <Grid>
                                  <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="24" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                    <ColumnDefinition Width="*"/>
                                  </Grid.ColumnDefinitions>
                                  <Rectangle Fill="{StaticResource MenuItemLeftBarBackground.Blue}" Margin="0,1"/>
                                  <Rectangle Fill="{StaticResource MenuItemBorderBrush.Blue}" Grid.ColumnSpan="2" Margin="0,-1,0,0"
                                             VerticalAlignment="Top" HorizontalAlignment="Left" Height="1"
                                             Width="{Binding ElementName=Header, Path=ActualWidth}"/>
                                  <ScrollViewer CanContentScroll="true" Grid.ColumnSpan="2"
                                                Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=MenuScrollViewer}}">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"
                                                    Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                  </ScrollViewer>
                                </Grid>
                              </Border>
                            </theme:SystemDropShadowChrome>
                          </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                          <Trigger Property="MenuItem.IsSuspendingPopupAnimation" Value="true">
                            <Setter TargetName="PART_Popup" Property="Popup.PopupAnimation" Value="None"/>
                          </Trigger>
                          <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsChecked" Value="true">
                            <Setter TargetName="GlyphPanel" Property="UIElement.Visibility" Value="Visible"/>
                            <Setter TargetName="Icon" Property="UIElement.Visibility" Value="Collapsed"/>
                          </Trigger>
                          <Trigger Property="MenuItem.IsHighlighted" Value="true">
                            <Setter TargetName="Border" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="Border" Property="Border.Background" Value="#83FFD152"/>
                            <Setter TargetName="content" Value="{StaticResource ForegroundBrush.Blue}" Property="TextBlock.Foreground"/>
                            <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
                            <Setter TargetName="GlyphPanel" Value="{StaticResource BorderBrush.Blue}" Property="Border.Background"/>
                          </Trigger>
                          <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
                            <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
                            <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
                          </Trigger>
                          <Trigger Property="UIElement.IsEnabled" Value="false">
                            <Setter Property="UIElement.Opacity" Value="0.5"/>
                          </Trigger>
                        </ControlTemplate.Triggers>
                      </ControlTemplate>
                    </Setter.Value>
                  </Setter>
                </Trigger>
              </Style.Triggers>
            </Style>
          </FrameworkTemplate.Resources>
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarOverflowButtonBackground.Blue}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,3,3,0" Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
            <Canvas Width="6" Height="7" Margin="7,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    SnapsToDevicePixels="true">
              <Path Stroke="White" Data="M 1,1.5 L 6,1.5 "/>
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M 0,0.5 L 5,0.5 "/>
              <Path Fill="White" Data="M 0.5,4 L 6.5,4 3.5,7 Z"/>
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M -0.5,3 L 5.5,3 2.5,6 Z"/>
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource MenuItemLeftBarBackground.Blue}"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border Name="Bd" CornerRadius="0,0,3,3" Background="{TemplateBinding Control.Background}"
                  SnapsToDevicePixels="true">
            <Canvas Width="7" Height="6" Margin="2,7,2,2" HorizontalAlignment="Right" VerticalAlignment="Bottom"
                    SnapsToDevicePixels="true">
              <Path Stroke="White" Data="M 1.5,1 L 1.5,6 "/>
              <Path Stroke="{TemplateBinding Control.Foreground}" Data="M 0.5,0 L 0.5,5 "/>
              <Path Fill="White" Data="M 3.5,0.5 L 7,3.5 4,6.5 Z"/>
              <Path Fill="{TemplateBinding Control.Foreground}" Data="M 3,-0.5 L 6,2.5 3,5.5 Z"/>
            </Canvas>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource BorderBrush.Blue}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource ButtonPressedBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsKeyboardFocused" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource ButtonMouseOverBrush.Blue}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="BlueToolBarThumbStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Control.Padding}" Background="Transparent" SnapsToDevicePixels="true">
            <Rectangle>
              <Shape.Fill>
                <DrawingBrush Viewbox="0,0,4,4" Viewport="0,0,4,4" TileMode="Tile" ViewportUnits="Absolute"
                              ViewboxUnits="Absolute">
                  <DrawingBrush.Drawing>
                    <DrawingGroup>
                      <DrawingGroup.Children>
                        <GeometryDrawing Brush="White" Geometry="M 1,1 L 1,3 3,3 3,1 Z"/>
                        <GeometryDrawing Brush="#FF7F9DB9" Geometry="M 0,0 L 0,2 2,2 2,0 Z"/>
                      </DrawingGroup.Children>
                    </DrawingGroup>
                  </DrawingBrush.Drawing>
                </DrawingBrush>
              </Shape.Fill>
            </Rectangle>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Property="FrameworkElement.Cursor" Value="SizeAll"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ToolBar}">
    <Setter Property="Control.Background" Value="{StaticResource ToolBarTray.Blue}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ToolBarHorizontalBorderBrush.Silver}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToolBar}">
          <Grid Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
              <ToggleButton x:Name="OverflowButton" IsEnabled="{TemplateBinding ToolBar.HasOverflowItems}"
                            Style="{StaticResource BlueToolBarHorizontalOverflowButtonStyle}" ClickMode="Press"
                            FocusVisualStyle="{x:Null}"
                            IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Popup x:Name="OverflowPopup" AllowsTransparency="true" Placement="Bottom" StaysOpen="false"
                     Focusable="false"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <theme:SystemDropShadowChrome FrameworkElement.Name="Shdw" Color="Transparent">
                  <Border Background="{StaticResource MenuItemLeftBarBackground.Blue}"
                          BorderBrush="{StaticResource TreeViewFill.Blue}" BorderThickness="1">
                    <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" Margin="2" WrapWidth="200" Focusable="true"
                                          KeyboardNavigation.TabNavigation="Cycle" KeyboardNavigation.DirectionalNavigation="Cycle"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" FocusVisualStyle="{x:Null}"/>
                  </Border>
                </theme:SystemDropShadowChrome>
              </Popup>
            </Grid>
            <Border x:Name="MainPanelBorder" Margin="0,0,11,0" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,3,3,3"
                    Padding="{TemplateBinding Control.Padding}">
              <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                <Thumb x:Name="ToolBarThumb" Style="{StaticResource BlueToolBarThumbStyle}" Margin="-3,-1,0,0" Width="10"
                       Padding="6,5,1,6"/>
                <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center"
                                  VerticalAlignment="Center" Margin="4,0,4,0"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </DockPanel>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ToolBar.IsOverflowOpen" Value="true">
              <Setter TargetName="ToolBarThumb" Property="UIElement.IsEnabled" Value="false"/>
            </Trigger>
            <Trigger Value="{x:Null}" Property="HeaderedItemsControl.Header">
              <Setter TargetName="ToolBarHeader" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="ToolBarTray.IsLocked" Value="true">
              <Setter TargetName="ToolBarThumb" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="OverflowPopup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="UIElement.SnapsToDevicePixels" Value="true"/>
              <Setter TargetName="Shdw" Property="theme:SystemDropShadowChrome.Color" Value="#71000000"/>
            </Trigger>
            <Trigger Property="ToolBar.Orientation" Value="Vertical">
              <Setter TargetName="Grid" Property="FrameworkElement.Margin" Value="1,3,1,1"/>
              <Setter TargetName="OverflowButton" Value="{StaticResource BlueToolBarVerticalOverflowButtonStyle}"
                      Property="FrameworkElement.Style"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Height" Value="10"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Width" Value="Auto"/>
              <Setter TargetName="ToolBarThumb" Property="FrameworkElement.Margin" Value="-1,-3,0,0"/>
              <Setter TargetName="ToolBarThumb" Property="Control.Padding" Value="5,6,6,1"/>
              <Setter TargetName="ToolBarHeader" Property="FrameworkElement.Margin" Value="0,0,0,4"/>
              <Setter TargetName="PART_ToolBarPanel" Property="FrameworkElement.Margin" Value="1,0,2,2"/>
              <Setter TargetName="ToolBarThumb" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="ToolBarHeader" Property="DockPanel.Dock" Value="Top"/>
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
              <Setter TargetName="OverflowGrid" Property="FrameworkElement.VerticalAlignment" Value="Bottom"/>
              <Setter TargetName="OverflowPopup" Property="Popup.Placement" Value="Right"/>
              <Setter TargetName="MainPanelBorder" Property="FrameworkElement.Margin" Value="0,0,0,11"/>
              <Setter Value="{StaticResource ToolBarTray.Blue}" Property="Control.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="OverflowButton" Value="{StaticResource ButtonPressedBrush.Blue}"
                      Property="Control.Background"/>
              <Setter TargetName="OverflowButton" Value="{StaticResource BorderBrush.Blue}"
                      Property="Control.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type ContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentControl}">
          <ContentPresenter/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type FlowDocument}">
    <Setter Property="FlowDocument.TextAlignment" Value="Justify"/>
    <Setter Property="FlowDocument.FontFamily" Value="Georgia"/>
    <Setter Property="FlowDocument.FontSize" Value="16.0"/>
    <Setter Property="FlowDocument.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="FlowDocument.Background" Value="{StaticResource ComboBoxBackground.Blue}"/>
  </Style>
  <Style TargetType="{x:Type TextBlock}">
    <Setter Property="TextBlock.TextWrapping" Value="NoWrap"/>
    <Setter Property="TextBlock.TextTrimming" Value="None"/>
    <Setter Property="TextBlock.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
  </Style>
  <Style TargetType="{x:Type Bold}">
    <Setter Property="TextElement.FontWeight" Value="Bold"/>
  </Style>
  <Style TargetType="{x:Type FlowDocumentPageViewer}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
  </Style>
  <Style TargetType="{x:Type FlowDocumentReader}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
  </Style>
  <Style TargetType="{x:Type Italic}">
    <Setter Property="TextElement.FontStyle" Value="Italic"/>
  </Style>
  <Style TargetType="{x:Type Underline}">
    <Setter Property="Inline.TextDecorations" Value="Underline"/>
  </Style>
  <Style TargetType="{x:Type Paragraph}">
    <Setter Property="Block.Margin" Value="Auto"/>
    <Setter Property="TextElement.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
  </Style>
  <Style TargetType="{x:Type List}">
    <Setter Property="Block.Margin" Value="Auto"/>
    <Setter Property="Block.Padding" Value="Auto"/>
  </Style>
  <Style TargetType="{x:Type Floater}">
    <Setter Property="Floater.HorizontalAlignment" Value="Right"/>
  </Style>
  <DataTemplate DataType="{x:Type FlowDocument}">
    <FlowDocumentReader Document="{Binding}"/>
  </DataTemplate>
  <DataTemplate DataType="{x:Type FixedDocument}">
    <DocumentViewer Document="{Binding}"/>
  </DataTemplate>
  <DataTemplate DataType="{x:Type FixedDocumentSequence}">
    <DocumentViewer Document="{Binding}"/>
  </DataTemplate>
  <Style TargetType="{x:Type HeaderedContentControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type HeaderedContentControl}">
          <StackPanel>
            <ContentPresenter ContentSource="Header"/>
            <ContentPresenter/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Label}">
    <Setter Property="Control.Foreground" Value="{StaticResource ForegroundBrush.Blue}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Padding" Value="5"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Label}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type Page}">
    <Setter Property="Page.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Page}">
          <Border Background="{TemplateBinding Page.Background}">
            <ContentPresenter Content="{TemplateBinding Page.Content}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource {x:Type TextBoxBase}}" TargetType="{x:Type RichTextBox}">
    <Style.Resources>
      <Style TargetType="{x:Type FlowDocument}">
        <Setter Property="FrameworkContentElement.OverridesDefaultStyle" Value="true"/>
      </Style>
    </Style.Resources>
    <Setter Property="FrameworkElement.MinWidth" Value="10"/>
  </Style>
  <Style TargetType="{x:Type UserControl}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type UserControl}">
          <Border Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>