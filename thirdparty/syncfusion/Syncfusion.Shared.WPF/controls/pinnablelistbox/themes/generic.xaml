<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Syncfusion.Windows.Shared">
  <LinearGradientBrush x:Key="PinnedListBoxBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF3F7FC" Offset="0"/>
    <GradientStop Color="#FFF4F8FC" Offset="0.92"/>
    <GradientStop Color="#FFF1F6FB" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PinnedListBoxBorderBrush" Color="#FF616870"/>
  <SolidColorBrush x:Key="PinnedListBoxForeground" Color="#FF375FB0"/>
  <SolidColorBrush x:Key="PinnedListBoxItemForeground" Color="#FF060606"/>
  <LinearGradientBrush x:Key="ButtonHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFDCEBFD" Offset="0.028"/>
    <GradientStop Color="#FFC2DCFD" Offset="0.972"/>
    <GradientStop Color="#FFD0E4FD" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonHoverInnerBorderBrush" Color="#FFE8F3FD"/>
  <SolidColorBrush x:Key="ButtonHoverBorderBrush" Color="#FF81A5CF"/>
  <LinearGradientBrush x:Key="PinnedButtonHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE9F2FD" Offset="0.103"/>
    <GradientStop Color="#FFDEECFD" Offset="0.649"/>
  </LinearGradientBrush>
  <local:StringToVisibility x:Key="strconv"/>
  <local:CountToVisibilityConverter x:Key="countconv"/>
  <Style x:Key="PinnableListBoxStyle" TargetType="{x:Type local:PinnableListBox}">
    <Setter Property="Control.Background" Value="{StaticResource PinnedListBoxBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource PinnedListBoxBorderBrush}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource PinnedListBoxForeground}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PinnableListBox}">
          <Grid x:Name="PART_Grid">
            <Border Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <TextBlock Text="{TemplateBinding local:PinnableListBox.Header}" Margin="2" FontWeight="Bold"/>
                  <Line HorizontalAlignment="Stretch" X1="0" Y1="0" X2="1" Y2="0" Height="1" Stroke="#FF4D4949"
                        StrokeThickness="1" Margin="2" Grid.Column="1" Stretch="Uniform" Opacity="0.3"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Header, Converter={StaticResource strconv}}"/>
                </Grid>
                <ScrollViewer Grid.Row="1" Margin="2" Padding="2">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <local:PinnableItemsControl x:Name="PART_PinnedItems" IsPinnedContainer="true"
                                                ItemsSource="{Binding PinnedItems, RelativeSource={RelativeSource TemplatedParent}}"/>
                    <Line x:Name="pinline" HorizontalAlignment="Stretch" X1="0" Y1="0" X2="1" Y2="0" Height="1"
                          StrokeDashArray="1.7" Stroke="#FF4D4949" StrokeThickness="1" Margin="2" Grid.Row="1"
                          Stretch="Uniform" Opacity="0.3"
                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PinnedItems.Count, Converter={StaticResource countconv}}"/>
                    <local:PinnableItemsControl x:Name="PART_UnpinnedItems" Grid.Row="2"
                                                ItemsSource="{Binding UnpinnedItems, RelativeSource={RelativeSource TemplatedParent}}"/>
                  </Grid>
                </ScrollViewer>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PinnableListBoxStyle}" TargetType="{x:Type local:PinnableListBox}"/>
  <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="OuterBorder" Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0,3,3,0"
                    SnapsToDevicePixels="true">
              <Grid>
                <Border x:Name="InnerPath" CornerRadius="0,3,3,0" SnapsToDevicePixels="true"/>
                <ContentPresenter/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBrush}" Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerPath" Value="{StaticResource ButtonHoverInnerBorderBrush}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="ButtonBase.IsPressed" Value="true"/>
                <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBrush}" Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerPath" Value="{StaticResource ButtonHoverInnerBorderBrush}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="PinnableListBoxItemStyle" TargetType="{x:Type local:PinnableListBoxItem}">
    <Setter Property="Control.Foreground" Value="{StaticResource PinnedListBoxItemForeground}"/>
    <Setter Property="Control.Padding" Value="2"/>
    <Setter Property="local:PinnableListBoxItem.CornerRadius" Value="3"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PinnableListBoxItem}">
          <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Border x:Name="OuterBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="3,0,0,3">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Rectangle x:Name="InnerPath" RadiusX="3" RadiusY="3" Grid.RowSpan="2" Grid.Column="1"/>
                <Grid Margin="{TemplateBinding Control.Padding}" VerticalAlignment="Center">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Image Source="{TemplateBinding local:PinnableListBoxItem.Icon}" Grid.RowSpan="2" Margin="2 2 18 2"/>
                  <ContentPresenter VerticalAlignment="Center" Grid.Column="1" Margin="1 2 2 1"/>
                  <TextBlock TextTrimming="WordEllipsis" Text="{TemplateBinding local:PinnableListBoxItem.Description}"
                             Grid.Row="1" Margin="1 1 2 2" Foreground="Gray" VerticalAlignment="Center" Grid.Column="1"
                             Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Description, Converter={StaticResource strconv}}"/>
                </Grid>
              </Grid>
            </Border>
            <Button x:Name="pinnedButton" Grid.Column="1" BorderThickness="0,1,1,1" BorderBrush="Transparent"
                    Background="Transparent" Command="{x:Static local:PinnableListBoxItem.PinCommand}"
                    Style="{StaticResource ButtonStyle}" Width="30" Padding="0 10">
              <Image x:Name="pin" Source="/Syncfusion.Shared.Wpf;component/Controls/PinnableListBox/unpinned.png"
                     Width="16" HorizontalAlignment="Center" Visibility="Hidden" VerticalAlignment="Center"/>
            </Button>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="OuterBorder" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBrush}" Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerPath" Value="{StaticResource ButtonHoverInnerBorderBrush}" Property="Shape.Stroke"/>
              <Setter TargetName="pinnedButton" Value="{StaticResource ButtonHoverBrush}" Property="Control.Background"/>
              <Setter TargetName="pinnedButton" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="pin" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="pinnedButton" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Value="{StaticResource PinnedButtonHoverBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerPath" Value="{StaticResource ButtonHoverInnerBorderBrush}" Property="Shape.Stroke"/>
              <Setter TargetName="pin" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="local:PinnableListBoxItem.IsSelected" Value="true"/>
                <Condition Property="local:SkinStorage.EnableTouch" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBrush}" Property="Border.Background"/>
              <Setter TargetName="OuterBorder" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="InnerPath" Value="{StaticResource ButtonHoverInnerBorderBrush}" Property="Shape.Stroke"/>
              <Setter TargetName="pinnedButton" Value="{StaticResource ButtonHoverBrush}" Property="Control.Background"/>
              <Setter TargetName="pinnedButton" Value="{StaticResource ButtonHoverBorderBrush}"
                      Property="Control.BorderBrush"/>
              <Setter TargetName="pin" Property="UIElement.Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="local:PinnableListBoxItem.IsPinned" Value="true">
              <Setter TargetName="pin" Property="Image.Source"
                      Value="/Syncfusion.Shared.Wpf;component/Controls/PinnableListBox/pinned.png"/>
            </Trigger>
            <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter Property="Control.Padding" Value="1,7,1,7"/>
              <Setter TargetName="pin" Property="FrameworkElement.Width" Value="20"/>
              <Setter TargetName="pinnedButton" Property="FrameworkElement.Width" Value="45"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style BasedOn="{StaticResource PinnableListBoxItemStyle}" TargetType="{x:Type local:PinnableListBoxItem}"/>
</ResourceDictionary>