<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Syncfusion.Windows.Tools.Controls"
                    xmlns:conv="clr-namespace:Syncfusion.Windows.Tools"
                    xmlns:shared="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:Sync_Resources="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:vsm="clr-namespace:Syncfusion.Windows">
  <local:MoreColorVisibilityconverter x:Key="MoreColorVisibilityconverterkey"/>
  <local:SizeToDoubleConverter x:Key="SizeToDoubleConverterKey"/>
  <SolidColorBrush x:Key="ColorGroupItemBorderBrushKey" Color="#ffc5c5c5"/>
  <SolidColorBrush x:Key="ColorGroupItemMouseOverBrushKey" Color="Orange"/>
  <SolidColorBrush x:Key="ColorGroupItemSelectedBrushKey" Color="#FF1D1F47"/>
  <SolidColorBrush x:Key="ColorPickerPalettePopupBackgroundBrushKey" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ColorPickerPalettePopupBorderBrushKey" Color="#FF868686"/>
  <SolidColorBrush x:Key="ColorPickerPaletteBorderBrushKey" Color="#FF9BB9DF"/>
  <LinearGradientBrush x:Key="ColorPickerPaletteBackgroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFD3E1F0" Offset="0.251"/>
    <GradientStop Color="#FFBED5F4" Offset="0.757"/>
    <GradientStop Color="#FFC0D4ED" Offset="0.484"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ColorPickerUpDownBorderBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="Transparent" Offset="0.835"/>
    <GradientStop Color="Transparent" Offset="0.129"/>
    <GradientStop Color="Transparent" Offset="0.5"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBoderBrushKey" Color="#FFD8ECFE"/>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBoder1BrushKey" Color="#FFD8ECFE"/>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBackgroundBrushKey" Color="#FFFFE7A2"/>
  <LinearGradientBrush x:Key="ColorPickerPaletteAutomaticColorBackgroundBrushKey" EndPoint=".5,1" StartPoint=".5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.54"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.971"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.427"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ColorPickerPaletteMoreColorBackgroundBrushKey" EndPoint=".5,1" StartPoint=".5,0">
    <GradientStop Color="#FFFFFFFF" Offset="0"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.54"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.971"/>
    <GradientStop Color="#FFFFFFFF" Offset="0.427"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBoderMouseOverBrushKey" Color="Orange"/>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBoder1MouseOverBrushKey" Color="#FFFFFFE6"/>
  <LinearGradientBrush x:Key="ColorPickerPaletteAutomaticColorMouseOverBrushKey" EndPoint=".5,1" StartPoint=".5,0">
    <GradientStop Color="#FFFEF8E1" Offset="0"/>
    <GradientStop Color="#FFFCDE93" Offset="0.54"/>
    <GradientStop Color="#FFFFDD83" Offset="0.971"/>
    <GradientStop Color="#FFFFF6D3" Offset="0.427"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBoderSelectedBrushKey" Color="Orange"/>
  <SolidColorBrush x:Key="ColorPickerPaletteAutoBoder1SelectedBrushKey" Color="#FFFFFFE6"/>
  <LinearGradientBrush x:Key="ColorPickerPaletteMoreColorMouseOverBrushKey" EndPoint=".5,1" StartPoint=".5,0">
    <GradientStop Color="#FFFEF8E1" Offset="0"/>
    <GradientStop Color="#FFFCDE93" Offset="0.54"/>
    <GradientStop Color="#FFFFDD83" Offset="0.971"/>
    <GradientStop Color="#FFFFF6D3" Offset="0.427"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ColorPickerPaletteMouseOverBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFFFDD83" Offset="0.251"/>
    <GradientStop Color="#FFFFF6D3" Offset="0.757"/>
    <GradientStop Color="#FFFFDD83" Offset="0.484"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ColorPickerUpDownMouseOverBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF6E4B4" Offset="0.835"/>
    <GradientStop Color="#FFFCEFBD" Offset="0.129"/>
    <GradientStop Color="#FFFCCD52" Offset="0.5"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ColorPickerUpDownMouseOverBorderBrushKey" Color="#FFD0B989"/>
  <SolidColorBrush x:Key="ColorPickerPaletteMouseOverBorderBrushKey" Color="#FFD0B989"/>
  <Style x:Key="local:ColorGroupItem" TargetType="{x:Type local:ColorGroupItem}">
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="local:ColorGroupItem.ItemMargin" Value="0,1,0,2"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorGroupItem}">
          <Grid>
            <Border>
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Border x:Name="ItemBorder" Focusable="true" BorderBrush="{StaticResource ColorGroupItemMouseOverBrushKey}"
                        HorizontalAlignment="Left" Margin="{TemplateBinding local:ColorGroupItem.BorderMargin}"
                        SnapsToDevicePixels="true" FocusVisualStyle="{x:Null}"
                        Width="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderWidth}"
                        Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderHeight}">
                  <Border x:Name="InnerBorder" BorderBrush="#FFFFFFFF" SnapsToDevicePixels="true"
                          Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Color}">
                    <FrameworkElement.ToolTip>
                      <ToolTip>
                        <TextBlock Text="{TemplateBinding local:ColorGroupItem.ColorName}"/>
                      </ToolTip>
                    </FrameworkElement.ToolTip>
                  </Border>
                </Border>
                <ItemsControl x:Name="Ic1" IsTabStop="false" Grid.Row="1"
                              Margin="{TemplateBinding local:ColorGroupItem.ItemMargin}" HorizontalAlignment="Left"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ItemBorder" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="Sync_Resources:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ItemBorder" Property="Border.BorderThickness" Value="1"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ItemBorder" Property="UIElement.IsFocused" Value="true"/>
                <Condition Property="Sync_Resources:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ItemBorder" Property="Border.BorderThickness" Value="1"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderThickness" Value="1"/>
            </MultiTrigger>
            <Trigger Property="local:ColorGroupItem.IsSelected" Value="true">
              <Setter TargetName="ItemBorder" Property="Border.BorderThickness" Value="1"/>
              <Setter TargetName="InnerBorder" Property="Border.BorderThickness" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ColorGroupItem}" BasedOn="{StaticResource local:ColorGroupItem}"/>
  <Style x:Key="local:ColorGroup" TargetType="{x:Type local:ColorGroup}">
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorGroup}">
          <Grid Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=PanelVisibility}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="CGHeaderName" Grid.Row="0" HorizontalAlignment="Stretch"
                       Visibility="{TemplateBinding local:ColorGroup.HeaderVisibility}" Margin="0"
                       Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHeaderBackGround}"/>
            <TextBlock x:Name="CGTextBox" Visibility="{TemplateBinding local:ColorGroup.HeaderVisibility}" Grid.Row="0"
                       VerticalAlignment="Center" FontWeight="SemiBold" Margin="8,2,2,2" HorizontalAlignment="Left"
                       FontSize="{TemplateBinding Control.FontSize}"
                       Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HeaderName}"
                       Foreground="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ThemeHeaderForeGround}"/>
            <ItemsControl x:Name="Ic" IsTabStop="false" Grid.Row="1"
                          ItemsSource="{TemplateBinding local:ColorGroup.DataSource}" HorizontalAlignment="Left">
              <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                  <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
              </ItemsControl.ItemsPanel>
            </ItemsControl>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Sync_Resources:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="CGTextBox" Property="FrameworkElement.Margin" Value="8,6,4,6"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ColorGroup}" BasedOn="{StaticResource local:ColorGroup}"/>
  <SolidColorBrush x:Key="GlyphBrushKey" Color="#FF333333"/>
  <Style x:Key="local:PolygonItem" TargetType="{x:Type local:PolygonItem}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:PolygonItem}">
          <Grid>
            <Grid>
              <Polygon x:Name="polygon" Stroke="{StaticResource GlyphBrushKey}" StrokeThickness="0"
                       Fill="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=color}">
                <Polygon.Points>
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="Points"/>
                </Polygon.Points>
                <ToolTipService.ToolTip>
                  <TextBlock Text="{TemplateBinding local:PolygonItem.ColorName}"/>
                </ToolTipService.ToolTip>
              </Polygon>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Sync_Resources:ColorToBrushConverter x:Key="ColorToBrushConverterKey"/>
  <Style TargetType="{x:Type local:PolygonItem}" BasedOn="{StaticResource local:PolygonItem}"/>
  <DataTemplate x:Key="HeaderTemplateKey">
    <Grid x:Name="IconGrid" Margin="2">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition x:Name="colorborder_row" Height="*"/>
      </Grid.RowDefinitions>
      <Image x:Name="image"
             Source="{Binding Path=Icon, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}, UpdateSourceTrigger=PropertyChanged}"
             Width="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=width, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
             Height="{Binding Path=IconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=height, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"/>
      <Border x:Name="color_border" Grid.Row="1"
              Background="{Binding Path=Color, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}, Converter={StaticResource ColorToBrushConverterKey}, UpdateSourceTrigger=PropertyChanged}"/>
    </Grid>
    <DataTemplate.Triggers>
      <Trigger SourceName="image" Value="{x:Null}" Property="Image.Source">
        <Setter TargetName="color_border" Property="FrameworkElement.Margin" Value="4"/>
      </Trigger>
    </DataTemplate.Triggers>
  </DataTemplate>
  <Style x:Key="local:ColorPickerPalette" TargetType="{x:Type local:ColorPickerPalette}">
    <Setter Property="Control.Background" Value="{StaticResource ColorPickerPaletteBackgroundBrushKey}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ColorPickerPaletteBorderBrushKey}"/>
    <Setter Property="local:ColorPickerPalette.MouseOverBackground"
            Value="{StaticResource ColorPickerPaletteMouseOverBrushKey}"/>
    <Setter Property="local:ColorPickerPalette.HeaderTemplate" Value="{StaticResource HeaderTemplateKey}"/>
    <Setter Property="local:ColorPickerPalette.MoreColorsIcon"
            Value="/Syncfusion.Shared.WPF;component/Images/MoreColorsIcon.png"/>
    <Setter Property="Control.FontSize" Value="13"/>
    <Setter Property="local:ColorPickerPalette.MoreColorsIconSize" Value="16,16"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ColorPickerPalette}">
          <Grid x:Name="OuterGrid">
            <Border x:Name="ColorPaletteBorder">
              <Grid x:Name="lay">
                <FrameworkElement.Resources>
                  <ItemsPanelTemplate x:Key="ItemPanelTemplate">
                    <StackPanel Orientation="Horizontal"/>
                  </ItemsPanelTemplate>
                  <ItemsPanelTemplate x:Key="ItemPanelTemplate2">
                    <StackPanel Orientation="Vertical"/>
                  </ItemsPanelTemplate>
                </FrameworkElement.Resources>
                <Border x:Name="ColorPickerBorder" SnapsToDevicePixels="true" BorderBrush="#FF9BB9DF" BorderThickness="1"
                        Focusable="true">
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFD3E1F0" Offset="0.251"/>
                      <GradientStop Color="#FFBED5F4" Offset="0.757"/>
                      <GradientStop Color="#FFC0D4ED" Offset="0.484"/>
                    </LinearGradientBrush>
                  </Border.Background>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="ColorBorder" SnapsToDevicePixels="true" BorderBrush="Transparent" BorderThickness="1"
                            Grid.Column="0">
                      <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                          <GradientStop Color="Transparent" Offset="0.835"/>
                          <GradientStop Color="Transparent" Offset="0.129"/>
                          <GradientStop Color="Transparent" Offset="0.5"/>
                        </LinearGradientBrush>
                      </Border.Background>
                      <ContentPresenter x:Name="Header" ContentTemplate="{TemplateBinding local:ColorPickerPalette.HeaderTemplate}"/>
                    </Border>
                    <Border x:Name="UpDownBorder" SnapsToDevicePixels="true" BorderBrush="Transparent" BorderThickness="1"
                            Margin="0,-1,-1,-1" Grid.Column="1">
                      <TextBlock x:Name="Txt" FontFamily="Webdings" FontSize="13" VerticalAlignment="Center"
                                 HorizontalAlignment="Center">
                        <Run Text="6"/>
                      </TextBlock>
                      <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                          <GradientStop Color="Transparent" Offset="0.835"/>
                          <GradientStop Color="Transparent" Offset="0.129"/>
                          <GradientStop Color="Transparent" Offset="0.5"/>
                        </LinearGradientBrush>
                      </Border.Background>
                    </Border>
                  </Grid>
                </Border>
                <Popup x:Name="pop" Focusable="true">
                  <Border x:Name="b" Background="{TemplateBinding Control.Background}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}"
                          BorderBrush="{StaticResource ColorPickerPalettePopupBorderBrushKey}">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                      </Grid.RowDefinitions>
                      <Border x:Name="Automatic1" Focusable="true"
                              Background="{StaticResource ColorPickerPaletteAutomaticColorBackgroundBrushKey}" Margin="2,2,2,2"
                              Grid.Row="0" Visibility="{TemplateBinding local:ColorPickerPalette.AutomaticColorVisibility}"
                              BorderThickness="1" CornerRadius="1" FocusVisualStyle="{x:Null}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                          </Grid.ColumnDefinitions>
                          <Border x:Name="AutoBorder1" Grid.Column="0"
                                  BorderBrush="{StaticResource ColorPickerPaletteAutoBoderBrushKey}" CornerRadius="2"
                                  BorderThickness="1">
                            <Border x:Name="AutoBorder2" Background="{StaticResource ColorPickerPaletteAutoBackgroundBrushKey}"
                                    BorderBrush="{StaticResource ColorPickerPaletteAutoBoder1BrushKey}" Grid.Column="0"
                                    BorderThickness="1">
                              <Border x:Name="aborder" Grid.Column="0" Height="{TemplateBinding local:ColorPickerPalette.BorderHeight}"
                                      Width="{TemplateBinding local:ColorPickerPalette.BorderWidth}"
                                      Background="{TemplateBinding local:ColorPickerPalette.AutomaticColor}"/>
                            </Border>
                          </Border>
                          <TextBlock Padding="2" Margin="6,0,0,0" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"
                                     FontSize="{TemplateBinding Control.FontSize}"
                                     Text="{Sync_Resources:SharedLocalizationResource ResourceName=AutomaticText}"/>
                        </Grid>
                      </Border>
                      <ItemsControl x:Name="ColorArea" IsTabStop="false" Grid.Row="1" Margin="2">
                        <local:ColorGroup x:Name="item1" IsTabStop="false"
                                          ThemeHeaderBackGround="{TemplateBinding local:ColorPickerPalette.ThemeHeaderBackGround}"
                                          ThemeHeaderForeGround="{TemplateBinding local:ColorPickerPalette.ThemeHeaderForeGround}"
                                          HeaderName="{Sync_Resources:SharedLocalizationResource ResourceName=ThemeColorsText}"/>
                        <local:ColorGroup x:Name="item2" IsTabStop="false"
                                          ThemeHeaderBackGround="{TemplateBinding local:ColorPickerPalette.ThemeHeaderBackGround}"
                                          ThemeHeaderForeGround="{TemplateBinding local:ColorPickerPalette.ThemeHeaderForeGround}"
                                          HeaderName="{Sync_Resources:SharedLocalizationResource ResourceName=StandardColorsText}"/>
                        <local:ColorGroup x:Name="item3" IsTabStop="false"
                                          ThemeHeaderBackGround="{TemplateBinding local:ColorPickerPalette.ThemeHeaderBackGround}"
                                          ThemeHeaderForeGround="{TemplateBinding local:ColorPickerPalette.ThemeHeaderForeGround}"
                                          HeaderName="{Sync_Resources:SharedLocalizationResource ResourceName=RecentlyUsedText}"/>
                      </ItemsControl>
                      <Border x:Name="NoColor" Grid.Row="2" Focusable="true"
                              Background="{StaticResource ColorPickerPaletteMoreColorBackgroundBrushKey}"
                              Visibility="{TemplateBinding local:ColorPickerPalette.NoColorVisibility}" Margin="2,2,2,2"
                              FocusVisualStyle="{x:Null}" Height="{Binding ElementName=Automatic1, Path=Height, Mode=OneWay}">
                        <Grid>
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                          </Grid.ColumnDefinitions>
                          <Border Grid.Column="0" BorderBrush="{StaticResource ColorPickerPaletteAutoBoderBrushKey}" CornerRadius="2"
                                  BorderThickness="1" Margin="2,2,0,2">
                            <Border Background="{StaticResource ColorPickerPaletteAutoBackgroundBrushKey}"
                                    BorderBrush="{StaticResource ColorPickerPaletteAutoBoder1BrushKey}" Grid.Column="0"
                                    BorderThickness="1">
                              <Border Grid.Column="0" Height="{TemplateBinding local:ColorPickerPalette.BorderHeight}"
                                      Width="{TemplateBinding local:ColorPickerPalette.BorderWidth}" Background="White"/>
                            </Border>
                          </Border>
                          <TextBlock Grid.Column="1" Foreground="{TemplateBinding Control.Foreground}" Padding="2"
                                     VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{TemplateBinding Control.FontSize}"
                                     Margin="8,0,0,0" Text="{Sync_Resources:SharedLocalizationResource ResourceName=NoColorText}"/>
                        </Grid>
                      </Border>
                      <Border BorderBrush="#FFDDE7EE" BorderThickness="1" Margin="2,0,2,0" Grid.Row="3"/>
                      <Border x:Name="MoreColors1" Grid.Row="4" Focusable="true"
                              Background="{StaticResource ColorPickerPaletteMoreColorBackgroundBrushKey}" Margin="2,2,2,2"
                              FocusVisualStyle="{x:Null}" Height="{Binding ElementName=Automatic1, Path=Height, Mode=OneWay}">
                        <UIElement.Visibility>
                          <MultiBinding Converter="{StaticResource MoreColorVisibilityconverterkey}">
                            <Binding Path="IsStandardTabVisible" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="IsCustomTabVisible" RelativeSource="{RelativeSource TemplatedParent}"/>
                            <Binding Path="MoreColorOptionVisibility" RelativeSource="{RelativeSource TemplatedParent}"/>
                          </MultiBinding>
                        </UIElement.Visibility>
                        <Grid x:Name="MoreColorsGrid">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                          </Grid.ColumnDefinitions>
                          <Image x:Name="morecolorsimage" Source="{TemplateBinding local:ColorPickerPalette.MoreColorsIcon}"
                                 Grid.Column="0" Margin="1,3,4,0"
                                 Width="{Binding Path=MoreColorsIconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=width, RelativeSource={RelativeSource TemplatedParent}}"
                                 Height="{Binding Path=MoreColorsIconSize, Converter={StaticResource SizeToDoubleConverterKey}, ConverterParameter=height, RelativeSource={RelativeSource TemplatedParent}}"/>
                          <TextBlock Grid.Column="1" Foreground="{TemplateBinding Control.Foreground}" Padding="2"
                                     VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{TemplateBinding Control.FontSize}"
                                     Margin="8,0,0,0" Text="{Sync_Resources:SharedLocalizationResource ResourceName=MoreColorsText}"/>
                        </Grid>
                      </Border>
                    </Grid>
                  </Border>
                </Popup>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="Sync_Resources:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="Txt" Property="TextBlock.FontSize" Value="22"/>
              <Setter TargetName="Txt" Property="FrameworkElement.Margin" Value="5,0,5,3"/>
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="MoreColors1" Property="FrameworkElement.MinHeight" Value="40"/>
              <Setter TargetName="morecolorsimage" Property="FrameworkElement.Margin" Value="5,3,9,0"/>
              <Setter Property="local:ColorPickerPalette.MoreColorsIconSize" Value="20,20"/>
              <Setter Property="local:ColorPickerPalette.IconSize">
                <Setter.Value>
                  <Size>20,20</Size>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="local:ColorPickerPalette.IsExpanded" Value="true">
              <Setter Property="Control.IsTabStop" Value="true"/>
            </Trigger>
            <Trigger SourceName="AutoBorder1" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="AutoBorder1" Property="Border.BorderBrush" Value="Transparent"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerPaletteAutomaticColorMouseOverBrushKey}"
                      Property="Border.Background"/>
            </Trigger>
            <Trigger SourceName="Automatic1" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="AutoBorder1" Value="{StaticResource ColorPickerPaletteAutoBoderMouseOverBrushKey}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="AutoBorder2" Value="{StaticResource ColorPickerPaletteAutoBoder1MouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerPaletteAutomaticColorMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="Automatic1" Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="AutoBorder1" Value="{StaticResource ColorPickerPaletteAutoBoderMouseOverBrushKey}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="AutoBorder2" Value="{StaticResource ColorPickerPaletteAutoBoder1MouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerPaletteAutomaticColorMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="local:ColorPickerPalette.IsAutomaticBorderPressed" Value="true">
              <Setter TargetName="AutoBorder1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="AutoBorder2" Value="{StaticResource ColorPickerPaletteMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerPaletteMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="Automatic1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="MoreColors1" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="MoreColors1" Value="{StaticResource ColorPickerPaletteMoreColorMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="MoreColors1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="MoreColors1" Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="MoreColors1" Value="{StaticResource ColorPickerPaletteMoreColorMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="MoreColors1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="NoColor" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="NoColor" Value="{StaticResource ColorPickerPaletteMoreColorMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="NoColor" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="NoColor" Property="UIElement.IsFocused" Value="true">
              <Setter TargetName="NoColor" Value="{StaticResource ColorPickerPaletteMoreColorMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="NoColor" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="local:ColorPickerPalette.IsMoreColorsBorderPressed" Value="true">
              <Setter TargetName="MoreColors1" Value="{StaticResource ColorPickerPaletteMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="MoreColors1" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ColorPickerBorder" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="local:ColorPickerPalette.Mode" Value="DropDown"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ColorPickerBorder"
                      Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
                      Property="Border.Background"/>
              <Setter TargetName="ColorPickerBorder" Value="{StaticResource ColorPickerPaletteMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="UpDownBorder"
                      Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
                      Property="Border.Background"/>
              <Setter TargetName="UpDownBorder" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition SourceName="ColorBorder" Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="local:ColorPickerPalette.Mode" Value="Split"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ColorBorder"
                      Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
                      Property="Border.Background"/>
              <Setter TargetName="ColorBorder" Value="{StaticResource ColorPickerPaletteMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <Trigger SourceName="UpDownBorder" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="UpDownBorder"
                      Value="{Binding Path=MouseOverBackground, RelativeSource={RelativeSource AncestorType={x:Type local:ColorPickerPalette}}}"
                      Property="Border.Background"/>
              <Setter TargetName="UpDownBorder" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger SourceName="pop" Property="Popup.IsOpen" Value="true">
              <Setter TargetName="ColorPickerBorder" Value="{StaticResource ColorPickerPaletteMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="ColorPickerBorder" Value="{StaticResource ColorPickerPaletteMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="UpDownBorder" Value="{StaticResource ColorPickerPaletteMouseOverBrushKey}"
                      Property="Border.Background"/>
              <Setter TargetName="UpDownBorder" Value="{StaticResource ColorPickerUpDownMouseOverBorderBrushKey}"
                      Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ColorPickerPalette}" BasedOn="{StaticResource local:ColorPickerPalette}"/>
</ResourceDictionary>