<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:skin="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:local="clr-namespace:Syncfusion.Windows.Tools.Controls">
  <SolidColorBrush x:Key="DropDownButtonAdvBorderBrush" Color="#FF707070"/>
  <LinearGradientBrush x:Key="DropDownButtonAdvBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFECECEC" Offset="0.469"/>
    <GradientStop Color="#FFDBDBDB" Offset="0.531"/>
    <GradientStop Color="#FFD0D0D0" Offset="0.954"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DropDownButtonAdvForeground" Color="#FF1B293E"/>
  <LinearGradientBrush x:Key="DropDownButtonAdvInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="White" Offset="0"/>
    <GradientStop Color="#FFE8E8E8" Offset="1"/>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="DropDownButtonAdvHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFDBF1FC" Offset="0.465"/>
    <GradientStop Color="#FFBCE5FC" Offset="0.526"/>
    <GradientStop Color="#FFAADBF6" Offset="0.991"/>
    <GradientStop Color="#FFD6EDFA" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DropDownButtonAdvHoverBorderBrush" Color="#FF3C7FB1"/>
  <SolidColorBrush x:Key="DropDownButtonAdvHoverForeground" Color="#FF000000"/>
  <LinearGradientBrush x:Key="DropDownButtonAdvPressedBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FF8CA1AC" Offset="0.036"/>
    <GradientStop Color="#FFB0CDDD" Offset="0.048"/>
    <GradientStop Color="#FFB0CDDD" Offset="0.084"/>
    <GradientStop Color="#FFC2E4F6" Offset="0.096"/>
    <GradientStop Color="#FFC2E4F6" Offset="0.468"/>
    <GradientStop Color="#FFA8D9F2" Offset="0.532"/>
    <GradientStop Color="#FF91CCEB" Offset="0.964"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DropDownButtonAdvPressedBorderBrush" Color="#FF2C628B"/>
  <SolidColorBrush x:Key="PopupBackground" Color="#FFF0F0F0"/>
  <SolidColorBrush x:Key="PopupBorder" Color="#FF646464"/>
  <SolidColorBrush x:Key="DropDownMenuGroupHeaderBackground" Color="Transparent"/>
  <SolidColorBrush x:Key="DropDownMenuGroupHeaderBorder" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="DropDownMenuGroupHeaderForeground" Color="#FF000000"/>
  <LinearGradientBrush x:Key="DropDownMenuItemHoverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFE7F0FB" Offset="0.11"/>
    <GradientStop Color="#FFCCE1FB" Offset="0.945"/>
    <GradientStop Color="#FFDCEBFC" Offset="0.963"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="DropDownMenuItemHoverBorder" Color="#FF83ABDC"/>
  <SolidColorBrush x:Key="DropDownMenuItemSidePanelBackgroundBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="DropDownMenuItemSidePanelBorderBrush" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="ResizeThumbBackgroundBrush" Color="Transparent"/>
  <SolidColorBrush x:Key="ResizeThumbBorderBrush" Color="#FFE0E0E0"/>
  <LinearGradientBrush x:Key="CheckIconBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF1F5FA" Offset="0"/>
    <GradientStop Color="#FFE8F1FA" Offset="0.671"/>
    <GradientStop Color="#FFE5EEFA" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckIconPathFillBrush" Color="#FF0C12A1"/>
  <SolidColorBrush x:Key="CheckIconBorder" Color="#FF9EC7F9"/>
  <local:SizeToDoubleConverter x:Key="sizeToDoubleConverter"/>
  <DataTemplate x:Key="LargeIconTemplate">
    <Image x:Name="LargeImage" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
           Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
           Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
  </DataTemplate>
  <DataTemplate x:Key="SmallIconTemplate">
    <Image x:Name="smallimage" Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
           Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
           Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
  </DataTemplate>
  <ControlTemplate x:Key="LargeModeTemplate" TargetType="{x:Type local:DropDownButtonAdv}">
    <Grid>
      <Border Name="ItemBorder" Background="{TemplateBinding Control.Background}"
              BorderThickness="{TemplateBinding Control.BorderThickness}"
              BorderBrush="{TemplateBinding Control.BorderBrush}" MinHeight="22" SnapsToDevicePixels="true">
        <Border Name="InnerBorder" BorderBrush="{StaticResource DropDownButtonAdvInnerBorderBrush}"
                Background="Transparent" BorderThickness="{TemplateBinding Control.BorderThickness}"
                CornerRadius="3">
          <StackPanel Margin="{TemplateBinding Control.Padding}"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
            <ContentPresenter x:Name="LargeIconContent" Margin="2"
                              ContentTemplate="{TemplateBinding local:DropDownButtonAdv.IconTemplate}"
                              MinWidth="{TemplateBinding FrameworkElement.MinWidth}"
                              MinHeight="{TemplateBinding FrameworkElement.MinHeight}"
                              ContentTemplateSelector="{TemplateBinding local:DropDownButtonAdv.IconTemplateSelector}"
                              Content="{Binding}"/>
            <TextBlock x:Name="PART_LargeText" Margin="2,0,2,0" Focusable="false"
                       VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                       Text="{TemplateBinding local:DropDownButtonAdv.Label}"
                       HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"/>
            <Path Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Fill="{TemplateBinding Control.Foreground}" Data="M 0,0 L 4,4 8,0 Z" Margin="2"/>
          </StackPanel>
        </Border>
      </Border>
      <Popup x:Name="PART_DropDown" StaysOpen="{TemplateBinding local:DropDownButtonAdv.StaysOpen}"
             Placement="Bottom" AllowsTransparency="true">
        <Grid MinWidth="{TemplateBinding FrameworkElement.MinWidth}"
              MinHeight="{TemplateBinding FrameworkElement.MinHeight}">
          <Border Background="{StaticResource PopupBackground}" BorderThickness="1"
                  BorderBrush="{StaticResource PopupBorder}" CornerRadius="0">
            <Border Background="{StaticResource PopupBackground}" BorderThickness="0"
                    BorderBrush="{StaticResource PopupBorder}" CornerRadius="1">
              <ContentPresenter/>
            </Border>
          </Border>
        </Grid>
      </Popup>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="skin:SkinStorage.EnableTouch" Value="true">
        <Setter Property="FrameworkElement.MinHeight" Value="30"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvHoverBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvHoverBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="InnerBorder" Value="{StaticResource DropDownButtonAdvHoverBackgroundBrush}"
                Property="Border.BorderBrush"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
          <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
        </MultiTrigger.Conditions>
      </MultiTrigger>
      <Trigger Property="local:DropDownButtonAdv.IsPressed" Value="true">
        <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvPressedBackgroundBrush}"
                Property="Border.Background"/>
        <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvPressedBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="InnerBorder" Value="{StaticResource DropDownButtonAdvPressedBackgroundBrush}"
                Property="Border.BorderBrush"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter TargetName="ItemBorder" Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
      <Trigger Property="local:DropDownButtonAdv.IsMultiLine" Value="true">
        <Setter TargetName="PART_LargeText" Property="TextBlock.TextWrapping" Value="Wrap"/>
      </Trigger>
      <Trigger Property="local:DropDownButtonAdv.IsMultiLine" Value="false">
        <Setter TargetName="PART_LargeText" Property="TextBlock.TextWrapping" Value="NoWrap"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Value="{x:Null}" Property="local:DropDownButtonAdv.IconTemplate"/>
          <Condition Value="{x:Null}" Property="local:DropDownButtonAdv.IconTemplateSelector"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="LargeIconContent" Value="{StaticResource LargeIconTemplate}"
                Property="ContentPresenter.ContentTemplate"/>
        <Setter TargetName="LargeIconContent"
                Value="{Binding LargeIcon, RelativeSource={RelativeSource TemplatedParent}}"
                Property="FrameworkElement.Tag"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type local:DropDownButtonAdv}">
    <Setter Property="Control.Foreground" Value="{StaticResource DropDownButtonAdvForeground}"/>
    <Setter Property="local:DropDownButtonAdv.SmallIcon"
            Value="/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt16.png"/>
    <Setter Property="local:DropDownButtonAdv.LargeIcon"
            Value="/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt32.png"/>
    <Setter Property="local:DropDownButtonAdv.Label" Value="Drop Down Button"/>
    <Setter Property="Control.Background" Value="{StaticResource DropDownButtonAdvBackgroundBrush}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource DropDownButtonAdvBorderBrush}"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DropDownButtonAdv}">
          <Grid>
            <Border Name="ItemBorder" Background="{TemplateBinding Control.Background}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" MinHeight="22" SnapsToDevicePixels="true"
                    CornerRadius="3">
              <Border Name="InnerBorder" BorderBrush="{StaticResource DropDownButtonAdvInnerBorderBrush}"
                      Background="Transparent" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      CornerRadius="3">
                <Grid Margin="{TemplateBinding Control.Padding}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="SmallIconContent" Margin="2"
                                      ContentTemplate="{TemplateBinding local:DropDownButtonAdv.IconTemplate}"
                                      ContentTemplateSelector="{TemplateBinding local:DropDownButtonAdv.IconTemplateSelector}"
                                      Content="{Binding}"/>
                    <TextBlock x:Name="PART_NormalText" Grid.Column="1" Text="{TemplateBinding local:DropDownButtonAdv.Label}"
                               Foreground="{TemplateBinding Control.Foreground}" FontFamily="{TemplateBinding Control.FontFamily}"
                               Margin="2,0,2,0" FontSize="{TemplateBinding Control.FontSize}"
                               VerticalAlignment="{TemplateBinding FrameworkElement.VerticalAlignment}"
                               HorizontalAlignment="{TemplateBinding FrameworkElement.HorizontalAlignment}"/>
                  </Grid>
                  <Path Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Fill="{TemplateBinding Control.Foreground}" Data="M 0,0 L 4,4 8,0 Z" Margin="2,0,2,0"/>
                </Grid>
              </Border>
            </Border>
            <Popup x:Name="PART_DropDown" StaysOpen="{TemplateBinding local:DropDownButtonAdv.StaysOpen}"
                   Placement="Bottom" AllowsTransparency="true">
              <Grid MinWidth="{TemplateBinding FrameworkElement.MinWidth}"
                    MinHeight="{TemplateBinding FrameworkElement.MinHeight}">
                <Border Background="{StaticResource PopupBackground}" BorderThickness="1"
                        BorderBrush="{StaticResource PopupBorder}" CornerRadius="0">
                  <Border Background="{StaticResource PopupBackground}" BorderThickness="0"
                          BorderBrush="{StaticResource PopupBorder}" CornerRadius="1">
                    <ContentPresenter/>
                  </Border>
                </Border>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="skin:SkinStorage.EnableTouch" Value="true">
              <Setter Property="FrameworkElement.MinHeight" Value="30"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="skin:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvHoverBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvHoverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_NormalText" Value="{StaticResource DropDownButtonAdvHoverForeground}"
                      Property="TextBlock.Foreground"/>
              <Setter TargetName="Arrow" Value="{StaticResource DropDownButtonAdvHoverForeground}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource DropDownButtonAdvHoverBackgroundBrush}"
                      Property="Border.BorderBrush"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="skin:SkinStorage.EnableTouch" Value="true"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="local:DropDownButtonAdv.IsPressed" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvPressedBackgroundBrush}"
                      Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource DropDownButtonAdvPressedBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="PART_NormalText" Value="{StaticResource DropDownButtonAdvForeground}"
                      Property="TextBlock.Foreground"/>
              <Setter TargetName="Arrow" Value="{StaticResource DropDownButtonAdvForeground}" Property="Shape.Fill"/>
              <Setter TargetName="InnerBorder" Value="{StaticResource DropDownButtonAdvPressedBackgroundBrush}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="ItemBorder" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Value="{x:Null}" Property="local:DropDownButtonAdv.IconTemplate"/>
                <Condition Value="{x:Null}" Property="local:DropDownButtonAdv.IconTemplateSelector"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="SmallIconContent" Value="{StaticResource SmallIconTemplate}"
                      Property="ContentPresenter.ContentTemplate"/>
              <Setter TargetName="SmallIconContent"
                      Value="{Binding SmallIcon, RelativeSource={RelativeSource TemplatedParent}}"
                      Property="FrameworkElement.Tag"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="local:DropDownButtonAdv.SizeMode" Value="Large">
        <Setter Property="Control.Template" Value="{StaticResource LargeModeTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type local:DropDownMenuGroup}">
    <Setter Property="Control.Background" Value="{StaticResource PopupBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource PopupBorder}"/>
    <Setter Property="Control.Foreground" Value="{StaticResource DropDownButtonAdvForeground}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DropDownMenuGroup}">
          <Grid Name="RootGrid" Background="{TemplateBinding Control.Background}">
            <FrameworkElement.Resources>
              <local:TextToVisibilityConverter x:Key="TextConverter"/>
              <BooleanToVisibilityConverter x:Key="BoolConverter"/>
              <local:VisibilityToThicknessConverter x:Key="ThicknessConverter"/>
            </FrameworkElement.Resources>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Border x:Name="PART_Header" Background="{StaticResource DropDownMenuGroupHeaderBackground}" Height="22"
                    Grid.Row="0" BorderThickness="0,0,0,1" BorderBrush="{StaticResource DropDownMenuGroupHeaderBorder}"
                    Margin="1,0,1,1"
                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Header, Converter={StaticResource TextConverter}}">
              <Grid>
                <Border Background="Transparent" BorderBrush="#FFE0E0E0" BorderThickness="0,0,0,1"/>
                <ContentControl x:Name="header" Content="{TemplateBinding HeaderedItemsControl.Header}"
                                Foreground="{StaticResource DropDownMenuGroupHeaderForeground}" VerticalAlignment="Center"
                                FontWeight="Bold" HorizontalContentAlignment="Left" Margin="5,0,0,0"/>
              </Grid>
            </Border>
            <Border Grid.Row="1">
              <Grid>
                <Border x:Name="IconTray" BorderBrush="{StaticResource DropDownMenuItemSidePanelBorderBrush}"
                        Background="{StaticResource DropDownMenuItemSidePanelBackgroundBrush}" BorderThickness="0,0,1,0"
                        Width="22" HorizontalAlignment="Left" Margin="1,0,1,0"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IconBarEnabled, Converter={StaticResource BoolConverter}}">
                  <Border x:Name="leftBar" BorderBrush="#FFE0E0E0" BorderThickness="0,0,1,0"/>
                </Border>
                <Border>
                  <ScrollViewer x:Name="PART_ScrollViewer" KeyboardNavigation.DirectionalNavigation="Cycle"
                                VerticalScrollBarVisibility="{TemplateBinding local:DropDownMenuGroup.ScrollBarVisibility}"
                                BorderThickness="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ScrollBarVisibility, Converter={StaticResource ThicknessConverter}}">
                    <ItemsPresenter/>
                  </ScrollViewer>
                </Border>
              </Grid>
            </Border>
            <Border Grid.Row="2">
              <Grid>
                <Border x:Name="MoreitemBar" BorderBrush="{StaticResource DropDownMenuItemSidePanelBorderBrush}"
                        Background="{StaticResource DropDownMenuItemSidePanelBackgroundBrush}" BorderThickness="0,0,1,0"
                        Width="22" HorizontalAlignment="Left" Margin="1,0,1,0"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMoreItemsIconTrayEnabled, Converter={StaticResource BoolConverter}}">
                  <Border BorderBrush="#FFE0E0E0" BorderThickness="0,0,1,0"/>
                </Border>
                <ItemsControl ItemsSource="{TemplateBinding local:DropDownMenuGroup.MoreItems}"/>
              </Grid>
            </Border>
            <Border Grid.Row="3" Background="{StaticResource ResizeThumbBackgroundBrush}" Height="6"
                    BorderBrush="{StaticResource ResizeThumbBorderBrush}" BorderThickness="0,1,0,0"
                    HorizontalAlignment="Stretch" Margin="1,0,1,0"
                    Width="{Binding ElementName=PART_ResizeThumb, Path=ActualWidth}"
                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsResizable, Converter={StaticResource BoolConverter}}">
              <Grid>
                <Border BorderBrush="#FFFFFFFF" BorderThickness="0,1,0,0">
                  <Border HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal">
                      <Border Background="#FF959595" CornerRadius="2" Height="3" Width="3"/>
                      <Border Background="#FF959595" CornerRadius="2" Height="3" Width="3" Margin="3,0,0,0"
                              SnapsToDevicePixels="true"/>
                      <Border Background="#FF959595" CornerRadius="2" Height="3" Width="3" Margin="3,0,0,0"
                              SnapsToDevicePixels="true"/>
                    </StackPanel>
                  </Border>
                </Border>
                <Thumb x:Name="PART_ResizeThumb" Opacity="0" Cursor="SizeNS"/>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="skin:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="PART_ScrollViewer" Property="FrameworkElement.Margin" Value="1,0,1,-1"/>
              <Setter TargetName="header" Property="FrameworkElement.Margin" Value="10,3,0,3"/>
              <Setter TargetName="IconTray" Property="FrameworkElement.Width" Value="32"/>
              <Setter TargetName="IconTray" Property="Border.Background" Value="Transparent"/>
              <Setter TargetName="IconTray" Property="Border.BorderBrush" Value="Transparent"/>
              <Setter TargetName="leftBar" Property="Border.BorderBrush" Value="Transparent"/>
              <Setter TargetName="PART_Header" Property="FrameworkElement.Height" Value="30"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:DropDownMenuItem}">
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:DropDownMenuItem}">
          <Border Name="Bd" CornerRadius="2" Padding="{TemplateBinding Control.Padding}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" Margin="2,0,2,0">
            <Grid x:Name="DropDownTray" Margin="0,0,0,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="Icontraywidth" Width="21"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition x:Name="SubItemPath" Width="20"/>
              </Grid.ColumnDefinitions>
              <FrameworkElement.Resources>
                <BooleanToVisibilityConverter x:Key="BoolConverter"/>
              </FrameworkElement.Resources>
              <Border Grid.Column="1" Background="Transparent">
                <ContentControl Name="content" Content="{TemplateBinding HeaderedItemsControl.Header}"
                                ContentTemplate="{TemplateBinding HeaderedItemsControl.HeaderTemplate}" Focusable="false"
                                Margin="6 1 1 1" Background="Transparent"/>
              </Border>
              <Border Grid.Column="2" Background="Transparent">
                <ContentControl Name="path" Content="4" FontFamily="Webdings" Margin="3" FontSize="14"
                                Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasItems, Converter={StaticResource BoolConverter}}"/>
              </Border>
              <Border Margin="2" CornerRadius="2" Background="Transparent">
                <ContentControl x:Name="Part_Icon" Content="{TemplateBinding local:DropDownMenuItem.Icon}" BorderThickness="2"
                                Focusable="false" Margin="1"
                                Width="{TemplateBinding IconSize, Converter={StaticResource sizeToDoubleConverter}, ConverterParameter=width}"
                                Height="{TemplateBinding IconSize, Converter={StaticResource sizeToDoubleConverter}, ConverterParameter=height}"/>
              </Border>
              <Border Margin="2" CornerRadius="2" Background="{StaticResource CheckIconBackground}"
                      BorderBrush="{StaticResource CheckIconBorder}" BorderThickness="1"
                      Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BoolConverter}}">
                <Path x:Name="CheckIcon"
                      Data="M 102.03442,598.79645 L 105.22962,597.78918 106.78825,600.42358 C 106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 Z"
                      Fill="{StaticResource CheckIconPathFillBrush}" FlowDirection="LeftToRight" Height="10"
                      Stretch="Fill" Width="10.5"/>
              </Border>
              <Popup x:Name="PART_DropDown" Margin="2,0,0,0" Placement="Right" AllowsTransparency="true"
                     IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Mode=OneWay}"
                     Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasItems, Converter={StaticResource BoolConverter}}">
                <Grid x:Name="PART_poup">
                  <Border Background="{StaticResource PopupBackground}" BorderThickness="1"
                          BorderBrush="{StaticResource PopupBorder}" SnapsToDevicePixels="true">
                    <ItemsPresenter Margin="2"/>
                  </Border>
                </Grid>
              </Popup>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource DropDownMenuItemHoverBackground}"
                      Property="Border.Background"/>
              <Setter TargetName="Bd" Value="{StaticResource DropDownMenuItemHoverBorder}" Property="Border.BorderBrush"/>
              <Setter TargetName="content" Value="{StaticResource DropDownButtonAdvHoverForeground}"
                      Property="TextBlock.Foreground"/>
              <Setter TargetName="path" Value="{StaticResource DropDownButtonAdvHoverForeground}"
                      Property="TextBlock.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Bd" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="true">
              <Setter TargetName="Bd" Property="UIElement.Opacity" Value="1"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="skin:SkinStorage.EnableTouch" Value="true">
        <Setter Property="Control.FontSize" Value="18"/>
        <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
        <Setter Property="Control.BorderBrush" Value="{StaticResource PopupBorder}"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type local:DropDownMenuItem}">
              <Border Name="Bd" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}">
                <Grid Margin="0,8,0,8">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="32"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="20"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <FrameworkElement.Resources>
                    <BooleanToVisibilityConverter x:Key="BoolConverter"/>
                  </FrameworkElement.Resources>
                  <Border Grid.Column="1" Background="Transparent">
                    <ContentControl Name="content" Content="{TemplateBinding HeaderedItemsControl.Header}" Margin="6 1 1 1"
                                    Background="Transparent"/>
                  </Border>
                  <Border Grid.Column="3" Background="Transparent">
                    <ContentControl Name="path" Content="4" FontFamily="Webdings" Margin="3" FontSize="20"
                                    Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasItems, Converter={StaticResource BoolConverter}}"/>
                  </Border>
                  <Border Margin="2" CornerRadius="2" Background="Transparent">
                    <ContentControl Content="{TemplateBinding local:DropDownMenuItem.Icon}" BorderThickness="2" Margin="1"
                                    Width="{TemplateBinding IconSize, Converter={StaticResource sizeToDoubleConverter}, ConverterParameter=width}"
                                    Height="{TemplateBinding IconSize, Converter={StaticResource sizeToDoubleConverter}, ConverterParameter=height}"/>
                  </Border>
                  <Border Height="24" Width="24" Margin="2" Background="{StaticResource CheckIconBackground}"
                          BorderBrush="{StaticResource CheckIconBorder}" BorderThickness="1"
                          Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsChecked, Converter={StaticResource BoolConverter}}">
                    <Path x:Name="CheckIcon"
                          Data="M 102.03442,598.79645 L 105.22962,597.78918 106.78825,600.42358 C 106.78825,600.42358 108.51028,595.74304 110.21724,593.60419 112.00967,591.35822 114.89314,591.42316 114.89314,591.42316 114.89314,591.42316 112.67844,593.42645 111.93174,594.44464 110.7449,596.06293 107.15683,604.13837 107.15683,604.13837 Z"
                          Fill="{StaticResource CheckIconPathFillBrush}" FlowDirection="LeftToRight" Height="10"
                          Stretch="Fill" Width="10.5"/>
                  </Border>
                  <Popup x:Name="PART_DropDown" Margin="2,0,0,0" Placement="Right" AllowsTransparency="true"
                         IsOpen="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsMouseOver, Mode=OneWay}"
                         Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HasItems, Converter={StaticResource BoolConverter}}">
                    <Grid x:Name="PART_poup">
                      <Border Background="{StaticResource PopupBackground}" BorderThickness="1"
                              BorderBrush="{StaticResource PopupBorder}" SnapsToDevicePixels="true">
                        <ItemsPresenter Margin="0,0,0,-1"/>
                      </Border>
                    </Grid>
                  </Popup>
                </Grid>
              </Border>
              <ControlTemplate.Triggers>
                <Trigger Property="local:DropDownMenuItem.IsPressed" Value="true">
                  <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                          Property="Border.Background"/>
                  <Setter TargetName="content" Property="TextBlock.Foreground" Value="White"/>
                  <Setter TargetName="path" Property="TextBlock.Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="false">
                  <Setter TargetName="Bd" Property="UIElement.Opacity" Value="0.5"/>
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="true">
                  <Setter TargetName="Bd" Property="UIElement.Opacity" Value="1"/>
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>