<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:skin="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Syncfusion.Windows.Tools.Controls"
                    xmlns:resources="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <BooleanToVisibilityConverter x:Key="VisiblityConverter"/>
  <SolidColorBrush x:Key="TokenBorderBrush" Color="#FF707070"/>
  <LinearGradientBrush x:Key="TokenBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFECECEC" Offset="0.469"/>
    <GradientStop Color="#FFDBDBDB" Offset="0.531"/>
    <GradientStop Color="#FFD0D0D0" Offset="0.954"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TokenForeground" Color="#FF1B293E"/>
  <LinearGradientBrush x:Key="TokenHoverBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFDBF1FC" Offset="0.465"/>
    <GradientStop Color="#FFBCE5FC" Offset="0.526"/>
    <GradientStop Color="#FFAADBF6" Offset="0.991"/>
    <GradientStop Color="#FFD6EDFA" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="TokenHoverBorderBrush" Color="#FF3C7FB1"/>
  <SolidColorBrush x:Key="TokenHoverForegroundBrush" Color="#FF000000"/>
  <local:TemplateToVisibilityConverter x:Key="dropDownTemplateConvertor"/>
  <Style x:Key="ComboBoxItemFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle SnapsToDevicePixels="true"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ButtonMouseHover" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFeaf6fd" Offset="0"/>
        <GradientStop Color="#FFd9f0fc" Offset="0.5"/>
        <GradientStop Color="#FFbee6fd" Offset="0.5009999871253967"/>
        <GradientStop Color="#FFa7d9f5" Offset="1"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonPressedKey" StartPoint="0.5,0" EndPoint="0.5,1">
    <GradientBrush.GradientStops>
      <GradientStopCollection>
        <GradientStop Color="#FFeaf6fd" Offset="0"/>
        <GradientStop Color="#FFd9f0fc" Offset="0.5"/>
        <GradientStop Color="#FFbee6fd" Offset="0.5009999871253967"/>
        <GradientStop Color="#FFa7d9f5" Offset="1"/>
      </GradientStopCollection>
    </GradientBrush.GradientStops>
  </LinearGradientBrush>
  <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#F3F3F3" Offset="0"/>
    <GradientStop Color="#EBEBEB" Offset="0.5"/>
    <GradientStop Color="#DDDDDD" Offset="0.5"/>
    <GradientStop Color="#CDCDCD" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
  <Geometry x:Key="DownArrowGeometry">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                 Background="{TemplateBinding Control.Background}"
                                                 RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                 RenderPressed="{TemplateBinding ButtonBase.IsPressed}" UIElement.SnapsToDevicePixels="true">
            <Grid x:Name="dropdownbutton" HorizontalAlignment="Right"
                  Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
              <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center"
                    Margin="3,1,0,0" VerticalAlignment="Center"/>
            </Grid>
          </Microsoft_Windows_Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="resources:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="Arrow" Property="Path.Data" Value="M 0,0 L 7,7 14,0 Z"/>
              <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderMouseOver" Value="false"/>
              <Setter TargetName="dropdownbutton" Property="FrameworkElement.Margin" Value="0,0,10,0"/>
              <Setter TargetName="Chrome" Property="UIElement.Effect">
                <Setter.Value>
                  <DropShadowEffect Direction="315" ShadowDepth="2" Opacity="0.3"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonMouseHover}"
                      Property="Microsoft_Windows_Themes:ButtonChrome.Background"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedKey}"
                      Property="Microsoft_Windows_Themes:ButtonChrome.Background"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource ButtonPressedKey}"
                      Property="Microsoft_Windows_Themes:ButtonChrome.Background"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                 Background="{TemplateBinding Control.Background}"
                                                 RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                 RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="false"
                                                 UIElement.SnapsToDevicePixels="true"
                                                 FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center"
                  Margin="0,1,0,0" VerticalAlignment="Center"/>
          </Microsoft_Windows_Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="resources:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="Arrow" Property="Path.Data" Value="M 0,0 L 6,6 12,0 Z"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="CloseTokenButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border Background="{TemplateBinding Control.Background}">
            <Path x:Name="Token_Path" Width="8" Height="8" Margin="3,2,3,2" HorizontalAlignment="Right"
                  VerticalAlignment="Center" Fill="{StaticResource TokenForeground}" SnapsToDevicePixels="true"
                  Stretch="Fill">
              <Path.Data>
                <PathGeometry>
                  M0.70800017,0 L4.498001,3.7964015 8.2880024,0 8.9960006,0.70600033 5.2044057,4.5039992 8.9960006,8.3019981 8.2880024,9.0079994 4.498001,5.2115974 0.70800017,9.0079994 0,8.3019981 3.7915958,4.5039992 0,0.70600033 z
                </PathGeometry>
              </Path.Data>
            </Path>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding IsMouseOver, ElementName=Token_CloseButton}">
              <Setter TargetName="Token_Path" Property="Shape.Fill" Value="Black"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="{x:Type local:ComboBoxTokenItem}">
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="Control.Foreground" Value="{StaticResource TokenForeground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource TokenBorderBrush}"/>
    <Setter Property="Control.Background" Value="{StaticResource TokenBackgroundBrush}"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ComboBoxTokenItem}">
          <Border x:Name="rootBorder" BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1"
                  Background="{TemplateBinding Control.Background}" CornerRadius="4" Margin="2" Padding="3">
            <Grid HorizontalAlignment="Left">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="24"/>
              </Grid.ColumnDefinitions>
              <ContentPresenter x:Name="Token_ContentPresenter" Content="{TemplateBinding ContentControl.Content}" Grid.Column="0"
                                VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,0,0,0"/>
              <Button x:Name="Token_CloseButton" Grid.Column="1" Background="Transparent" Focusable="false"
                      HorizontalAlignment="Right" Style="{StaticResource CloseTokenButtonStyle}" Padding="1"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding IsMouseOver, ElementName=Token_CloseButton}">
              <Setter TargetName="Token_CloseButton" Property="FrameworkElement.Cursor" Value="Hand"/>
              <Setter TargetName="Token_CloseButton" Value="{StaticResource TokenHoverBackgroundBrush}"
                      Property="Control.Background"/>
            </DataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MultiSelectTemplate" TargetType="{x:Type local:ComboBoxAdv}">
    <Grid>
      <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" StaysOpen="false" Margin="1"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#71000000" FrameworkElement.Margin="0,0,5,5"
                                                           FrameworkElement.MaxHeight="{TemplateBinding local:ComboBoxAdv.MaxDropDownHeight}"
                                                           FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
            <Border x:Name="DropDownBorder"
                    BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                    Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="DropDownScrollViewer">
                  <Grid>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                      <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                 Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                 Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" Grid.Row="1"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    <local:ComboBoxItemAdv x:Name="PART_SelectAll" Grid.Row="0" Margin="0.2,0,0,0.5"
                                           Background="{Binding Background, ElementName=DropDownBorder}"
                                           Visibility="{TemplateBinding AllowSelectAll, Converter={StaticResource VisiblityConverter}}"
                                           Content="{resources:SharedLocalizationResource ResourceName=SelectAll}"/>
                    <TextBlock x:Name="No_Records" Focusable="false" Padding="3" Visibility="Collapsed"
                               Text="{resources:SharedLocalizationResource ResourceName=NoRecords}"
                               Background="{Binding Background, ElementName=DropDownBorder}"/>
                  </Grid>
                </ScrollViewer>
                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="5" HorizontalAlignment="Right"
                            Visibility="{TemplateBinding EnableOKCancel, Converter={StaticResource VisiblityConverter}}">
                  <Button x:Name="PART_OKButton" Margin="0,0,10,0" Width="70" Height="20"
                          Content="{resources:SharedLocalizationResource ResourceName=OKText}"/>
                  <Button x:Name="PART_CancelButton" Width="70" Height="20"
                          Content="{resources:SharedLocalizationResource ResourceName=CancelText}"/>
                </StackPanel>
              </Grid>
            </Border>
          </Microsoft_Windows_Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton x:Name="PART_ToggleButton" BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxReadonlyToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ItemsControl x:Name="PART_SelectedItems" Focusable="false"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                      Margin="{TemplateBinding Control.Padding}"
                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
        <TextBlock x:Name="PART_DefaultText" Text="{TemplateBinding local:ComboBoxAdv.DefaultText}"
                   HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                   Margin="{TemplateBinding Control.Padding}"
                   VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Opacity="0.5"/>
        <Border x:Name="PART_Border" Background="White" BorderBrush="{StaticResource ButtonNormalBorder}"
                BorderThickness="1" Visibility="Collapsed" CornerRadius="2,0,0,2">
          <ItemsControl x:Name="PART_TokenItems" Focusable="false"
                        HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                        DisplayMemberPath="{Binding DisplayMemberPath, RelativeSource={RelativeSource Mode=TemplatedParent}}">
            <ItemsControl.ItemsPanel>
              <ItemsPanelTemplate>
                <WrapPanel Orientation="Horizontal"/>
              </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.Items>
              <TextBox x:Name="PART_Editable" Focusable="true" Background="White" BorderThickness="0"
                       HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
            </ItemsControl.Items>
          </ItemsControl>
        </Border>
        <TextBox x:Name="PART_IsEditDefaultText" Text="{TemplateBinding local:ComboBoxAdv.DefaultText}"
                 Visibility="Collapsed" Opacity="0.5"
                 HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                 VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:ComboBoxAdv.EnableToken" Value="true"/>
          <Condition Property="local:ComboBoxAdv.IsEditable" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Editable" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_DefaultText" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_IsEditDefaultText" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_ToggleButton" Property="FrameworkElement.Width" Value="20"/>
        <Setter TargetName="PART_ToggleButton" Property="FrameworkElement.Margin" Value="0"/>
        <Setter TargetName="PART_ToggleButton" Property="Control.Padding">
          <Setter.Value>
            <Thickness>0,0,2,2</Thickness>
          </Setter.Value>
        </Setter>
        <Setter TargetName="PART_ToggleButton" Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
        <Setter TargetName="PART_ToggleButton" Property="Control.HorizontalContentAlignment" Value="Center"/>
      </MultiTrigger>
      <Trigger Property="local:ComboBoxAdv.EnableToken" Value="true">
        <Setter TargetName="PART_SelectedItems" Property="UIElement.Focusable" Value="false"/>
        <Setter TargetName="PART_Border" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_DefaultText" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_IsEditDefaultText" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:ComboBoxAdv.EnableToken" Value="true"/>
          <Condition Property="local:ComboBoxAdv.IsEditable" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Border" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_DefaultText" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_IsEditDefaultText" Property="UIElement.Visibility" Value="Collapsed"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style TargetType="{x:Type local:ComboBoxAdv}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="4,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ComboBoxAdv}">
          <Grid>
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
              </Grid.ColumnDefinitions>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" StaysOpen="false" Margin="1"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     Placement="Bottom"
                     IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#71000000" FrameworkElement.Margin="0,0,5,5"
                                                                 FrameworkElement.MaxHeight="{TemplateBinding local:ComboBoxAdv.MaxDropDownHeight}"
                                                                 FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                  <Border x:Name="DropDownBorder"
                          BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                          Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
                    <Grid>
                      <Grid x:Name="Item_Presenter"
                            Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter=Item_Presenter}">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="*"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollViewer x:Name="DropDownScrollViewer">
                          <Grid>
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                              <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                         Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                         Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                            SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                            <TextBlock x:Name="No_Records" Focusable="false" Padding="3" Visibility="Collapsed"
                                       Text="{resources:SharedLocalizationResource ResourceName=NoRecords}"
                                       Background="{Binding Background, ElementName=DropDownBorder}"/>
                          </Grid>
                        </ScrollViewer>
                      </Grid>
                      <ContentControl x:Name="Content_Control"
                                      ContentTemplate="{TemplateBinding local:ComboBoxAdv.DropDownContentTemplate}"
                                      Visibility="{TemplateBinding DropDownContentTemplate, Converter={StaticResource dropDownTemplateConvertor}, ConverterParameter=Content_Control}"/>
                    </Grid>
                  </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
              </Popup>
              <ToggleButton x:Name="PART_ToggleButton" BorderThickness="{TemplateBinding Control.BorderThickness}"
                            BorderBrush="{TemplateBinding Control.BorderBrush}"
                            Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                            Style="{StaticResource ComboBoxReadonlyToggleButton}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter x:Name="ContentPresenter"
                                ContentTemplate="{TemplateBinding local:ComboBoxAdv.SelectionBoxTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                Content="{TemplateBinding local:ComboBoxAdv.SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding local:ComboBoxAdv.SelectionBoxItemStringFormat}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              <TextBlock x:Name="PART_DefaultText" Text="{TemplateBinding local:ComboBoxAdv.DefaultText}"
                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                         Margin="{TemplateBinding Control.Padding}"
                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Opacity="0.5"/>
              <TextBox x:Name="PART_Editable" Visibility="Collapsed"
                       HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}" Margin="1"
                       BorderThickness="0" VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                       IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBox x:Name="PART_IsEditDefaultText" Text="{TemplateBinding local:ComboBoxAdv.DefaultText}"
                       Visibility="Collapsed" Opacity="0.5"
                       HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                       VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger Property="local:ComboBoxAdv.IsEditable" Value="true">
              <Setter TargetName="PART_Editable" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="PART_DefaultText" Property="UIElement.Visibility" Value="Collapsed"/>
              <Setter TargetName="PART_IsEditDefaultText" Property="UIElement.Visibility" Value="Visible"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=HasItems, RelativeSource={RelativeSource Self}}" Value="false"/>
                <Condition Binding="{Binding Path=AutoCompleteMode, RelativeSource={RelativeSource Self}}" Value="Suggest"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="DropDownBorder" Value="{Binding Height, ElementName=No_Records}"
                      Property="FrameworkElement.Height"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=HasItems, RelativeSource={RelativeSource Self}}" Value="false"/>
                <Condition Binding="{Binding Path=AutoCompleteMode, RelativeSource={RelativeSource Self}}" Value="None"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsControl.ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel VirtualizationMode="Recycling"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="resources:SkinStorage.EnableTouch" Value="true">
        <Setter Property="Control.FontSize" Value="18"/>
        <Setter Property="Control.Padding" Value="16,10,23,10"/>
      </Trigger>
      <Trigger Property="local:ComboBoxAdv.IsEditable" Value="true">
        <Setter Property="local:ComboBoxAdv.AllowMultiSelect" Value="false"/>
      </Trigger>
      <Trigger Property="local:ComboBoxAdv.AllowMultiSelect" Value="true">
        <Setter Property="Control.Template" Value="{StaticResource MultiSelectTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style TargetType="{x:Type local:ComboBoxItemAdv}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxItemFocusVisual}"/>
    <Setter Property="Control.Padding" Value="3,0,3,0"/>
    <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ComboBoxItemAdv}">
          <Border x:Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="true">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <CheckBox x:Name="PART_CheckBox" IsHitTestVisible="false" Margin="1"
                        Visibility="{Binding Path=AllowMultiSelect, Converter={StaticResource VisiblityConverter}, RelativeSource={RelativeSource AncestorType={x:Type local:ComboBoxAdv}}}"/>
              <ContentPresenter Margin="1" Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="FrameworkElement.FlowDirection" Value="RightToLeft">
              <Setter TargetName="PART_CheckBox" Property="FrameworkElement.FlowDirection" Value="LeftToRight"/>
            </Trigger>
            <Trigger Property="resources:SkinStorage.EnableTouch" Value="true">
              <Setter Property="Control.Padding" Value="12,9,10,9"/>
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding MultiSelect, RelativeSource={RelativeSource Self}}" Value="True"/>
                <Condition Binding="{Binding Path=(skin:SkinStorage.EnableTouch), RelativeSource={RelativeSource Self}}"
                           Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="Control.Padding" Value="12,6,10,6"/>
              <Setter Property="Control.FontSize" Value="18"/>
              <Setter TargetName="Bd" Property="Border.CornerRadius" Value="0"/>
              <Setter TargetName="Bd" Property="FrameworkElement.Margin" Value="0"/>
              <Setter Property="Control.BorderThickness" Value="0,0,0,1"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}"
                      Property="Control.BorderBrush"/>
            </MultiDataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
                <Condition Property="resources:SkinStorage.EnableTouch" Value="true"/>
              </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="local:ComboBoxItemAdv.IsHighlighted" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsKeyboardFocusWithin" Value="true"/>
                <Condition Property="resources:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter Property="local:ComboBoxItemAdv.IsHighlighted" Value="true"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="UIElement.IsFocused" Value="true"/>
                <Condition Property="resources:SkinStorage.EnableTouch" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="local:ComboBoxItemAdv.IsPressed" Value="true"/>
                <Condition Property="resources:SkinStorage.EnableTouch" Value="false"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="false"/>
                <Condition Binding="{Binding Path=IsHighlighted, RelativeSource={RelativeSource Self}}" Value="false"/>
                <Condition Binding="{Binding MultiSelect, RelativeSource={RelativeSource Self}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.InactiveBorderBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.InactiveCaptionTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource Self}}" Value="true"/>
                <Condition Binding="{Binding Path=IsHighlighted, RelativeSource={RelativeSource Self}}" Value="false"/>
                <Condition Binding="{Binding MultiSelect, RelativeSource={RelativeSource Self}}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.InactiveBorderBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.InactiveCaptionTextBrushKey}}"
                      Property="Control.Foreground"/>
            </MultiDataTrigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <DataTrigger Binding="{Binding Path=IsLoaded, RelativeSource={RelativeSource Self}}" Value="True">
        <Setter Property="Control.HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Control.VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
      </DataTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>