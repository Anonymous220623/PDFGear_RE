<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:Syncfusion_Windows_Tools_Controls="clr-namespace:Syncfusion.Windows.Tools.Controls"
                    xmlns:tools="clr-namespace:Syncfusion.Windows.Tools.Controls"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <LinearGradientBrush x:Key="MouseOverBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFEAF7FC" Offset="0.066"/>
    <GradientStop Color="#FFCEEDFA" Offset="0.548"/>
    <GradientStop Color="#FF8AC5E3" Offset="0.974"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FF2999FF"/>
  <LinearGradientBrush x:Key="PressedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFDFF3FB" Offset="0.073"/>
    <GradientStop Color="#FFB5E4F6" Offset="0.551"/>
    <GradientStop Color="#FF7CB1CC" Offset="0.98"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="PressedBorderBrush" Color="#FF2999FF"/>
  <LinearGradientBrush x:Key="CheckedBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFDFF3FB" Offset="0.073"/>
    <GradientStop Color="#FFB5E4F6" Offset="0.551"/>
    <GradientStop Color="#FF7CB1CC" Offset="0.98"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="CheckedBorderBrush" Color="#FF2999FF"/>
  <LinearGradientBrush x:Key="ComboBoxToggleButtonBackground" EndPoint="0.5,1" StartPoint="0.5,0">
    <GradientStop Color="#FFF5F6FC" Offset="0.045"/>
    <GradientStop Color="#FFE9ECFA" Offset="0.444"/>
    <GradientStop Color="#FFCED4E4" Offset="0.951"/>
  </LinearGradientBrush>
  <Geometry x:Key="DownArrowGeometry">
    M 0 0 L 3.5 4 L 7 0 Z
  </Geometry>
  <SolidColorBrush x:Key="ComboBoxItemBackground" Color="white"/>
  <SolidColorBrush x:Key="ComboBoxItemBorderBrush" Color="#FF9BA7B7"/>
  <Style x:Key="ButtonFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="2" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Border x:Name="Chrome" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="Control.Foreground" Value="#ADADAD"/>
            </Trigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Command}" Value="{x:Null}"/>
                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="false"/>
              </MultiDataTrigger.Conditions>
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
    <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
    <Setter Property="Control.Padding" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Chrome" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1">
            <ContentPresenter HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
              <Setter TargetName="Chrome" Value="{StaticResource CheckedBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource CheckedBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="Control.Foreground" Value="#ADADAD"/>
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ToolBarRadioButtonStyle" BasedOn="{StaticResource ToolBarToggleButtonStyle}"
         TargetType="{x:Type RadioButton}"/>
  <Style x:Key="ToolBarCheckBoxStyle" BasedOn="{StaticResource ToolBarToggleButtonStyle}"
         TargetType="{x:Type CheckBox}"/>
  <Style x:Key="SyncfusionToolBarButtonAdvStyle" TargetType="{x:Type tools:ButtonAdv}">
    <Setter Property="Control.Foreground" Value="#FF1B293E"/>
    <Setter Property="tools:ButtonAdv.Label" Value="ButtonAdv"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type tools:ButtonAdv}">
          <Grid>
            <Border x:Name="ItemCheckedBorder" BorderBrush="Transparent" Background="Transparent"
                    BorderThickness="{TemplateBinding Control.BorderThickness}" CornerRadius="0" Opacity="1"/>
            <Border x:Name="ItemBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" CornerRadius="0" MinHeight="22"
                    SnapsToDevicePixels="true">
              <Grid>
                <Border x:Name="PART_ImageBorder">
                  <Image Height="16" Margin="2" Width="16"
                         Source="{Binding SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="ButtonBase.IsPressed" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="tools:ButtonAdv.IsChecked" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource CheckedBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource CheckedBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="ItemBorder" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SyncfusionToolBarDropDownButtonAdvStyle" TargetType="{x:Type tools:DropDownButtonAdv}">
    <Setter Property="Control.Foreground" Value="#FF1B293E"/>
    <Setter Property="tools:DropDownButtonAdv.SmallIcon">
      <Setter.Value>
        <BitmapImage UriSource="pack://application:,,,/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt16.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="tools:DropDownButtonAdv.LargeIcon">
      <Setter.Value>
        <BitmapImage UriSource="pack://application:,,,/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt32.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="tools:DropDownButtonAdv.Label" Value="Drop Down Button"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type tools:DropDownButtonAdv}">
          <Grid>
            <Border x:Name="ItemBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" CornerRadius="0" MinHeight="22"
                    SnapsToDevicePixels="true">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="PART_ImageBorder" Grid.Column="0">
                  <Image Height="16" Margin="2" Width="16"
                         Source="{Binding SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                </Border>
                <Path x:Name="Arrow" Grid.Column="2" Data="M 0,0 L 4,4 8,0 Z" Fill="{TemplateBinding Control.Foreground}"
                      HorizontalAlignment="Center" Margin="1,1,2,1" VerticalAlignment="Center"/>
              </Grid>
            </Border>
            <Popup x:Name="PART_DropDown" AllowsTransparency="true" Placement="Bottom" StaysOpen="false">
              <Grid x:Name="Part_GridPopup" MinWidth="{TemplateBinding FrameworkElement.MinWidth}"
                    MinHeight="{TemplateBinding FrameworkElement.MinHeight}">
                <Border BorderBrush="#FF646464" BorderThickness="1" Background="#FFF0F0F0" CornerRadius="0">
                  <Border BorderBrush="#FF646464" BorderThickness="0" Background="#FFF0F0F0" CornerRadius="1">
                    <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"/>
                  </Border>
                </Border>
              </Grid>
            </Popup>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
            </Trigger>
            <Trigger Property="tools:DropDownButtonAdv.IsPressed" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF1B293E"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="ItemBorder" Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="SyncfusionToolBarSplitButtonAdvStyle" TargetType="{x:Type tools:SplitButtonAdv}">
    <Setter Property="Control.Foreground" Value="#FF1B293E"/>
    <Setter Property="tools:DropDownButtonAdv.SmallIcon">
      <Setter.Value>
        <BitmapImage UriSource="pack://application:,,,/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt16.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="tools:DropDownButtonAdv.LargeIcon">
      <Setter.Value>
        <BitmapImage UriSource="pack://application:,,,/Syncfusion.Shared.WPF;component//Controls/ButtonControls/Images/WordArt32.png"/>
      </Setter.Value>
    </Setter>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="tools:DropDownButtonAdv.Label" Value="Split Button"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type tools:SplitButtonAdv}">
          <Grid>
            <Popup x:Name="PART_DropDown" AllowsTransparency="true" Placement="Bottom" StaysOpen="false">
              <Grid x:Name="Part_GridPopup" MinWidth="{TemplateBinding FrameworkElement.MinWidth}"
                    MinHeight="{TemplateBinding FrameworkElement.MinHeight}">
                <Border BorderBrush="#FF9BA7B7" BorderThickness="1" CornerRadius="1" SnapsToDevicePixels="true">
                  <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                      <GradientStop Color="#FFE8EBED" Offset="0.028"/>
                      <GradientStop Color="#FFD1D8E2" Offset="0.982"/>
                    </LinearGradientBrush>
                  </Border.Background>
                  <ContentPresenter ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}" Margin="2"/>
                </Border>
              </Grid>
            </Popup>
            <Border x:Name="ItemBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" CornerRadius="0" MinHeight="22"
                    SnapsToDevicePixels="true">
              <Grid>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Border x:Name="PART_ButtonNormal" Grid.Column="0">
                  <Grid>
                    <Border x:Name="PART_ImageBorder">
                      <Image Height="16" Margin="2" Width="16"
                             Source="{Binding SmallIcon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Border>
                  </Grid>
                </Border>
                <Border x:Name="PART_DropDownButtonNormal" BorderThickness="1,0,0,0" Background="Transparent"
                        Grid.Column="1">
                  <Path x:Name="Arrow" Data="M 0,0 L 4,4 8,0 Z" Fill="#FF1B293E" HorizontalAlignment="Center" Margin="2,1"
                        VerticalAlignment="Center"/>
                </Border>
              </Grid>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_DropDownButtonNormal" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="PART_DropDownButtonNormal" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
            </Trigger>
            <Trigger SourceName="PART_ButtonNormal" Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
              <Setter TargetName="PART_DropDownButtonNormal" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
            </Trigger>
            <Trigger Property="tools:DropDownButtonAdv.IsPressed" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="PART_DropDownButtonNormal" Value="{StaticResource PressedBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
            </Trigger>
            <Trigger Property="tools:DropDownButtonAdv.IsDropDownOpen" Value="true">
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
              <Setter TargetName="ItemBorder" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="PART_DropDownButtonNormal" Value="{StaticResource PressedBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="Black"/>
            </Trigger>
            <Trigger Property="tools:SplitButtonAdv.IsDropDownPressed" Value="true"/>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxFocusVisual2">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxToggleButtonBackground}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Chrome" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Border BorderBrush="White" BorderThickness="0">
              <Grid HorizontalAlignment="Right"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Stretch"
                      Margin="5,9.729,5,7.229" VerticalAlignment="Stretch"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              <Setter TargetName="Chrome" Property="Border.Background" Value="#FFE3E3E3"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
    <GradientStop Color="#ABADB3" Offset="0.05"/>
    <GradientStop Color="#E2E3EA" Offset="0.07"/>
    <GradientStop Color="#E3E9EF" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="FrameworkElement.MinWidth" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="0"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type TextBox}">
          <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false"
                        HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxToggleButtonBackground}"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Chrome" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Border BorderBrush="White" BorderThickness="0">
              <Grid HorizontalAlignment="Right"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Stretch"
                      Margin="5,9.729,5,7.229" VerticalAlignment="Stretch"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              <Setter TargetName="Chrome" Property="Border.Background" Value="#FFE3E3E3"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
    <Border x:Name="outerBorder" Background="{TemplateBinding Control.Background}"
            BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" SnapsToDevicePixels="true">
      <Grid x:Name="Placement" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                                           FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                           FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=Placement}">
            <Border x:Name="DropDownBorder" BorderBrush="{StaticResource ComboBoxItemBorderBrush}" BorderThickness="1"
                    Background="{StaticResource ComboBoxItemBackground}">
              <ScrollViewer x:Name="DropDownScrollViewer">
                <Grid>
                  <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                  </Canvas>
                  <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                </Grid>
              </ScrollViewer>
            </Border>
          </Microsoft_Windows_Themes:SystemDropShadowChrome>
        </Popup>
        <TextBox x:Name="PART_EditableTextBox"
                 HorizontalContentAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                 Margin="{TemplateBinding Control.Padding}" Style="{StaticResource ComboBoxEditableTextBox}"
                 VerticalContentAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                 IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ToggleButton x:Name="toggleButton" Grid.Column="1" Style="{StaticResource ComboBoxToggleButton}" Margin="1"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
        <Setter Property="Control.Foreground" Value="Black"/>
      </Trigger>
      <Trigger Property="ItemsControl.HasItems" Value="false">
        <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
      </Trigger>
      <Trigger Property="UIElement.IsMouseOver" Value="true">
        <Setter TargetName="outerBorder" Value="{StaticResource MouseOverBorderBrush}"
                Property="Border.BorderBrush"/>
        <Setter TargetName="toggleButton" Value="{StaticResource MouseOverBackground}"
                Property="Control.Background"/>
        <Setter TargetName="toggleButton" Value="{StaticResource MouseOverBorderBrush}"
                Property="Control.BorderBrush"/>
        <Setter TargetName="toggleButton" Property="Control.BorderThickness" Value="1,0,0,0"/>
        <Setter TargetName="toggleButton" Property="FrameworkElement.Margin" Value="1"/>
      </Trigger>
      <Trigger Property="UIElement.IsEnabled" Value="false">
        <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
        <Setter Property="Control.Background" Value="#FFF4F4F4"/>
        <Setter TargetName="outerBorder" Property="Border.BorderBrush" Value="Gray"/>
        <Setter Property="UIElement.Opacity" Value="0.5"/>
      </Trigger>
      <Trigger Property="ItemsControl.IsGrouping" Value="true">
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
      </Trigger>
      <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
        <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
        <Setter TargetName="Shdw" Property="Microsoft_Windows_Themes:SystemDropShadowChrome.Color"
                Value="#71000000"/>
      </Trigger>
      <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
        <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Top"/>
        <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                Property="Canvas.Left"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="ToolBarComboBoxStyle" TargetType="{x:Type ComboBox}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual2}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="White"/>
    <Setter Property="Control.BorderBrush" Value="White"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="4,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBox}">
          <Border x:Name="outerBorder" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" BorderThickness="1">
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="1"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     Placement="Bottom"
                     IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent"
                                                                 FrameworkElement.MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                                                 FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                  <Border x:Name="DropDownBorder" BorderBrush="{StaticResource ComboBoxItemBorderBrush}" BorderThickness="1"
                          Background="{StaticResource ComboBoxItemBackground}">
                    <ScrollViewer x:Name="DropDownScrollViewer">
                      <Grid>
                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                          <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                     Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                     Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                        </Canvas>
                        <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                        SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                      </Grid>
                    </ScrollViewer>
                  </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
              </Popup>
              <ToggleButton x:Name="toggleButton" Grid.Column="1" Style="{StaticResource ComboBoxReadonlyToggleButton}"
                            Margin="0"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding ComboBox.SelectionBoxItemStringFormat}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
              <Setter TargetName="Shdw" Property="FrameworkElement.Margin" Value="0,0,5,5"/>
              <Setter TargetName="Shdw" Property="Microsoft_Windows_Themes:SystemDropShadowChrome.Color"
                      Value="#71000000"/>
            </Trigger>
            <Trigger Property="ItemsControl.HasItems" Value="false">
              <Setter TargetName="DropDownBorder" Property="FrameworkElement.Height" Value="95"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="outerBorder" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="toggleButton" Value="{StaticResource MouseOverBackground}"
                      Property="Control.Background"/>
              <Setter TargetName="toggleButton" Value="{StaticResource MouseOverBorderBrush}"
                      Property="Control.BorderBrush"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              <Setter Property="Control.Background" Value="#FFF4F4F4"/>
            </Trigger>
            <Trigger Property="ItemsControl.IsGrouping" Value="true">
              <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
              <Setter TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"
                      Property="Canvas.Top"/>
              <Setter TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"
                      Property="Canvas.Left"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ComboBox.IsEditable" Value="true">
        <Setter Property="Control.BorderBrush" Value="{StaticResource TextBoxBorder}"/>
        <Setter Property="Control.Background" Value="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}"/>
        <Setter Property="Control.IsTabStop" Value="false"/>
        <Setter Property="Control.Padding" Value="3"/>
        <Setter Property="Control.Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ToolBarComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Padding" Value="3,0,3,0"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="Control.Foreground" Value="Black"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border Name="Bd" CornerRadius="4" Margin="2" Background="{TemplateBinding Control.Background}"
                  BorderBrush="Transparent" BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Padding="{TemplateBinding Control.Padding}" SnapsToDevicePixels="true">
            <ContentPresenter Margin="2" HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="ComboBoxItem.IsHighlighted" Value="true">
              <Setter TargetName="Bd" Value="{StaticResource PressedBorderBrush}" Property="Border.BorderBrush"/>
              <Setter TargetName="Bd" Value="{StaticResource PressedBackground}" Property="Border.Background"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Property="UIElement.Opacity" Value="0.5"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <BooleanToVisibilityConverter x:Key="VisiblityConverter"/>
  <Style x:Key="ComboBoxFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true"
                     Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                     StrokeDashArray="1 2"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
    <GradientStop Color="#F3F3F3" Offset="0"/>
    <GradientStop Color="#EBEBEB" Offset="0.5"/>
    <GradientStop Color="#DDDDDD" Offset="0.5"/>
    <GradientStop Color="#CDCDCD" Offset="1"/>
  </LinearGradientBrush>
  <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
  <Style x:Key="ComboBoxAdvReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="Control.Background" Value="{StaticResource ComboBoxToggleButtonBackground}"/>
    <Setter Property="Control.BorderBrush" Value="Transparent"/>
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Border x:Name="Chrome" BorderThickness="1,0,0,0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
            <Border BorderBrush="White" BorderThickness="0">
              <Grid HorizontalAlignment="Right"
                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Stretch"
                      Margin="5,9.729,5,7.229" VerticalAlignment="Stretch"/>
              </Grid>
            </Border>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
              <Setter TargetName="Chrome" Property="Border.Background" Value="#FFE3E3E3"/>
            </Trigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBackground}" Property="Border.Background"/>
              <Setter TargetName="Chrome" Value="{StaticResource MouseOverBorderBrush}" Property="Border.BorderBrush"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="ComboBoxAdvToggleButton" TargetType="{x:Type ToggleButton}">
    <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="UIElement.Focusable" Value="false"/>
    <Setter Property="ButtonBase.ClickMode" Value="Press"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ToggleButton}">
          <Microsoft_Windows_Themes:ButtonChrome x:Name="Chrome" BorderBrush="{TemplateBinding Control.BorderBrush}"
                                                 Background="{TemplateBinding Control.Background}"
                                                 RenderMouseOver="{TemplateBinding UIElement.IsMouseOver}"
                                                 RenderPressed="{TemplateBinding ButtonBase.IsPressed}" RoundCorners="false"
                                                 UIElement.SnapsToDevicePixels="true"
                                                 FrameworkElement.Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center"
                  Margin="0,1,0,0" VerticalAlignment="Center"/>
          </Microsoft_Windows_Themes:ButtonChrome>
          <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
              <Setter TargetName="Chrome" Property="Microsoft_Windows_Themes:ButtonChrome.RenderPressed" Value="true"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="Arrow" Property="Shape.Fill" Value="#AFAFAF"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="MultiSelectTemplate" TargetType="{x:Type tools:ComboBoxAdv}">
    <Grid>
      <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
        </Grid.ColumnDefinitions>
        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" StaysOpen="false" Margin="1"
               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
               Placement="Bottom"
               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
          <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#71000000" FrameworkElement.Margin="0,0,5,5"
                                                           FrameworkElement.MaxHeight="{TemplateBinding tools:ComboBoxAdv.MaxDropDownHeight}"
                                                           FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
            <Border x:Name="DropDownBorder"
                    BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                    Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
              <Grid>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ScrollViewer x:Name="DropDownScrollViewer">
                  <Grid>
                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                      <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                 Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                 Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                    </Canvas>
                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                    SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                  </Grid>
                </ScrollViewer>
              </Grid>
            </Border>
          </Microsoft_Windows_Themes:SystemDropShadowChrome>
        </Popup>
        <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}"
                      Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                      Style="{StaticResource ComboBoxAdvReadonlyToggleButton}"
                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
        <ItemsControl x:Name="PART_SelectedItems"
                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                      Margin="{TemplateBinding Control.Padding}"
                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal"/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
        <TextBlock x:Name="PART_DefaultText" Text="{TemplateBinding tools:ComboBoxAdv.DefaultText}"
                   HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                   Margin="{TemplateBinding Control.Padding}"
                   VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
      </Grid>
    </Grid>
  </ControlTemplate>
  <Style x:Key="ToolBarComboBoxAdvStyle" TargetType="{x:Type tools:ComboBoxAdv}">
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.WindowTextBrushKey}}"/>
    <Setter Property="Control.Background" Value="{StaticResource ButtonNormalBackground}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    <Setter Property="Control.Padding" Value="4,3"/>
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type tools:ComboBoxAdv}">
          <Grid>
            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
              </Grid.ColumnDefinitions>
              <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" StaysOpen="false" Margin="1"
                     PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                     Placement="Bottom"
                     IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="#71000000" FrameworkElement.Margin="0,0,5,5"
                                                                 FrameworkElement.MaxHeight="{TemplateBinding tools:ComboBoxAdv.MaxDropDownHeight}"
                                                                 FrameworkElement.MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                  <Border x:Name="DropDownBorder"
                          BorderBrush="{DynamicResource {x:Static JetSystemColors.WindowFrameBrushKey}}" BorderThickness="1"
                          Background="{DynamicResource {x:Static JetSystemColors.WindowBrushKey}}">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                      </Grid.RowDefinitions>
                      <ScrollViewer x:Name="DropDownScrollViewer">
                        <Grid>
                          <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}"
                                       Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                       Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                          </Canvas>
                          <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        </Grid>
                      </ScrollViewer>
                    </Grid>
                  </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
              </Popup>
              <ToggleButton BorderBrush="{TemplateBinding Control.BorderBrush}"
                            Background="{TemplateBinding Control.Background}" Grid.ColumnSpan="2"
                            Style="{StaticResource ComboBoxAdvReadonlyToggleButton}"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
              <ContentPresenter x:Name="ContentPresenter"
                                ContentTemplate="{TemplateBinding tools:ComboBoxAdv.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemsControl.ItemTemplateSelector}"
                                Content="{TemplateBinding tools:ComboBoxAdv.SelectionBoxItem}"
                                ContentStringFormat="{TemplateBinding tools:ComboBoxAdv.SelectionBoxItemStringFormat}"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                                Margin="{TemplateBinding Control.Padding}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              <ItemsControl x:Name="PART_SelectedItems"
                            HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                            Margin="{TemplateBinding Control.Padding}"
                            VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
              <TextBlock x:Name="PART_DefaultText" Text="{TemplateBinding tools:ComboBoxAdv.DefaultText}"
                         HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}" IsHitTestVisible="false"
                         Margin="{TemplateBinding Control.Padding}"
                         VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="tools:ComboBoxAdv.AllowMultiSelect" Value="true">
        <Setter Property="Control.Template" Value="{StaticResource MultiSelectTemplate}"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style x:Key="ToolBarComboBoxItemAdvStyle" TargetType="{x:Type tools:ComboBoxItemAdv}">
    <Setter Property="Control.HorizontalContentAlignment"
            Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.VerticalContentAlignment"
            Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
    <Setter Property="Control.Padding" Value="3,0,3,0"/>
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type tools:ComboBoxItemAdv}">
          <Border x:Name="Bd" BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}"
                  Background="{TemplateBinding Control.Background}" Padding="{TemplateBinding Control.Padding}"
                  SnapsToDevicePixels="true">
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <CheckBox x:Name="PART_CheckBox" Margin="1"
                        Visibility="{Binding Path=AllowMultiSelect, Converter={StaticResource VisiblityConverter}, RelativeSource={RelativeSource AncestorType={x:Type tools:ComboBoxAdv}}}"
                        IsChecked="{Binding Path=IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
              <ContentPresenter Margin="1" Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="tools:ComboBoxItemAdv.IsHighlighted" Value="true">
              <Setter TargetName="Bd" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                      Property="Border.Background"/>
              <Setter Value="{DynamicResource {x:Static JetSystemColors.HighlightTextBrushKey}}"
                      Property="Control.Foreground"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>