<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Sync_Resources="clr-namespace:Syncfusion.Windows.Shared"
                    xmlns:shell="clr-namespace:Syncfusion.Windows"
                    xmlns:local="clr-namespace:Syncfusion.Windows.Shared">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="/Syncfusion.Shared.WPF;component/SkinManager/MetroThemeBrushes.xaml"/>
  </ResourceDictionary.MergedDictionaries>
  <SolidColorBrush x:Key="MetroPathBrush" Color="#FF7F7F7F"/>
  <SolidColorBrush x:Key="MetroTitleBarBackground" Color="Transparent"/>
  <SolidColorBrush x:Key="MetroHoverPathBrush" Color="#FF333333"/>
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
  <local:CornerRadiusConverter x:Key="CRConvert"/>
  <Style TargetType="{x:Type local:TitleBar}">
    <Setter Property="UIElement.Focusable" Value="false"/>
  </Style>
  <Style TargetType="{x:Type local:TitleButton}">
    <Setter Property="UIElement.Focusable" Value="false"/>
  </Style>
  <LinearGradientBrush x:Key="ResizeGripperForeground" EndPoint="1,0.75" StartPoint="0,0.25">
    <GradientStop Color="#FFFFFF" Offset="0.3"/>
    <GradientStop Color="#BBC5D7" Offset="0.75"/>
    <GradientStop Color="#6D83A9" Offset="1"/>
  </LinearGradientBrush>
  <Style x:Key="ResizeStyle" TargetType="{x:Type local:ResizeGripStyle}">
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Bottom"/>
    <Setter Property="UIElement.Visibility" Value="Collapsed"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="FrameworkElement.Cursor" Value="SizeNWSE"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ResizeGripStyle}">
          <Grid>
            <Grid x:Name="gripper">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Grid Height="3" Width="1" Column="2" Row="0" Margin="2,1,1,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="3" Width="1" Column="1" Row="1" Margin="2,1,1,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="3" Width="1" Column="2" Row="1" Margin="2,1,1,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="3" Width="1" Column="0" Row="2" Margin="1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="3" Width="1" Column="1" Row="2" Margin="2,1,1,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="3" Width="1" Column="2" Row="2" Margin="2,1,1,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
            </Grid>
            <Grid x:Name="touchgripper" Visibility="Collapsed" Margin="0,0,5,5">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
              </Grid.RowDefinitions>
              <Grid Height="6" Width="2" Column="2" Row="0" Margin="2,1,1,3">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="6" Width="2" Column="1" Row="1" Margin="2,1,5,3">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="6" Width="2" Column="2" Row="1" Margin="2,1,1,3">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="6" Width="2" Column="0" Row="2" Margin="1,1,5,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="6" Width="2" Column="1" Row="2" Margin="2,1,5,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
              <Grid Height="6" Width="2" Column="2" Row="2" Margin="2,1,1,1">
                <Rectangle Fill="#FF939598"/>
                <Rectangle Fill="#FF939598" RenderTransformOrigin="0.5,0.5">
                  <UIElement.RenderTransform>
                    <TransformGroup>
                      <ScaleTransform/>
                      <SkewTransform/>
                      <RotateTransform Angle="90"/>
                      <TranslateTransform/>
                    </TransformGroup>
                  </UIElement.RenderTransform>
                </Rectangle>
              </Grid>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
              <Setter TargetName="touchgripper" Property="UIElement.Visibility" Value="Visible"/>
              <Setter TargetName="gripper" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ControlTemplate x:Key="SkinTemp" TargetType="{x:Type local:ChromelessWindow}">
    <AdornerDecorator x:Name="Part_AdornerDecorator">
      <Border Name="OuterBorder" Background="{TemplateBinding Control.Background}"
              BorderBrush="{TemplateBinding local:ChromelessWindow.ResizeBorderBrush}"
              Margin="{TemplateBinding FrameworkElement.Margin}"
              BorderThickness="{TemplateBinding local:ChromelessWindow.ResizeBorderThickness}">
        <Border Name="InnerBorder">
          <Grid x:Name="RootGrid">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="2" Background="{TemplateBinding Control.Background}"
                    CornerRadius="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ChromelessWindow}}, Path=CornerRadius}"/>
            <Border Name="ContentAreaBorder" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" Grid.Row="1">
              <Grid x:Name="ChildGrid">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <local:ResizeGripStyle x:Name="PART_Resizegrip" Style="{TemplateBinding local:ChromelessWindow.ResizeGripStyle}"
                                       HorizontalAlignment="right" VerticalAlignment="Bottom" Visibility="Collapsed" IsTabStop="false"
                                       Cursor="SizeNWSE" Margin="0,0,3,3"/>
                <ContentPresenter Name="contentpresenter"/>
              </Grid>
            </Border>
            <Border Name="TitleBarBorder" Grid.Row="0">
              <local:TitleBar x:Name="PART_TitleBar" VerticalAlignment="Top"
                              Height="{TemplateBinding local:ChromelessWindow.TitleBarHeight}"
                              Template="{TemplateBinding local:ChromelessWindow.TitleBarTemplate}"
                              Foreground="{TemplateBinding Control.Foreground}"
                              Background="{TemplateBinding local:ChromelessWindow.TitleBarBackground}">
                <Grid>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Border x:Name="PART_LeftIconBorder" Background="{DynamicResource MetroBrush}">
                    <Image x:Name="PART_IconLeft" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                           VerticalAlignment="Center" HorizontalAlignment="Left" Margin="6,0,6,0" MaxWidth="16" MaxHeight="16"
                           MinWidth="16" MinHeight="16"
                           Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ChromelessWindow}}, Path=Icon}"
                           Visibility="{Binding Path=ShowIcon, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                  </Border>
                  <ItemsControl x:Name="PART_LeftHeaderItems" shell:WindowChrome.IsHitTestVisibleInChrome="true" Grid.Column="1"
                                VerticalAlignment="Center"
                                ItemTemplate="{TemplateBinding local:ChromelessWindow.LeftHeaderItemTemplate}"
                                ItemsSource="{Binding LeftHeaderItemsSource, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                  <TextBlock x:Name="TitlePresenter" Focusable="false" Grid.Column="2"
                             FontSize="{TemplateBinding local:ChromelessWindow.TitleFontSize}"
                             Text="{TemplateBinding Window.Title}" VerticalAlignment="Center" TextTrimming="CharacterEllipsis"
                             FontFamily="{DynamicResource MetroFontFamily}" Margin="5,5,5,5"
                             Foreground="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ChromelessWindow}}, Path=TitleBarForeground}"
                             HorizontalAlignment="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ChromelessWindow}}, Path=TitleTextAlignment}"
                             Visibility="{Binding Path=ShowTitle, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                  <ItemsControl x:Name="PART_RightHeaderItems" shell:WindowChrome.IsHitTestVisibleInChrome="true" Grid.Column="3"
                                VerticalAlignment="Center"
                                ItemTemplate="{TemplateBinding local:ChromelessWindow.RightHeaderItemTemplate}"
                                ItemsSource="{Binding RightHeaderItemsSource, RelativeSource={RelativeSource TemplatedParent}}">
                    <ItemsControl.ItemsPanel>
                      <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                      </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                  </ItemsControl>
                  <Border x:Name="PART_RightIconBorder" Grid.Column="4" Background="{DynamicResource MetroBrush}">
                    <Image x:Name="PART_Icon" shell:WindowChrome.IsHitTestVisibleInChrome="true" Grid.Column="3"
                           VerticalAlignment="Center" HorizontalAlignment="Left" Margin="6,0,6,0" MaxWidth="16" MaxHeight="16"
                           MinWidth="16" MinHeight="16"
                           Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ChromelessWindow}}, Path=Icon}"
                           Visibility="{Binding Path=ShowIcon, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}"/>
                  </Border>
                  <StackPanel x:Name="MinMaxCloseStackPanel" Grid.Column="5" Orientation="Horizontal" HorizontalAlignment="Right"
                              Margin="0,0,10,0" VerticalAlignment="Center">
                    <local:TitleButton x:Name="MinimizeButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                       Command="local:ChromelessWindow.ToggleMinimizedState"
                                       Template="{TemplateBinding local:ChromelessWindow.MinimizeButtonTemplate}"
                                       ToolTip="{local:SharedLocalizationResource ResourceName=MinimizeTooltip}"/>
                    <local:TitleButton x:Name="PART_MaximizeButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                       Command="local:ChromelessWindow.ToggleMaximizedState" Visibility="Collapsed"
                                       Template="{TemplateBinding local:ChromelessWindow.MaximizeButtonTemplate}" Margin="0,0,4,0"
                                       ToolTip="{local:SharedLocalizationResource ResourceName=MaximizeTooltip}"/>
                    <local:TitleButton x:Name="PART_RestoreButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                       Command="local:ChromelessWindow.ToggleMaximizedState" Visibility="Collapsed"
                                       Template="{TemplateBinding local:ChromelessWindow.RestoreButtonTemplate}" Margin="0,-2,5,0"
                                       ToolTip="{local:SharedLocalizationResource ResourceName=RestoreTooltip}"/>
                    <local:TitleButton x:Name="CloseButton" shell:WindowChrome.IsHitTestVisibleInChrome="true"
                                       Command="local:ChromelessWindow.CloseWindow"
                                       Template="{TemplateBinding local:ChromelessWindow.CloseButtonTemplate}"
                                       ToolTip="{local:SharedLocalizationResource ResourceName=CloseTooltip}"/>
                  </StackPanel>
                </Grid>
              </local:TitleBar>
            </Border>
          </Grid>
        </Border>
      </Border>
    </AdornerDecorator>
    <ControlTemplate.Triggers>
      <Trigger Property="local:ChromelessWindow.ResizeBorderBrush" Value="Transparent">
        <Setter TargetName="OuterBorder" Property="UIElement.Effect">
          <Setter.Value>
            <DropShadowEffect BlurRadius="100" Opacity="0.01" RenderingBias="Performance"/>
          </Setter.Value>
        </Setter>
      </Trigger>
      <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
        <Setter TargetName="PART_TitleBar" Property="FrameworkElement.Height" Value="40"/>
        <Setter TargetName="PART_Icon" Property="FrameworkElement.MinHeight" Value="20"/>
        <Setter TargetName="PART_Icon" Property="FrameworkElement.MaxHeight" Value="20"/>
        <Setter TargetName="PART_Icon" Property="FrameworkElement.MinWidth" Value="20"/>
        <Setter TargetName="PART_Icon" Property="FrameworkElement.Margin" Value="10,0,10,0"/>
        <Setter TargetName="TitlePresenter" Property="FrameworkElement.Margin" Value="5,5,10,5"/>
        <Setter TargetName="PART_Icon" Property="FrameworkElement.MaxWidth" Value="20"/>
        <Setter Property="Control.FontSize" Value="18"/>
        <Setter TargetName="PART_MaximizeButton" Property="FrameworkElement.Margin" Value="0,0,10,0"/>
        <Setter TargetName="PART_RestoreButton" Property="FrameworkElement.Margin" Value="0,-4,10,0"/>
        <Setter TargetName="MinimizeButton" Property="FrameworkElement.Margin" Value="0,0,5,0"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:ChromelessWindow.IconAlignment" Value="Left"/>
          <Condition Property="local:ChromelessWindow.ShowIcon" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_LeftIconBorder" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_RightIconBorder" Property="UIElement.Visibility" Value="Collapsed"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:ChromelessWindow.IconAlignment" Value="Right"/>
          <Condition Property="local:ChromelessWindow.ShowIcon" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_LeftIconBorder" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_RightIconBorder" Property="UIElement.Visibility" Value="Visible"/>
      </MultiTrigger>
      <Trigger Property="local:ChromelessWindow.UseNativeChrome" Value="false">
        <Setter TargetName="OuterBorder"
                Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ChromelessWindow}}, Path=CornerRadius}"
                Property="Border.CornerRadius"/>
      </Trigger>
      <Trigger Property="Window.ResizeMode" Value="NoResize">
        <Setter TargetName="MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter Property="local:ChromelessWindow.ResizeBorderThickness" Value="1"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanMinimize"/>
          <Condition Property="Window.WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="false"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.IsEnabled" Value="false"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanMinimize"/>
          <Condition Property="Window.WindowState" Value="Maximized"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="false"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.IsEnabled" Value="false"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResize"/>
          <Condition Property="Window.WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="MinimizeButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResize"/>
          <Condition Property="Window.WindowState" Value="Maximized"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="MinimizeButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.IsEnabled" Value="true"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
          <Condition Property="Window.WindowState" Value="Normal"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Resizegrip" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.IsEnabled" Value="true"/>
      </MultiTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="CanResizeWithGrip"/>
          <Condition Property="Window.WindowState" Value="Maximized"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="PART_Resizegrip" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.IsEnabled" Value="true"/>
      </MultiTrigger>
      <Trigger Property="Window.IsActive" Value="false">
        <Setter Property="local:ChromelessWindow.TitleBarForeground" Value="#FFB1B1B1"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.ResizeMode" Value="NoResize"/>
          <Condition Property="Window.WindowState" Value="Maximized"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="OuterBorder" Property="FrameworkElement.Margin" Value="0"/>
      </MultiTrigger>
      <Trigger Property="local:ChromelessWindow.ShowMaximizeButton" Value="false">
        <Setter TargetName="PART_MaximizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="PART_RestoreButton" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <Trigger Property="local:ChromelessWindow.ShowMinimizeButton" Value="false">
        <Setter TargetName="MinimizeButton" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="Window.WindowStyle" Value="None"/>
          <Condition Property="Window.WindowState" Value="Maximized"/>
          <Condition Property="local:ChromelessWindow.HideTaskBar" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="TitleBarBorder" Property="UIElement.Visibility" Value="Collapsed"/>
      </MultiTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <SolidColorBrush x:Key="pathbrush" Color="#FF9F9F9F"/>
  <ControlTemplate x:Key="MinimizeBlue" TargetType="{x:Type Button}">
    <Border Name="minborder" BorderThickness="1" CornerRadius="0" Background="Transparent" Margin="0,2,0,2"
            Height="25" Width="25" SnapsToDevicePixels="true">
      <Path x:Name="minpath" Data="M 0.5,0.5 L 8.5,0.5 8.5,2.5 0.5,2.5 Z"
            Fill="{StaticResource MetroPathBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
            Height="2" Margin="2,0,0,0" Stretch="Fill" Stroke="{StaticResource MetroPathBrush}" Width="9"
            SnapsToDevicePixels="true"/>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
        <Setter TargetName="minborder" Property="FrameworkElement.Width" Value="35"/>
        <Setter TargetName="minborder" Property="FrameworkElement.Height" Value="35"/>
        <Setter TargetName="minpath" Property="FrameworkElement.Width" Value="18"/>
        <Setter TargetName="minpath" Property="FrameworkElement.Height" Value="4"/>
        <Setter TargetName="minpath" Property="FrameworkElement.Margin" Value="4,0,0,0"/>
        <Setter TargetName="minpath" Value="{StaticResource pathbrush}" Property="Shape.Fill"/>
        <Setter TargetName="minpath" Value="{StaticResource pathbrush}" Property="Shape.Stroke"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="minpath" Value="{StaticResource MetroHoverPathBrush}" Property="Shape.Fill"/>
        <Setter TargetName="minpath" Value="{StaticResource MetroHoverPathBrush}" Property="Shape.Stroke"/>
      </MultiTrigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="minpath" Value="{StaticResource MetroHoverPathBrush}" Property="Shape.Fill"/>
        <Setter TargetName="minpath" Value="{StaticResource MetroHoverPathBrush}" Property="Shape.Stroke"/>
      </Trigger>
      <DataTrigger Value="False"
                   Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType={x:Type local:ChromelessWindow}}}">
        <Setter TargetName="minpath" Property="Shape.Fill" Value="#FFB1B1B1"/>
        <Setter TargetName="minpath" Property="Shape.Stroke" Value="#FFB1B1B1"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="MaximizeBlue" TargetType="{x:Type Button}">
    <Border x:Name="maxborder" SnapsToDevicePixels="true" Width="15" Height="15" Background="Transparent"
            BorderThickness="0" BorderBrush="Transparent">
      <Grid x:Name="grid" SnapsToDevicePixels="true" HorizontalAlignment="Center" VerticalAlignment="Center"
            Width="9" Height="8">
        <Path Name="pathButton" SnapsToDevicePixels="true" Stretch="Fill" StrokeThickness="1"
              Stroke="{StaticResource MetroPathBrush}" Data="M 1,1 L 8,1 8,8 1,8 M 1,2 L 8,2 "
              HorizontalAlignment="Center" VerticalAlignment="Center" Width="9" Height="8"/>
        <Border x:Name="touchpath" SnapsToDevicePixels="true" Visibility="Collapsed"
                BorderBrush="{StaticResource pathbrush}" BorderThickness="2,4,2,2" HorizontalAlignment="Center"
                VerticalAlignment="center" Height="16" Width="18"/>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
        <Setter TargetName="maxborder" Property="FrameworkElement.Width" Value="20"/>
        <Setter TargetName="maxborder" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="grid" Property="FrameworkElement.Width" Value="20"/>
        <Setter TargetName="grid" Property="FrameworkElement.Height" Value="16"/>
        <Setter TargetName="touchpath" Property="UIElement.Visibility" Value="Visible"/>
        <Setter TargetName="pathButton" Property="UIElement.Visibility" Value="Collapsed"/>
      </Trigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="pathButton" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Stroke"/>
      </MultiTrigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="pathButton" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Stroke"/>
      </Trigger>
      <DataTrigger Value="False"
                   Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType={x:Type local:ChromelessWindow}}}">
        <Setter TargetName="pathButton" Property="Shape.Stroke" Value="#FFB1B1B1"/>
      </DataTrigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="RestoreBlue" TargetType="{x:Type Button}">
    <Grid>
      <Grid x:Name="minButton" Height="7" Margin="0,3,0,0" Width="7.5">
        <Border x:Name="bd1" BorderThickness="1,2,1,1" SnapsToDevicePixels="true" Background="White"
                BorderBrush="{StaticResource MetroPathBrush}">
          <Rectangle x:Name="rect1" Fill="White" Height="6" Margin="0,0,-2,-4" HorizontalAlignment="Right" Width="5"
                     Stroke="{StaticResource MetroPathBrush}"/>
        </Border>
      </Grid>
      <Grid x:Name="touchminButton" Visibility="Collapsed" Height="12" Margin="0,3,0,0" Width="14">
        <Border x:Name="bd2" BorderThickness="1,2,1,1" SnapsToDevicePixels="true" Background="White"
                BorderBrush="{StaticResource pathbrush}">
          <Rectangle x:Name="rect2" Fill="White" Height="12" Margin="0,0,-4,-8" HorizontalAlignment="Right" Width="10"
                     Stroke="{StaticResource pathbrush}"/>
        </Border>
      </Grid>
    </Grid>
    <ControlTemplate.Triggers>
      <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
        <Setter TargetName="minButton" Property="UIElement.Visibility" Value="Collapsed"/>
        <Setter TargetName="touchminButton" Property="UIElement.Visibility" Value="Visible"/>
      </Trigger>
      <DataTrigger Value="False"
                   Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType={x:Type local:ChromelessWindow}}}">
        <Setter TargetName="rect2" Property="Shape.Stroke" Value="#FFB1B1B1"/>
        <Setter TargetName="bd1" Property="Border.BorderBrush" Value="#FFB1B1B1"/>
      </DataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="rect1" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Stroke"/>
        <Setter TargetName="bd1" Value="{DynamicResource MetroHoverPathBrush}" Property="Border.BorderBrush"/>
      </MultiTrigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="rect1" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Stroke"/>
        <Setter TargetName="bd1" Value="{DynamicResource MetroHoverPathBrush}" Property="Border.BorderBrush"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="CloseBlue" TargetType="{x:Type Button}">
    <Border x:Name="border" Width="12" Cursor="Arrow" Background="Transparent">
      <Grid x:Name="grid" Height="10" Width="1.5">
        <Rectangle x:Name="rect1" SnapsToDevicePixels="true" Fill="{StaticResource MetroPathBrush}"
                   StrokeThickness="0" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <RotateTransform Angle="-49"/>
          </UIElement.RenderTransform>
        </Rectangle>
        <Rectangle x:Name="rect2" SnapsToDevicePixels="true" Fill="{StaticResource MetroPathBrush}"
                   StrokeThickness="0" RenderTransformOrigin="0.5,0.5">
          <UIElement.RenderTransform>
            <RotateTransform Angle="48"/>
          </UIElement.RenderTransform>
        </Rectangle>
      </Grid>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
        <Setter TargetName="border" Property="FrameworkElement.Width" Value="24"/>
        <Setter TargetName="grid" Property="FrameworkElement.Width" Value="3"/>
        <Setter TargetName="grid" Property="FrameworkElement.Height" Value="22"/>
        <Setter TargetName="rect1" Value="{StaticResource pathbrush}" Property="Shape.Fill"/>
        <Setter TargetName="rect2" Value="{StaticResource pathbrush}" Property="Shape.Fill"/>
      </Trigger>
      <DataTrigger Value="False"
                   Binding="{Binding Path=IsActive, RelativeSource={RelativeSource AncestorType={x:Type local:ChromelessWindow}}}">
        <Setter TargetName="rect1" Property="Shape.Fill" Value="#FFB1B1B1"/>
        <Setter TargetName="rect2" Property="Shape.Fill" Value="#FFB1B1B1"/>
      </DataTrigger>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="local:SkinStorage.EnableTouch" Value="false"/>
          <Condition Property="UIElement.IsMouseOver" Value="true"/>
        </MultiTrigger.Conditions>
        <Setter TargetName="rect1" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Fill"/>
        <Setter TargetName="rect2" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Fill"/>
      </MultiTrigger>
      <Trigger Property="ButtonBase.IsPressed" Value="true">
        <Setter TargetName="rect1" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Fill"/>
        <Setter TargetName="rect2" Value="{DynamicResource MetroHoverPathBrush}" Property="Shape.Fill"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <ControlTemplate x:Key="Office2010BlueTitleBarTemplate" TargetType="{x:Type local:TitleBar}">
    <Border Name="border" CornerRadius="0" Background="Transparent">
      <Border BorderBrush="{DynamicResource MetroBorderBrush}" Background="{TemplateBinding Control.Background}"
              BorderThickness="0" Width="Auto" CornerRadius="0">
        <ContentPresenter/>
      </Border>
    </Border>
    <ControlTemplate.Triggers>
      <Trigger Property="local:SkinStorage.EnableTouch" Value="true">
        <Setter TargetName="border" Property="FrameworkElement.Height" Value="40"/>
      </Trigger>
    </ControlTemplate.Triggers>
  </ControlTemplate>
  <Style x:Key="MetroChromelessWindowStyle" TargetType="{x:Type local:ChromelessWindow}">
    <Setter Property="local:ChromelessWindow.ResizeGripStyle" Value="{StaticResource ResizeStyle}"/>
    <Setter Property="local:ChromelessWindow.TitleTextAlignment" Value="Right"/>
    <Setter Property="local:ChromelessWindow.ResizeBorderThickness" Value="2"/>
    <Setter Property="UIElement.SnapsToDevicePixels" Value="false"/>
    <Setter Property="Window.Icon" Value="..\Resources\app.png"/>
    <Setter Property="local:ChromelessWindow.CornerRadius" Value="0"/>
    <Setter Property="local:ChromelessWindow.TitleBarForeground" Value="{DynamicResource MetroForegroundBrush}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource MetroForegroundBrush}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="140"/>
    <Setter Property="FrameworkElement.MinHeight" Value="40"/>
    <Setter Property="FrameworkElement.Margin" Value="25"/>
    <Setter Property="local:ChromelessWindow.TitleBarBackground"
            Value="{StaticResource MetroTitleBarBackground}"/>
    <Setter Property="Control.Background" Value="{DynamicResource MetroPanelBackgroundBrush}"/>
    <Setter Property="local:ChromelessWindow.ResizeBorderBrush" Value="{DynamicResource MetroBorderBrush}"/>
    <Setter Property="local:ChromelessWindow.MinimizeButtonTemplate" Value="{StaticResource MinimizeBlue}"/>
    <Setter Property="local:ChromelessWindow.MaximizeButtonTemplate" Value="{StaticResource MaximizeBlue}"/>
    <Setter Property="local:ChromelessWindow.RestoreButtonTemplate" Value="{StaticResource RestoreBlue}"/>
    <Setter Property="local:ChromelessWindow.CloseButtonTemplate" Value="{StaticResource CloseBlue}"/>
    <Setter Property="local:ChromelessWindow.TitleBarTemplate"
            Value="{StaticResource Office2010BlueTitleBarTemplate}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource MetroForegroundBrush}"/>
    <Setter Property="Control.BorderThickness" Value="0.5"/>
    <Setter Property="Control.Template" Value="{StaticResource SkinTemp}"/>
    <Setter Property="local:ChromelessWindow.IconAlignment" Value="Right"/>
    <Style.Triggers>
      <Trigger Property="Window.SizeToContent" Value="Width">
        <Setter Property="FrameworkElement.MinWidth" Value="190"/>
      </Trigger>
      <Trigger Property="Window.SizeToContent" Value="WidthAndHeight">
        <Setter Property="FrameworkElement.MinWidth" Value="190"/>
      </Trigger>
      <Trigger Property="local:ChromelessWindow.UseNativeChrome" Value="false">
        <Setter Property="Window.WindowStyle" Value="None"/>
      </Trigger>
      <Trigger Property="Window.AllowsTransparency" Value="false">
        <Setter Property="FrameworkElement.Margin" Value="0"/>
      </Trigger>
      <Trigger Property="Window.AllowsTransparency" Value="true">
        <Setter Property="FrameworkElement.Margin" Value="0"/>
      </Trigger>
    </Style.Triggers>
  </Style>
  <Style BasedOn="{StaticResource MetroChromelessWindowStyle}" TargetType="{x:Type local:ChromelessWindow}"/>
</ResourceDictionary>