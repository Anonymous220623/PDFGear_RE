<UserControl x:Class="pdfconverter.Controls.SplitPDFUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:localprop="clr-namespace:pdfconverter.Properties"
             xmlns:local="clr-namespace:pdfconverter.Controls"
             xmlns:localconverter="clr-namespace:pdfconverter.Utils.Converters"
             xmlns:Models="clr-namespace:pdfconverter.Models"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
             Loaded="UserControl_Loaded" TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}"
             Background="{DynamicResource WindowsBackground}">
  <FrameworkElement.Resources>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type local:ButtonEx}">
      <Setter Property="Control.Background" Value="White"/>
      <Setter Property="Control.BorderBrush" Value="Gray"/>
      <Setter Property="Control.Foreground" Value="Black"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type local:ButtonEx}">
            <Border x:Name="border" CornerRadius="{TemplateBinding local:ButtonEx.CornerRadius}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="border"
                        Value="{Binding MouseOverBackground, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="Border.Background"/>
                <Setter TargetName="contentPresenter"
                        Value="{Binding MouseOverForeground, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="TextElement.Foreground"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="border"
                        Value="{Binding MousePressedBackground, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="Border.Background"/>
                <Setter TargetName="contentPresenter"
                        Value="{Binding MousePressedForeground, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="TextElement.Foreground"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="border"
                        Value="{Binding DisabledBackground, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="Border.Background"/>
                <Setter TargetName="border"
                        Value="{Binding DisabledBorderbrush, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="Border.BorderBrush"/>
                <Setter TargetName="contentPresenter"
                        Value="{Binding DisabledForeground, RelativeSource={RelativeSource TemplatedParent}}"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type GridViewColumnHeader}">
      <Setter Property="FrameworkElement.Height" Value="32"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Control.Padding" Value="0,0,0,0"/>
      <Setter Property="FrameworkElement.Margin" Value="-5,0,0,0"/>
      <Setter Property="Control.Background" Value="{DynamicResource MainWindowFootbarBackground}"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Grid>
              <Rectangle Fill="Transparent" IsHitTestVisible="true"/>
              <Border x:Name="HeaderBorder" Padding="{TemplateBinding Control.Padding}"
                      Background="{TemplateBinding Control.Background}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}">
                <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="5,1,5,1"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Border>
              <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,0,0"
                     Style="{StaticResource GridViewColumnHeaderGripper}"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="6,1,6,1"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                <Border Name="HeaderBorder2" BorderThickness="0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}"/>
                <ControlTemplate.Triggers>
                  <Trigger Property="FrameworkElement.Height" Value="Auto">
                    <Setter Property="FrameworkElement.MinHeight" Value="20"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="combox1" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource DefaultComboBoxStyle}">
      <Setter Property="ItemsControl.ItemContainerStyle">
        <Setter.Value>
          <Style TargetType="{x:Type ComboBoxItem}" BasedOn="{StaticResource DefaultComboBoxItemStyle}">
            <Setter Property="FrameworkElement.Height" Value="28"/>
          </Style>
        </Setter.Value>
      </Setter>
    </Style>
    <localconverter:ActionViewVisibilityConverter x:Key="ActionViewVisibilityConverter"/>
    <localconverter:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <Models:SplitStatusToParseFileProgressRingActive x:Key="SplitStatusToParseFileProgressRingActive"/>
    <Models:SplitStatusToPageCountVisibility x:Key="SplitStatusToPageCountVisibility"/>
    <Models:SplitStatusToFileItemEnabled x:Key="SplitStatusToFileItemEnabled"/>
    <Models:SplitStatusToStr x:Key="SplitStatusToStr"/>
    <Models:SplitStatusToOperationBtnVisibility x:Key="SplitStatusToOperationBtnVisibility"/>
    <Models:SplitStatusToOperationSuccBtnVisibility x:Key="SplitStatusToOperationSuccBtnVisibility"/>
    <Models:SplitStatusProgressRingActive x:Key="SplitStatusProgressRingActive"/>
    <Models:SplitStatusImageVisibility x:Key="SplitStatusImageVisibility"/>
    <Models:SplitStatusImage x:Key="SplitStatusImage"/>
    <Models:SplitPDFUIStatusToUIElementEnabled x:Key="SplitPDFUIStatusToUIElementEnabled"/>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="12"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="24"/>
    </Grid.RowDefinitions>
    <Grid Row="1">
      <Grid.RowDefinitions>
        <RowDefinition Height="32"/>
        <RowDefinition Height="12"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="12"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <StackPanel Grid.Row="0" Orientation="Horizontal">
        <Button x:Name="addFilesSplitBtn" Width="Auto" MinWidth="120" Style="{StaticResource DefaultButtonStyle}"
                Background="{DynamicResource MainWindow2ButtonBackground}"
                IsEnabled="{Binding SplitUIStatus, Converter={StaticResource SplitPDFUIStatusToUIElementEnabled}}"
                Command="{Binding AddOneFile}">
          <StackPanel Orientation="Horizontal">
            <Image Width="16" Height="16" Source="{DynamicResource MainWindow2AddFileBtnImage}"/>
            <TextBlock Margin="6,0" FontSize="12" Text="{x:Static localprop:Resources.WinMergeSplitBtnAddFilesContent}"
                       Foreground="{DynamicResource TextBrushWhiteAndBlack}"/>
          </StackPanel>
        </Button>
        <Button x:Name="clearFilesSplitBtn" Width="Auto" MinWidth="120" Margin="24,0,0,0"
                Style="{StaticResource DefaultButtonStyle}"
                Background="{DynamicResource MainWindow2ButtonBackground}" Command="{Binding ClearFiles}"
                IsEnabled="{Binding SplitUIStatus, Converter={StaticResource SplitPDFUIStatusToUIElementEnabled}}">
          <StackPanel Orientation="Horizontal">
            <Image Width="16" Height="16" Source="{DynamicResource MainWindow2ClearBtnImage}"/>
            <TextBlock Margin="5,0,0,0" FontSize="12" Text="{x:Static localprop:Resources.WinMergeSplitBtnClearContent}"
                       Foreground="{DynamicResource TextBrushWhiteAndBlack}"/>
          </StackPanel>
        </Button>
      </StackPanel>
      <local:MListView x:Name="lsvFiles" Drop="lsvFiles_Drop" DragEnter="lsvFiles_DragEnter" Grid.Row="2"
                       Style="{StaticResource ListViewStyle}" AllowDrop="true" BorderThickness="1"
                       BorderBrush="{DynamicResource MainWindow2FileListBorder}" SelectionMode="Single"
                       Background="{DynamicResource MainWindow2FileListBackground}"
                       ItemContainerStyle="{StaticResource ListViewStyleForUC}"
                       TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                       ScrollViewer.HorizontalScrollBarVisibility="Hidden" ItemsSource="{Binding SplitPDFList}"
                       SelectedItem="{Binding SelectedSplitFileItem}">
        <ListView.View>
          <GridView>
            <GridViewColumn Header="{x:Static localprop:Resources.WinMergeSplitGridCloumnFilenameTitle}" Width="200">
              <GridViewColumn.HeaderTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <CheckBox IsThreeState="true" Margin="12,0,0,0" Style="{DynamicResource DefaultCheckBoxStyle}"
                              HorizontalAlignment="Left" VerticalAlignment="Center" HorizontalContentAlignment="Center"
                              IsEnabled="{Binding DataContext.SplitUIStatus, Converter={StaticResource SplitPDFUIStatusToUIElementEnabled}, ElementName=lsvFiles}"
                              IsChecked="{Binding DataContext.IsAllSplitFilesSelected, ElementName=lsvFiles, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock VerticalAlignment="Center" Margin="8,0,0,0" Text="{Binding}"/>
                  </StackPanel>
                </DataTemplate>
              </GridViewColumn.HeaderTemplate>
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="splitFileItemCB" VerticalAlignment="Center" Margin="8,0,0,0"
                              Style="{DynamicResource DefaultCheckBoxStyle}" IsChecked="{Binding IsFileSelected, Mode=TwoWay}"
                              IsEnabled="{Binding Status, Converter={StaticResource SplitStatusToFileItemEnabled}, Mode=OneWay}"
                              Command="{Binding DataContext.UpdateItem, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"/>
                    <TextBlock FontSize="12" VerticalAlignment="Center" TextTrimming="CharacterEllipsis" Margin="8,0,0,0"
                               Text="{Binding FileName}" ToolTip="{Binding FilePath}"/>
                  </StackPanel>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="{x:Static localprop:Resources.WinMergeSplitGridCloumnPagesTitle}" Width="100">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <Grid>
                    <commonLibControl:ProgressRing xmlns:commonLibControl="clr-namespace:CommomLib.Controls;assembly=CommomLib"
                                                   Height="15" Width="15" MinHeight="15" MinWidth="15"
                                                   IsActive="{Binding Status, Converter={StaticResource SplitStatusToParseFileProgressRingActive}, Mode=OneWay}"/>
                    <TextBlock FontSize="12" TextAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Center"
                               Margin="0,0,10,0" Text="{Binding PageCount, Mode=OneWay}"
                               Visibility="{Binding Status, Converter={StaticResource SplitStatusToPageCountVisibility}, Mode=OneWay}"/>
                  </Grid>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="{x:Static localprop:Resources.WinMergeSplitGridCloumnSplitModeTitle}" Width="210">
              <GridViewColumn.HeaderTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Margin="8,0,0,0" Text="{Binding}"/>
                    <Button x:Name="splitModeHelpBtn" Margin="10,0,0,0" BorderThickness="0" Padding="0"
                            Background="Transparent">
                      <ContentControl.Content>
                        <Image Width="16" Height="16" Source="/pdfconverter;component/images/splitmodehelp.png"/>
                      </ContentControl.Content>
                    </Button>
                  </StackPanel>
                </DataTemplate>
              </GridViewColumn.HeaderTemplate>
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="100"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox x:Name="splitmodeCB" Grid.Column="0" Height="28" FontSize="12" Style="{StaticResource combox1}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Center" VerticalContentAlignment="Center"
                              IsTextSearchEnabled="false" IsEditable="false" BorderThickness="0.4" BorderBrush="#EEEEEE"
                              SelectedIndex="{Binding PageSplitMode, Mode=TwoWay}"
                              IsEnabled="{Binding Status, Converter={StaticResource SplitStatusToFileItemEnabled}, Mode=OneWay}">
                      <ComboBoxItem Content="{x:Static localprop:Resources.WinMergeSplitCbxSplitCustomrangeItem}" Height="22"/>
                      <ComboBoxItem Content="{x:Static localprop:Resources.WinMergeSplitCbxSplitFixedrangeItem}" Height="22"/>
                    </ComboBox>
                    <local:PageRangeTextBox Grid.Column="1" Margin="5,0,0,0" VerticalContentAlignment="Center" HorizontalAlignment="Stretch"
                                            BorderThickness="0.4" BorderBrush="#EEEEEE" Text="{Binding PageSplitModeStr, Mode=TwoWay}"
                                            Tag="{Binding PageSplitModePlaceHolder}"
                                            IsEnabled="{Binding Status, Converter={StaticResource SplitStatusToFileItemEnabled}, Mode=OneWay}">
                    </local:PageRangeTextBox>
                  </Grid>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="{x:Static localprop:Resources.WinMergeSplitGridCloumnStatusTitle}" Width="120">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="5,0,0,0">
                    <Grid Height="15" Width="15">
                      <commonLibControl:ProgressRing xmlns:commonLibControl="clr-namespace:CommomLib.Controls;assembly=CommomLib"
                                                     Height="15" Width="15" MinHeight="15" MinWidth="15"
                                                     IsActive="{Binding Status, Converter={StaticResource SplitStatusProgressRingActive}, Mode=OneWay}"/>
                      <Image Height="12" Width="12"
                             Source="{Binding Status, Converter={StaticResource SplitStatusImage}, Mode=OneWay}"
                             Visibility="{Binding Status, Converter={StaticResource SplitStatusImageVisibility}, Mode=OneWay}"/>
                    </Grid>
                    <TextBlock VerticalAlignment="Center" FontSize="12" Margin="8,0,0,0"
                               Text="{Binding Status, Converter={StaticResource SplitStatusToStr}, Mode=OneWay}"/>
                  </StackPanel>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Header="{x:Static localprop:Resources.WinMergeSplitGridCloumnOperationTitle}" Width="85">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <Grid HorizontalAlignment="Right" Width="100" Background="Transparent" MinWidth="85">
                    <FrameworkElement.Resources>
                      <Style TargetType="{x:Type Button}">
                        <Setter Property="FrameworkElement.Width" Value="20"/>
                        <Setter Property="FrameworkElement.Height" Value="20"/>
                        <Setter Property="Control.Background" Value="Transparent"/>
                        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Right"/>
                        <Setter Property="Control.BorderThickness" Value="0"/>
                        <Setter Property="Control.Padding" Value="0"/>
                      </Style>
                    </FrameworkElement.Resources>
                    <Button x:Name="openFileInExplorerSplitBtn" Width="22" Height="22" Padding="0" BorderThickness="0"
                            Margin="0 0 40 0" Background="Transparent" HorizontalAlignment="Right"
                            Command="{Binding DataContext.OpenInExplorer, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}"
                            Visibility="{Binding Status, Converter={StaticResource SuccBtnVisibility}, Mode=OneWay}">
                      <Image Width="18" Height="18" Source="{DynamicResource MainWindow2OpenFolderBtnImage}"/>
                    </Button>
                    <Button x:Name="deleteFileMergeBtn" Margin="0 0 15 0"
                            Command="{Binding DataContext.RemoveFromList, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                            CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}"
                            Visibility="{Binding Status, Converter={StaticResource SplitStatusToOperationBtnVisibility}, Mode=OneWay}">
                      <Image Source="{DynamicResource MainWindow2DeleteBtnImage}"/>
                    </Button>
                  </Grid>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
          </GridView>
        </ListView.View>
      </local:MListView>
      <Grid Row="4">
        <Grid.RowDefinitions>
          <RowDefinition Height="32"/>
          <RowDefinition Height="12"/>
          <RowDefinition Height="32"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto" MinWidth="80"/>
          <ColumnDefinition Width="10"/>
          <ColumnDefinition Width="220"/>
          <ColumnDefinition Width="*" MinWidth="120"/>
          <ColumnDefinition Width="Auto" MinWidth="106"/>
        </Grid.ColumnDefinitions>
        <TextBlock Grid.Row="2" Grid.Column="0" FontSize="12" HorizontalAlignment="Left" VerticalAlignment="Center"
                   TextWrapping="Wrap" Text="{x:Static localprop:Resources.MainWindowOutputPathText}"/>
        <Grid Row="2" Column="2">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="28"/>
          </Grid.ColumnDefinitions>
          <TextBox Grid.Column="0" Background="{DynamicResource MainWindow2Selected}" FontSize="12"
                   Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                   BorderBrush="{DynamicResource MainViewRectangle}" Height="28" VerticalContentAlignment="Center"
                   IsReadOnly="true" Text="{Binding SplitOutputPath, Mode=TwoWay}"
                   ToolTip="{Binding Text, RelativeSource={RelativeSource Mode=Self}}"/>
          <Button x:Name="splitDestPathBtn" Grid.Column="1" Style="{StaticResource DefaultButtonStyle}" Height="28"
                  Foreground="{DynamicResource MainWindow2ListBoxForeground}" Background="Transparent" Content="..."
                  Command="{Binding SelectPath}"/>
        </Grid>
        <CheckBox Grid.Row="2" Grid.Column="3" Style="{DynamicResource DefaultCheckBoxStyle}"
                  HorizontalAlignment="Left" VerticalAlignment="Center" VerticalContentAlignment="Center"
                  Margin="10,0,10,0" IsChecked="{Binding SplitViewFileInExplore, Mode=TwoWay}">
          <TextBlock Margin="0 -20 0 -20" VerticalAlignment="Center" FontSize="12"
                     Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                     Text="{x:Static localprop:Resources.WinMergeSplitSplitCkbViewFileContent}" MaxWidth="250"
                     TextWrapping="Wrap"/>
        </CheckBox>
        <local:ButtonEx x:Name="SplitBtn" Grid.Column="4" Grid.Row="0" Grid.RowSpan="3" Width="160" Height="40"
                        BorderThickness="0" VerticalAlignment="Bottom" Style="{StaticResource ButtonStyle1}"
                        Background="#F3554B" MouseOverBackground="#FFF1665E" MousePressedBackground="#FFE3483F"
                        DisabledBackground="#AAAAAA" Foreground="White" MouseOverForeground="White"
                        MousePressedForeground="White" DisabledForeground="White" FontSize="16" CornerRadius="4"
                        Content="{x:Static localprop:Resources.WinMergeSplitBtnSplitContent}"
                        Command="{Binding BeginSplit}"
                        IsEnabled="{Binding SplitUIStatus, Converter={StaticResource SplitPDFUIStatusToUIElementEnabled}}"/>
      </Grid>
    </Grid>
  </Grid>
</UserControl>