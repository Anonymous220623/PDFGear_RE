<Window x:Class="pdfconverter.FeedbackWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:pdfconverter"
        xmlns:locprop="clr-namespace:pdfconverter.Properties"
        Title="PDFgear" Width="550" Height="580" WindowStartupLocation="CenterScreen"
        FlowDirection="{Binding Source={StaticResource FlowDirectionContext}, Path=FlowDirection}">
  <FrameworkElement.Resources>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#EF5B52"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#F27C75"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFBF4942"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#F7ADA8"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FFFFFFFF"/>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="border" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="border" Value="{StaticResource Button.MouseOver.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.MouseOver.Border}" Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Background}" Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Border}" Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Border}" Property="Border.BorderBrush"/>
                <Setter TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <FrameworkElement.Resources>
      <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
              <Grid>
                <TextBox x:Name="textSource" Background="Transparent" VerticalContentAlignment="Top" Padding="0,5,0,0"
                         Panel.ZIndex="2"
                         Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         TextWrapping="{Binding Path=TextWrapping, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBox Text="{TemplateBinding FrameworkElement.Tag}" Background="{TemplateBinding Control.Background}"
                         Panel.ZIndex="1">
                  <FrameworkElement.Style>
                    <Style TargetType="{x:Type TextBox}">
                      <Setter Property="Control.Foreground" Value="Transparent"/>
                      <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Text, Source={x:Reference textSource}}" Value="">
                          <Setter Property="Control.Foreground" Value="#7E7E7E"/>
                          <Setter Property="TextBox.TextWrapping" Value="Wrap"/>
                          <Setter Property="Control.Padding" Value="0,5,0,0"/>
                          <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
                          <Setter Property="Control.VerticalContentAlignment" Value="Top"/>
                        </DataTrigger>
                      </Style.Triggers>
                    </Style>
                  </FrameworkElement.Style>
                </TextBox>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
    </FrameworkElement.Resources>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="20"/>
    </Grid.ColumnDefinitions>
    <Grid Column="1">
      <Grid.RowDefinitions>
        <RowDefinition Height="20"/>
        <RowDefinition Height="25"/>
        <RowDefinition Height="40"/>
        <RowDefinition Height="32"/>
        <RowDefinition Height="40"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="20"/>
        <RowDefinition Height="32"/>
        <RowDefinition Height="20"/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="1" Text="{x:Static locprop:Resources.FeedbackWindowTitleText}" FontSize="18"
                 FontWeight="Bold" VerticalAlignment="Center"/>
      <TextBlock Grid.Row="2" Text="{x:Static locprop:Resources.FeedbackWindowEmailText}" FontSize="16"
                 VerticalAlignment="Bottom" Margin="0,0,0,5" Foreground="#596891"/>
      <TextBox x:Name="txtEmail" Grid.Row="3" Style="{StaticResource placeHolder}" Text="" Background="#FFFFFF"
               Foreground="#000000" FontSize="14" VerticalContentAlignment="Center"
               Tag="{x:Static locprop:Resources.FeedbackWindowEmailTagText}"/>
      <TextBlock Grid.Row="4" Text="{x:Static locprop:Resources.FeedbackWindowDetailText}" FontSize="16"
                 VerticalAlignment="Bottom" Margin="0,0,0,5" Foreground="#596891"/>
      <TextBox TextChanged="TxtContent_TextChanged" x:Name="txtContent" Grid.Row="5"
               Style="{StaticResource placeHolder}" Text="" Background="#FFFFFF" Foreground="#000000"
               FontSize="14" TextWrapping="Wrap" AcceptsReturn="true" TextAlignment="Left"
               Tag="{x:Static locprop:Resources.FeedbackWindowDetailTagText}"/>
      <StackPanel x:Name="sendSampleGrid" Orientation="Vertical" Grid.Row="6" Visibility="Collapsed">
        <StackPanel Orientation="Horizontal">
          <CheckBox x:Name="sendSampleCB" Margin="0,10,0,0"
                    Content="{x:Static locprop:Resources.FeedbackWindowAttachFileText}" Foreground="#000000"
                    FontSize="14"/>
          <commonLibControl:HyperlinkButton xmlns:commonLibControl="clr-namespace:CommomLib.Controls;assembly=CommomLib"
                                            Content="{x:Static locprop:Resources.FeedbackWindowPolicyText}"
                                            NavigateUri="https://www.pdfgear.com/privacy/" FontSize="14" VerticalAlignment="Bottom"
                                            Margin="5,0,0,0" Cursor="Hand"/>
        </StackPanel>
        <TextBox x:Name="filesTB" BorderThickness="0" Margin="18,8,0,0" MaxHeight="40" FontSize="14"
                 TextWrapping="Wrap" IsReadOnly="true" Text=""/>
      </StackPanel>
      <Grid Row="8">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="88"/>
          <ColumnDefinition Width="12"/>
          <ColumnDefinition Width="88"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Button Click="SendBtn_Click" x:Name="sendBtn" Grid.Column="1" Width="88" Height="32"
                Style="{StaticResource ButtonStyle1}" Foreground="#FFFFFF"
                Content="{x:Static locprop:Resources.FeedbackWindowSendBtnContent}" IsEnabled="false"
                BorderThickness="0">
          <FrameworkElement.Resources>
            <Style TargetType="{x:Type Border}">
              <Setter Property="Border.CornerRadius" Value="4"/>
            </Style>
          </FrameworkElement.Resources>
        </Button>
        <Button Click="CloseBtn_Click" x:Name="closeBtn" Grid.Column="3" Width="88" Height="32"
                Background="#F3F4F7" Foreground="#596891"
                Content="{x:Static locprop:Resources.FeedbackWindowCloseBtnContent}" BorderThickness="0">
          <FrameworkElement.Resources>
            <Style TargetType="{x:Type Border}">
              <Setter Property="Border.CornerRadius" Value="4"/>
            </Style>
          </FrameworkElement.Resources>
        </Button>
      </Grid>
    </Grid>
    <commonLibControl:ProgressRing xmlns:commonLibControl="clr-namespace:CommomLib.Controls;assembly=CommomLib"
                                   x:Name="sendingProgessBar" Grid.Column="1" Height="50" Width="50" MinHeight="50" MinWidth="50"
                                   IsActive="false"/>
  </Grid>
</Window>