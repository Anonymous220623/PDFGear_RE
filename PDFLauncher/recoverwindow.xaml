<Window x:Class="PDFLauncher.RecoverWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PDFLauncher"
        xmlns:localprop="clr-namespace:PDFLauncher.Properties"
        xmlns:ViewModels="clr-namespace:PDFLauncher.ViewModels"
        xmlns:Models="clr-namespace:PDFLauncher.Models"
        xmlns:control="clr-namespace:PDFLauncher.CustomControl"
        Loaded="Window_Loaded" WindowStartupLocation="CenterScreen" ResizeMode="NoResize"
        Background="{DynamicResource WindowsBackground}" Title="PDFgear" Height="495" Width="730">
  <FrameworkElement.Resources>
    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
      <Setter Property="Canvas.Right" Value="0"/>
      <Setter Property="FrameworkElement.Width" Value="5"/>
      <Setter Property="FrameworkElement.Height"
              Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}"/>
      <Setter Property="Control.Padding" Value="0"/>
      <Setter Property="Control.Background" Value="{DynamicResource ListViewBackground}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Thumb}">
            <Border Padding="{TemplateBinding Control.Padding}" Background="{DynamicResource ListViewBackground2}">
              <Rectangle HorizontalAlignment="Left" Width="1" Fill="{TemplateBinding Control.Background}"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style TargetType="{x:Type GridViewColumnHeader}">
      <Setter Property="FrameworkElement.Height" Value="32"/>
      <Setter Property="Control.Background" Value="{DynamicResource RecoverWindowGridViewBackground}"/>
      <Setter Property="FrameworkElement.Margin" Value="0,0,0,0"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
      <Setter Property="Control.Padding" Value="6,0,0,0"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Grid>
              <Rectangle Fill="Transparent" IsHitTestVisible="true"/>
              <Border x:Name="HeaderBorder" Padding="{TemplateBinding Control.Padding}"
                      Background="{TemplateBinding Control.Background}"
                      BorderThickness="{TemplateBinding Control.BorderThickness}"
                      BorderBrush="{TemplateBinding Control.BorderBrush}">
                <ContentPresenter x:Name="HeaderContent" Content="{TemplateBinding ContentControl.Content}"
                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" Margin="5,1,5,1"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
              </Border>
              <Thumb x:Name="PART_HeaderGripper" HorizontalAlignment="Right" Margin="0,0,0,0"
                     Style="{StaticResource GridViewColumnHeaderGripper}"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="HeaderContent" Property="FrameworkElement.Margin" Value="6,1,6,1"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{DynamicResource {x:Static JetSystemColors.GrayTextBrushKey}}" Property="Control.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
      <Style.Triggers>
        <Trigger Property="GridViewColumnHeader.Role" Value="Padding">
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                <Border Name="HeaderBorder2" BorderThickness="0" BorderBrush="{TemplateBinding Control.BorderBrush}"
                        Background="{TemplateBinding Control.Background}"/>
                <ControlTemplate.Triggers>
                  <Trigger Property="FrameworkElement.Height" Value="Auto">
                    <Setter Property="FrameworkElement.MinHeight" Value="20"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Trigger>
      </Style.Triggers>
    </Style>
    <Style x:Key="ListViewStyleForUC" TargetType="{x:Type ListViewItem}">
      <Style.Setters>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="false"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="FrameworkElement.Height" Value="40"/>
        <Setter Property="Control.Padding" Value="0"/>
        <Setter Property="FrameworkElement.Margin" Value="0"/>
        <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
        <Setter Property="Control.BorderThickness" Value="0"/>
        <Setter Property="Control.Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListViewItem}">
              <Grid>
                <Border x:Name="bd" Background="{DynamicResource ListViewBackground2}" BorderThickness="0"
                        Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="true">
                  <GridViewRowPresenter HorizontalAlignment="Stretch"/>
                </Border>
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="ListBoxItem.IsSelected" Value="true">
                  <Trigger.Setters>
                    <Setter TargetName="bd" Value="{DynamicResource ListViewIsSelected}" Property="Border.Background"/>
                  </Trigger.Setters>
                </Trigger>
                <MultiTrigger>
                  <MultiTrigger.Conditions>
                    <Condition Property="UIElement.IsMouseOver" Value="true"/>
                    <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                  </MultiTrigger.Conditions>
                  <Setter TargetName="bd" Value="{DynamicResource ListViewMouseOver}" Property="Border.Background"/>
                </MultiTrigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style.Setters>
    </Style>
    <Models:RecoverStatusToStr x:Key="RecoverStatusToStr"/>
    <Models:RecoverStatusImage x:Key="RecoverStatusImage"/>
    <Models:RecoverToOperationBtnVisibility x:Key="RecoverToOperationBtnVisibility"/>
    <Models:DiscardEnable x:Key="DiscardEnable"/>
    <Models:RecoverBtnEnable x:Key="RecoverBtnEnable"/>
    <Models:RecoverCheckEnable x:Key="RecoverCheckEnable"/>
  </FrameworkElement.Resources>
  <FrameworkElement.DataContext>
    <ViewModels:RecoverViewModel/>
  </FrameworkElement.DataContext>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="20"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="20"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="20"/>
      <RowDefinition Height="*"/>
      <RowDefinition Height="20"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="20"/>
    </Grid.RowDefinitions>
    <TextBlock Text="{x:Static localprop:Resources.WInMainDatailLableText}" FontSize="12"
               Foreground="{DynamicResource TextBrushWhiteAndBlack}" Grid.Row="1" Grid.Column="1"
               TextWrapping="Wrap"/>
    <ListView SelectionChanged="RecoverView_SelectionChanged" x:Name="RecoverView" Grid.Row="3" Grid.Column="1"
              BorderThickness="1" BorderBrush="{DynamicResource MainSideBarBackground}" SelectionMode="Single"
              Background="{DynamicResource MainViewListItemSeleted}" ItemsSource="{Binding RecoverFileList}"
              SelectedItem="{Binding SelectedRecoverFileItem}">
      <ItemsControl.ItemContainerStyle>
        <Style TargetType="{x:Type ListViewItem}">
          <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
          <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
          <Setter Property="FrameworkElement.Height" Value="32"/>
          <Setter Property="Control.BorderThickness" Value="0,0.5,0,0.5"/>
          <Setter Property="FrameworkElement.Margin" Value="0"/>
          <Setter Property="Control.BorderBrush" Value="{DynamicResource MainSideBarBackground}"/>
          <Setter Property="Control.Background" Value="{DynamicResource MainViewListItemSeleted}"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type ListViewItem}">
                <Grid>
                  <Border x:Name="bd" Background="{DynamicResource ListViewBackground2}" BorderThickness="0"
                          Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="true">
                    <GridViewRowPresenter HorizontalAlignment="Stretch"/>
                  </Border>
                </Grid>
                <ControlTemplate.Triggers>
                  <Trigger Property="ListBoxItem.IsSelected" Value="true">
                    <Trigger.Setters>
                      <Setter TargetName="bd" Value="{DynamicResource ListViewIsSelected}" Property="Border.Background"/>
                    </Trigger.Setters>
                  </Trigger>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="UIElement.IsMouseOver" Value="true"/>
                      <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter TargetName="bd" Value="{DynamicResource ListViewMouseOver}" Property="Border.Background"/>
                  </MultiTrigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </ItemsControl.ItemContainerStyle>
      <ListView.View>
        <GridView>
          <GridViewColumn Header="{x:Static localprop:Resources.WInMainListViewFileNameText}" Width="240">
            <GridViewColumn.HeaderTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <CheckBox x:Name="selectAllCB" IsThreeState="true" Margin="8,0,0,0"
                            Style="{StaticResource DefaultCheckBoxStyle}" HorizontalAlignment="Left" VerticalAlignment="Center"
                            HorizontalContentAlignment="Center"
                            IsChecked="{Binding DataContext.IsAllRecoverFileSelected, ElementName=RecoverView}"/>
                  <TextBlock FontSize="12" VerticalAlignment="Center" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                             Margin="8,0,0,0" Text="{Binding}"/>
                </StackPanel>
              </DataTemplate>
            </GridViewColumn.HeaderTemplate>
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <CheckBox x:Name="recoverFileItemCB" Style="{StaticResource DefaultCheckBoxStyle}" VerticalAlignment="Center"
                            Margin="8,0,0,0" IsChecked="{Binding IsFileSelected, Mode=TwoWay}"
                            IsEnabled="{Binding Status, Converter={StaticResource RecoverCheckEnable}}"/>
                  <TextBlock FontSize="12" VerticalAlignment="Center" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                             TextTrimming="CharacterEllipsis" Margin="8,0,0,0" Text="{Binding FileName}"
                             ToolTip="{Binding DisplayName}"/>
                </StackPanel>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="{x:Static localprop:Resources.WInMainListViewLastSavedText}" Width="160">
            <GridViewColumn.HeaderTemplate>
              <DataTemplate>
                <TextBlock FontSize="12" Margin="10,0,0,0" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                           Text="{Binding}"/>
              </DataTemplate>
            </GridViewColumn.HeaderTemplate>
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <Grid>
                  <TextBlock FontSize="12" TextAlignment="Center" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                             HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,10,0"
                             Text="{Binding LastTime, Mode=OneWay}"/>
                </Grid>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="{x:Static localprop:Resources.WInMainListViewStatusText}" Width="140">
            <GridViewColumn.HeaderTemplate>
              <DataTemplate>
                <TextBlock FontSize="12" Margin="10,0,0,0" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                           Text="{Binding}"/>
              </DataTemplate>
            </GridViewColumn.HeaderTemplate>
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <Image Height="12" Width="12"
                         Source="{Binding Status, Converter={StaticResource RecoverStatusImage}, Mode=OneWay}"/>
                  <TextBlock FontSize="12" VerticalAlignment="Center" Margin="8,0,0,0"
                             Text="{Binding Status, Converter={StaticResource RecoverStatusToStr}, Mode=OneWay}"/>
                </StackPanel>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
          <GridViewColumn Header="{x:Static localprop:Resources.WInMainListViewActionText}" Width="120">
            <GridViewColumn.HeaderTemplate>
              <DataTemplate>
                <TextBlock FontSize="12" Margin="10,0,0,0" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                           Text="{Binding}"/>
              </DataTemplate>
            </GridViewColumn.HeaderTemplate>
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Margin="0,0,0,0">
                  <Button x:Name="openFileBtn" Width="20" Height="20" Margin="0,0,10,0" BorderThickness="0"
                          Background="Transparent" Tag="{Binding RecoverFullFileName}"
                          Visibility="{Binding Status, Converter={StaticResource RecoverToOperationBtnVisibility}, Mode=OneWay}">
                    <Image Width="18" Height="18" Source="/PDFLauncher;component/images/openFile.png"/>
                  </Button>
                  <Button x:Name="openDirBtn" Width="20" Height="20" Margin="0,0,10,0" BorderThickness="0"
                          Background="Transparent" Tag="{Binding RecoverFullFileName}"
                          Visibility="{Binding Status, Converter={StaticResource RecoverToOperationBtnVisibility}, Mode=OneWay}">
                    <Image Width="18" Height="18" Source="/PDFLauncher;component/images/openDir.png"/>
                  </Button>
                </StackPanel>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
        </GridView>
      </ListView.View>
    </ListView>
    <Grid Row="5" Column="1">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="20"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBlock Text="{x:Static localprop:Resources.WInMainOutputLabelText}"
                 Background="{DynamicResource SolidBrushWhiteAndBlack}"
                 Foreground="{DynamicResource TextBrushWhiteAndBlack}" FontSize="12" VerticalAlignment="Center"
                 Grid.Column="0"/>
      <control:SaveFolderTextBox x:Name="LocationTextBox" Width="260" Margin="12,0,0,0" Height="32" Grid.Column="1" FontSize="12"
                                 Padding="1,2" VerticalContentAlignment="Center" HorizontalAlignment="Left"
                                 Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                                 Background="{DynamicResource SolidBrushWhiteAndBlack}" VerticalAlignment="Center"
                                 Text="{Binding ReoverOutputPath, Mode=TwoWay}"/>
      <control:ButtonEx x:Name="startBtn" Click="StartBtn_Click" Grid.Column="2" MinWidth="130" Height="40"
                        BorderThickness="0" CornerRadius="4" Padding="6,0,6,0" HorizontalAlignment="Stretch"
                        Background="#2CBE6F" MouseOverBackground="#56CB8C" MousePressedBackground="#239859"
                        DisabledBackground="#C4C4C4" Foreground="#FFFFFF" MouseOverForeground="#FFFFFF"
                        MousePressedForeground="#FFFFFF" DisabledForeground="#33000000" FontSize="16"
                        Content="{x:Static localprop:Resources.WInMainStartRecoverBtnText}">
        <UIElement.IsEnabled>
          <MultiBinding Converter="{StaticResource RecoverBtnEnable}">
            <Binding Path="Text" ElementName="LocationTextBox"/>
            <Binding Path="SelectedRecoveringCount"/>
          </MultiBinding>
        </UIElement.IsEnabled>
      </control:ButtonEx>
      <control:ButtonEx x:Name="discardBtn" Click="DiscardBtn_Click" HorizontalAlignment="Stretch" Grid.Column="4"
                        MinWidth="130" Height="40" BorderThickness="1" CornerRadius="4" Padding="6,0,6,0"
                        Background="#FFFFFF" DisabledBackground="#C4C4C4" MouseOverBackground="#F5F5F5"
                        MousePressedBackground="#D2D2D2" Foreground="#343434" DisabledForeground="#33000000" FontSize="16"
                        IsEnabled="{Binding Path=SelectedRecoveringCount, Converter={StaticResource DiscardEnable}, Mode=OneWay}">
        <ContentControl.Content>
          <StackPanel Orientation="Horizontal">
            <Image Source="/PDFLauncher;component/images/discard.png" Width="20" Height="20"
                   IsEnabled="{Binding Path=SelectedRecoveringCount, Converter={StaticResource DiscardEnable}, Mode=OneWay}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Image}">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled" Value="true">
                      <Setter Property="UIElement.Opacity" Value="1"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="false">
                      <Setter Property="UIElement.Opacity" Value="0.2"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </Image>
            <TextBlock Text="{x:Static localprop:Resources.WInDisCardConfirmDiscardBtn}" VerticalAlignment="Center"
                       Margin="10,0,0,0"
                       IsEnabled="{Binding Path=SelectedRecoveringCount, Converter={StaticResource DiscardEnable}, Mode=OneWay}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type TextBlock}">
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsEnabled" Value="false">
                      <Setter Property="TextBlock.Foreground" Value="#33000000"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsEnabled" Value="true">
                      <Setter Property="TextBlock.Foreground" Value="#343434"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </TextBlock>
          </StackPanel>
        </ContentControl.Content>
      </control:ButtonEx>
    </Grid>
  </Grid>
</Window>