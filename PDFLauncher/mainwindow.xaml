<Window x:Class="PDFLauncher.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PDFLauncher"
        xmlns:localprop="clr-namespace:PDFLauncher.Properties"
        xmlns:cus="clr-namespace:PDFLauncher.CustomControl"
        xmlns:localconverter="clr-namespace:PDFLauncher.Convert"
        xmlns:utils="clr-namespace:PDFLauncher.Utils"
        xmlns:viewmodels="clr-namespace:PDFLauncher.ViewModels"
        Closing="Window_Closing" Drop="Window_Drop" Name="PDFLauncher" Title="PDFgear" Height="600"
        Width="1000" MinWidth="1000" MinHeight="550" AllowDrop="true" WindowStartupLocation="CenterScreen">
  <FrameworkElement.Resources>
    <Style x:Key="FocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="2" SnapsToDevicePixels="true"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       StrokeDashArray="1 2"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="menu1" TargetType="{x:Type MenuItem}">
      <Setter Property="FrameworkElement.MinWidth" Value="180"/>
      <Setter Property="FrameworkElement.Height" Value="32"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type MenuItem}">
            <Grid Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}"
                  HorizontalAlignment="Stretch" Background="{DynamicResource SolidBrushWhiteAndBlack}">
              <Border x:Name="bd" Background="{DynamicResource SolidBrushWhiteAndBlack}"
                      BorderBrush="{DynamicResource MainViewRectangle}" BorderThickness="0 0 0 0"/>
              <Image x:Name="_imgicon" Visibility="Visible" Width="20" Height="20" HorizontalAlignment="Left"
                     VerticalAlignment="Center" Margin="9 0 0 0"
                     Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBlock x:Name="tb" Foreground="{DynamicResource TextBrushWhiteAndBlack}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" FontSize="12" Margin="36 0 5 0"
                         Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Path x:Name="_path" Visibility="Collapsed" HorizontalAlignment="Right" Margin="5 13 5 0"
                    Data="M 0,0 L 3,2.5 0,5 Z" Fill="Black"/>
              <Popup x:Name="SubMenuPopup" Placement="Right" AllowsTransparency="true" Focusable="false"
                     IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                  <Border Name="SubmenuBorder" Background="Transparent" BorderBrush="LightGray" BorderThickness="1"
                          SnapsToDevicePixels="true">
                    <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </Border>
                </ScrollViewer>
              </Popup>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ItemsControl.HasItems" Value="true">
                <Setter TargetName="_path" Property="UIElement.Visibility" Value="Visible"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="bd" Value="{DynamicResource GridViewColumnIsSelected}" Property="Control.Background"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="menu2" TargetType="{x:Type MenuItem}">
      <Setter Property="FrameworkElement.MinWidth" Value="180"/>
      <Setter Property="FrameworkElement.Height" Value="28"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type MenuItem}">
            <Grid Height="{TemplateBinding FrameworkElement.Height}" Width="{TemplateBinding FrameworkElement.Width}"
                  HorizontalAlignment="Stretch" Background="{DynamicResource SolidBrushWhiteAndBlack}">
              <Border x:Name="bd" Background="{DynamicResource SolidBrushWhiteAndBlack}"
                      BorderBrush="{DynamicResource MainViewRectangle}" BorderThickness="0 0 0 0"/>
              <Image x:Name="_imgicon" Visibility="Visible" Width="16" Height="16" HorizontalAlignment="Left"
                     VerticalAlignment="Center" Margin="10 0 6 0"
                     Source="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}}"/>
              <TextBlock x:Name="tb" FontSize="12" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                         VerticalAlignment="Center" HorizontalAlignment="Left" Margin="36 0 5 0"
                         Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
              <Path x:Name="_path" Visibility="Collapsed" HorizontalAlignment="Right" Margin="5 13 5 0"
                    Data="M 0,0 L 3,2.5 0,5 Z" Fill="Black"/>
              <Popup x:Name="SubMenuPopup" Placement="Right" AllowsTransparency="true" Focusable="false"
                     IsOpen="{TemplateBinding MenuItem.IsSubmenuOpen}">
                <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
                  <Border Name="SubmenuBorder" Background="Transparent" BorderBrush="LightGray" BorderThickness="1"
                          SnapsToDevicePixels="true">
                    <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                  </Border>
                </ScrollViewer>
              </Popup>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Value="{x:Null}" Property="MenuItem.Icon">
                <Setter TargetName="_imgicon" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="tb" Property="FrameworkElement.Margin" Value="10 0 0 0"/>
              </Trigger>
              <Trigger Property="ItemsControl.HasItems" Value="true">
                <Setter TargetName="_path" Property="UIElement.Visibility" Value="Visible"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="bd" Value="{DynamicResource GridViewColumnIsSelected}" Property="Control.Background"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="LauncherListViewStyle" TargetType="{x:Type ListView}">
      <Setter Property="ListBox.SelectionMode" Value="Single"/>
      <Setter Property="FrameworkElement.Height" Value="50"/>
      <Setter Property="Control.BorderThickness" Value="0"/>
      <Setter Property="Control.Background" Value="{DynamicResource MainViewGrid2Background}"/>
    </Style>
    <Style TargetType="{x:Type GridViewColumnHeader}">
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
      <Setter Property="FrameworkElement.Height" Value="46"/>
      <Setter Property="Control.Padding" Value="0"/>
      <Setter Property="Control.Background" Value="{DynamicResource MainViewGrid2Background}"/>
      <Setter Property="Control.FontSize" Value="12"/>
      <Setter Property="Control.Foreground" Value="{DynamicResource MainViewTextForeground}"/>
      <Setter Property="Control.BorderThickness" Value="0"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Grid Name="g" Background="{DynamicResource MainViewGrid2Background}">
              <Border Name="bd" Padding="{TemplateBinding Control.Padding}">
                <ContentPresenter VerticalAlignment="Center"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"/>
              </Border>
              <Rectangle Width="900" Fill="{DynamicResource MainViewRectangle}" Height="1" VerticalAlignment="Bottom"/>
              <Rectangle Width="900" Fill="{DynamicResource MainViewRectangle}" Height="1" VerticalAlignment="Top"/>
            </Grid>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="ContentxMenuStyle" TargetType="{x:Type ContextMenu}">
      <Setter Property="UIElement.SnapsToDevicePixels" Value="true"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="true"/>
      <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
      <Setter Property="UIElement.Focusable" Value="false"/>
      <Setter Property="ContextMenu.HasDropShadow" Value="true"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ContextMenu}">
            <Border Name="Border" Background="{DynamicResource SolidBrushWhiteAndBlack}"
                    BorderBrush="{DynamicResource MainViewRectangle}" BorderThickness="1">
              <StackPanel IsItemsHost="true" KeyboardNavigation.DirectionalNavigation="Cycle"/>
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="LauncherCheckBoxStyle" TargetType="{x:Type CheckBox}">
      <Setter Property="FrameworkElement.Width" Value="14"/>
      <Setter Property="FrameworkElement.Height" Value="14"/>
      <Setter Property="Control.Background" Value="{DynamicResource MainViewUnCheckBcakground}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type CheckBox}">
            <Grid>
              <Border x:Name="bd" BorderBrush="{DynamicResource MainViewCheckBorderBrush}" CornerRadius="1"
                      BorderThickness="1" Background="{DynamicResource MainViewCheckBcakground}"/>
              <Path x:Name="p1" Data="M 0,3 L 3,6 9,0 " VerticalAlignment="Center" HorizontalAlignment="Center"
                    Stroke="White" StrokeThickness="1.5" Margin="0.5 1 0 0"/>
              <Path x:Name="p2" Data="M 0,0 L 0,8 8,8 8,0 Z" Fill="{DynamicResource MainViewUnCheckBcakground}"
                    VerticalAlignment="Center" HorizontalAlignment="Center"
                    Stroke="{DynamicResource MainViewUnCheckBcakground}" StrokeThickness="1.5" Margin="0 1 0 0"/>
              <Path x:Name="p3" Data="M 0,0 L 8,0 " VerticalAlignment="Center" HorizontalAlignment="Center"
                    Stroke="White" StrokeThickness="1.5" Margin="0 1 0 0"/>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter TargetName="p1" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="p2" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="p3" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="bd" Value="{DynamicResource MainViewCheckBcakground}" Property="Border.Background"/>
                <Setter TargetName="bd" Property="Border.BorderThickness" Value="0"/>
              </Trigger>
              <Trigger Property="ToggleButton.IsChecked" Value="False">
                <Setter TargetName="bd" Value="{DynamicResource MainViewUnCheckBcakground}" Property="Border.Background"/>
                <Setter TargetName="p1" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="p2" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="p3" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="bd" Property="Border.BorderThickness" Value="1"/>
              </Trigger>
              <Trigger Value="{x:Null}" Property="ToggleButton.IsChecked">
                <Setter TargetName="bd" Value="{DynamicResource MainViewCheckBcakground}" Property="Border.Background"/>
                <Setter TargetName="p1" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="p2" Property="UIElement.Visibility" Value="Hidden"/>
                <Setter TargetName="p3" Property="UIElement.Visibility" Value="Visible"/>
                <Setter TargetName="bd" Property="Border.BorderThickness" Value="0"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="menuSeparator" TargetType="{x:Type Separator}">
      <Setter Property="FrameworkElement.Margin" Value="3,0"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Separator}">
            <Border Height="1" BorderThickness="1" BorderBrush="{DynamicResource MainViewRectangle}"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <localconverter:ListViewBackgroundConverter x:Key="ListViewBackgroundConverter"/>
    <SolidColorBrush x:Key="Button.Static.Background" Color="#FC0D1B"/>
    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFF27C75"/>
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFCA393B"/>
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
      <Setter Property="Control.Background" Value="{StaticResource Button.Static.Background}"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource Button.Static.Border}"/>
      <Setter Property="Control.Foreground"
              Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="Button.IsDefaulted" Value="true">
                <Setter TargetName="border" Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"
                        Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="border" Value="{StaticResource Button.MouseOver.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.MouseOver.Border}" Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Background}" Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.Pressed.Border}" Property="Border.BorderBrush"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Background}"
                        Property="Border.Background"/>
                <Setter TargetName="border" Value="{StaticResource Button.Disabled.Border}" Property="Border.BorderBrush"/>
                <Setter TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="NewButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="1"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border x:Name="border" CornerRadius="15" BorderBrush="{TemplateBinding Control.BorderBrush}"
                    BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}" SnapsToDevicePixels="true">
              <ContentPresenter x:Name="contentPresenter" Focusable="false"
                                HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter TargetName="border" Value="{DynamicResource MainViewNewPDFMouseOver}" Property="Border.Background"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter TargetName="border" Value="{DynamicResource MainViewNewPDFSelected}" Property="Border.Background"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="WrappingStyle" TargetType="{x:Type TextBlock}">
      <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
    </Style>
  </FrameworkElement.Resources>
  <Grid Background="{DynamicResource SolidBrushWhiteAndBlack}">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="2.1*"/>
      <ColumnDefinition Width="7.7*"/>
    </Grid.ColumnDefinitions>
    <Grid Background="{DynamicResource MainSideBarBackground}">
      <Grid.RowDefinitions>
        <RowDefinition Height="80"/>
        <RowDefinition Height="60"/>
        <RowDefinition Height="40"/>
        <RowDefinition Height="45"/>
        <RowDefinition Height="32"/>
        <RowDefinition Height="32"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="40"/>
      </Grid.RowDefinitions>
      <Button Click="supportfeed_Click" x:Name="supportfeed" Grid.Row="0" Background="Transparent"
              VerticalAlignment="Top" HorizontalAlignment="Right" BorderThickness="0" Margin="0,8,10,0">
        <TextBlock Text="{x:Static localprop:Resources.WinSupportBtn}" VerticalAlignment="Bottom"
                   HorizontalAlignment="Center" Foreground="#298FEE" TextDecorations="Underline"/>
      </Button>
      <Image Source="images/openimage.png" Grid.Row="1"/>
      <Button x:Name="openFileBtn1" Grid.Row="2" Width="148" Height="32" Margin="0 3 0 0" Background="#FC0D1B"
              Foreground="White" BorderThickness="0" FontSize="12"
              Content="{x:Static localprop:Resources.WinBtnOpenFileContent}"
              Style="{DynamicResource ButtonStyle1}" Command="{Binding OpenOneFileCMD}"/>
      <Button x:Name="NewFileBtn" Grid.Row="3" Width="148" Height="32" Margin="0 3 0 0"
              Background="{DynamicResource DialogButtonStaticBackground}"
              Foreground="{DynamicResource TextBrushWhiteAndBlack}" BorderThickness="0" FontSize="12"
              Content="{x:Static localprop:Resources.MainViewCreateNewPDF}" Visibility="Visible"
              Style="{DynamicResource NewButtonStyle}" Command="{Binding CreateFileCMD}"/>
      <Button x:Name="FineFileBtn" Grid.Row="4" Width="148" Height="32" Margin="0 3 0 0" Background="White"
              Foreground="Black" BorderThickness="0" FontSize="12" Content="Find a PDF" Visibility="Collapsed"
              Style="{DynamicResource ButtonStyle1}"/>
      <Button Click="ScanDocument_Click" x:Name="ScanDocument" Grid.Row="4" Background="Transparent"
              VerticalAlignment="Bottom" HorizontalAlignment="Center" BorderThickness="0">
        <TextBlock Text="{x:Static localprop:Resources.WinBtnScanDocument}" VerticalAlignment="Bottom"
                   HorizontalAlignment="Center" Foreground="#298FEE" TextDecorations="Underline"/>
      </Button>
      <Grid Row="7">
        <TextBlock x:Name="Version" Text="" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                   HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10 0 0 0"/>
        <Button Background="Transparent" VerticalAlignment="Center" HorizontalAlignment="Right" BorderThickness="0"
                Margin="0 0 17 0">
          <TextBlock MouseLeftButtonDown="TextBlock_MouseLeftButtonDown"
                     Text="{x:Static localprop:Resources.WinCheckUpdateBtn}" MaxWidth="120" TextWrapping="Wrap"
                     VerticalAlignment="Bottom" HorizontalAlignment="Center" Foreground="#298FEE"
                     TextDecorations="Underline"/>
        </Button>
      </Grid>
    </Grid>
    <Grid Column="1" Background="{DynamicResource WindowsBackground}">
      <Grid.RowDefinitions>
        <RowDefinition Height="2"/>
        <RowDefinition Height="200"/>
        <RowDefinition Height="225*"/>
        <RowDefinition Height="1"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="2"/>
        <ColumnDefinition MinWidth="760" Width="*"/>
        <ColumnDefinition Width="20"/>
      </Grid.ColumnDefinitions>
      <Border x:Name="topDecorateBorder" Visibility="Collapsed" Background="#FD7474" Grid.ColumnSpan="3"/>
      <Grid x:Name="openFileGrid" Visibility="Collapsed" RowSpan="2" VerticalAlignment="Top" ColumnSpan="3">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition Width="680"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBlock x:Name="tbVersionNum" FontSize="12" HorizontalAlignment="Left" Grid.ColumnSpan="2"
                   VerticalAlignment="Top" Foreground="White" Margin="20 12 0 0" Visibility="Collapsed">V 3.4.1</TextBlock>
        <TextBlock x:Name="tbSupport" FontSize="12" HorizontalAlignment="Right" VerticalAlignment="Top"
                   Foreground="White" Margin="20 12 0 0" Grid.Column="1">Support</TextBlock>
        <Border x:Name="OpenFileBorder" Grid.Column="1" CornerRadius="4" Margin="0 12 0 0" Height="145"
                BorderThickness="1" BorderBrush="{DynamicResource MainViewRectangle}" Background="White">
          <Grid>
            <Border MouseDown="Image_MouseDown" x:Name="OpenFileBgBord" Margin="12 10">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Border}">
                  <Setter Property="Border.Background" Value="#FAFAFA"/>
                  <Setter Property="Border.BorderBrush" Value="#D2D2D2"/>
                  <Setter Property="Border.BorderThickness" Value="1"/>
                  <Setter Property="Border.CornerRadius" Value="4"/>
                  <Style.Triggers>
                    <Trigger Property="UIElement.IsMouseOver" Value="true">
                      <Setter Property="Border.Background" Value="#F0F0F0F0"/>
                    </Trigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
              <StackPanel>
                <Image x:Name="openFileImg" Source="images/addFile.png" Width="48" Height="48" VerticalAlignment="Top"
                       Margin="0 10 0 0"/>
                <Button x:Name="openFileBtn" Width="148" Height="32" Margin="0 3 0 0" Background="#EF5B52"
                        Foreground="White" BorderThickness="0" FontSize="12"
                        Content="{x:Static localprop:Resources.WinBtnOpenFileContent}"
                        Style="{DynamicResource ButtonStyle1}" Command="{Binding OpenOneFileCMD}"/>
                <TextBlock x:Name="tbSupportType" FontSize="10" Margin="0 10 0 0" HorizontalAlignment="Center"
                           VerticalAlignment="Center" Text="{x:Static localprop:Resources.WinSupportLabelContent}"/>
              </StackPanel>
            </Border>
            <Grid x:Name="OpenButtonTipsGrid" Visibility="{Binding OpenBtnTipsVisibility}">
              <FrameworkElement.Resources>
                <Storyboard x:Key="OpenButtonTipsAnimation" BeginTime="0:0:0.5">
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OpenButtonTipsGridTrans" Storyboard.TargetProperty="ScaleX"
                                                 Duration="0:0:0.5">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.2">
                      <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                      </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                      <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                      </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                  </DoubleAnimationUsingKeyFrames>
                  <DoubleAnimationUsingKeyFrames Storyboard.TargetName="OpenButtonTipsGridTrans" Storyboard.TargetProperty="ScaleY"
                                                 Duration="0:0:0.5">
                    <EasingDoubleKeyFrame KeyTime="0:0:0.25" Value="1.2">
                      <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseOut"/>
                      </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                    <EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="1">
                      <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                      </EasingDoubleKeyFrame.EasingFunction>
                    </EasingDoubleKeyFrame>
                  </DoubleAnimationUsingKeyFrames>
                </Storyboard>
              </FrameworkElement.Resources>
              <Canvas>
                <Border x:Name="OpenButtonTips">
                  <Border x:Name="OpenButtonTipsContent" MaxWidth="280" MinWidth="200" Background="#4D4D4D"
                          HorizontalAlignment="Left" VerticalAlignment="Top" CornerRadius="2" Margin="11,0,0,0"
                          RenderTransformOrigin="0,0.5">
                    <UIElement.RenderTransform>
                      <ScaleTransform x:Name="OpenButtonTipsGridTrans" ScaleX="0" ScaleY="0"/>
                    </UIElement.RenderTransform>
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="10"/>
                      </Grid.RowDefinitions>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="10"/>
                      </Grid.ColumnDefinitions>
                      <Rectangle Width="24" Height="24" RadiusX="2" RadiusY="2" Grid.ColumnSpan="10" Grid.RowSpan="10"
                                 Margin="-4,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"
                                 RenderTransformOrigin="0.5,0.5" Fill="{Binding ElementName=OpenButtonTipsContent, Path=Background}">
                        <UIElement.RenderTransform>
                          <RotateTransform Angle="45"/>
                        </UIElement.RenderTransform>
                      </Rectangle>
                      <Grid Row="1" Column="1">
                        <Grid.RowDefinitions>
                          <RowDefinition Height="Auto"/>
                          <RowDefinition Height="2"/>
                          <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"
                                   Background="Transparent" TextWrapping="Wrap"
                                   Text="{x:Static localprop:Resources.WinBtnOpenFileTipsDesc1}"/>
                        <TextBlock Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="White"
                                   TextWrapping="Wrap" Text="{x:Static localprop:Resources.WinBtnOpenFileTipsDesc2}"/>
                      </Grid>
                      <Button Click="openFileTipsCloseBtn_Click" x:Name="openFileTipsCloseBtn" Grid.Row="1" Grid.Column="3"
                              HorizontalAlignment="Center" VerticalAlignment="Center" Background="Transparent"
                              BorderThickness="0" Padding="0" FontFamily="Segoe MDL2 Assets" FontSize="14" FontWeight="Bold"
                              Foreground="White" Content=""/>
                    </Grid>
                  </Border>
                </Border>
              </Canvas>
            </Grid>
          </Grid>
        </Border>
      </Grid>
      <ListBox SelectionChanged="lstBoxMenu_SelectionChanged" Name="lstBoxMenu" Grid.Column="1"
               Grid.ColumnSpan="3" ScrollViewer.VerticalScrollBarVisibility="Disabled"
               ScrollViewer.HorizontalScrollBarVisibility="Disabled" Height="52" MaxWidth="780" Grid.Row="1"
               HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="0" Background="Transparent"
               Margin="0 2 0 0" SelectedIndex="0" ItemsSource="{Binding Menu}">
        <FrameworkElement.Resources>
          <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Control.FontSize" Value="13"/>
            <Setter Property="Control.BorderThickness" Value="0"/>
            <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
            <Setter Property="FrameworkElement.Margin" Value="0 0 10 0"/>
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                  <Grid x:Name="templateRoot" MinHeight="28" MaxHeight="35" Background="Transparent" MinWidth="120"
                        HorizontalAlignment="Center" SnapsToDevicePixels="true">
                    <ContentPresenter x:Name="contentPresenter" MaxWidth="160" Focusable="false" HorizontalAlignment="Center"
                                      Margin="{TemplateBinding Control.Padding}" RecognizesAccessKey="true"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}">
                      <FrameworkElement.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource WrappingStyle}"/>
                      </FrameworkElement.Resources>
                    </ContentPresenter>
                    <Border x:Name="bd" Width="45" Height="2" VerticalAlignment="Bottom" Margin="3 0 0 1" Background="#EF5B52"/>
                  </Grid>
                  <ControlTemplate.Triggers>
                    <Trigger Property="ListBoxItem.IsSelected" Value="true">
                      <Setter TargetName="bd" Property="UIElement.Visibility" Value="Visible"/>
                      <Setter Property="Control.Foreground" Value="Red"/>
                    </Trigger>
                    <Trigger Property="ListBoxItem.IsSelected" Value="false">
                      <Setter TargetName="bd" Property="UIElement.Visibility" Value="Hidden"/>
                      <Setter Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Control.Foreground"/>
                    </Trigger>
                    <Trigger Property="UIElement.IsMouseOver" Value="true">
                      <Setter TargetName="templateRoot" Property="Panel.Background" Value="#10000000"/>
                    </Trigger>
                  </ControlTemplate.Triggers>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
        </FrameworkElement.Resources>
        <ItemsControl.ItemsPanel>
          <ItemsPanelTemplate>
            <StackPanel Orientation="Horizontal" IsItemsHost="true"/>
          </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
      </ListBox>
      <Rectangle Grid.Row="1" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Stretch"
                 StrokeThickness="1" Width="auto" Height="1" Stroke="{DynamicResource MainViewRectangle}"
                 Margin="30 50 10 0"/>
      <Grid x:Name="recommendGrid" Row="1" Column="1" VerticalAlignment="Top" HorizontalAlignment="Left"
            Height="210" Margin="30 60 0 0">
        <StackPanel Name="stpHotTools" Height="140" VerticalAlignment="Top">
          <StackPanel x:Name="stpHotTools0" Height="64" Orientation="Horizontal">
            <cus:LabelButton x:Name="lbtnHotToolPDF2Word" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\PDFtoword.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoWordText}" Command="{Binding PdftoWord}"/>
            <cus:LabelButton x:Name="lbtnHotToolPDF2Excel" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Visibility="Collapsed"
                             Icon="images\icon\pdftoexcel.png" Text="{x:Static localprop:Resources.WinFastBtnPDFtoExcelText}"
                             Command="{Binding PdftoExcel}"/>
            <cus:LabelButton x:Name="lbtnHotToolPDF2Png" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\pdftopng.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoPngText}" Command="{Binding PdftoPng}"/>
            <cus:LabelButton x:Name="lbtnHotToolPDFCompress" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\Compress.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFCompressText}" Command="{Binding CompressPDF}"/>
            <cus:LabelButton x:Name="lbtnHotToolMergePDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\merge.png"
                             Text="{x:Static localprop:Resources.WinFastBtnMergePDF}" Command="{Binding MergePDF}"/>
          </StackPanel>
          <StackPanel x:Name="stpHotTools1" Height="64" Orientation="Horizontal" Margin="0 12 0 0">
            <cus:LabelButton x:Name="lbtnHotToolConvertWordToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\wordtopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnWordToPDFText}" Command="{Binding WordtoPDF}"/>
            <cus:LabelButton x:Name="lbtnHotToolConvertImageToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\imagetopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnImageToPDFText}" Command="{Binding IMGtoPDF}"/>
            <cus:LabelButton x:Name="lbtnHotToolFillForm" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\form.png"
                             Text="{x:Static localprop:Resources.WinFastBtnFillFormContent}" Command="{Binding FillFormCMD}"/>
            <cus:LabelButton x:Name="lbtnHotToolSplitPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\split.png"
                             Text="{x:Static localprop:Resources.WinFastBtnSplitPDF}" Command="{Binding SplitPDF}"/>
          </StackPanel>
        </StackPanel>
        <StackPanel Name="stpConvert" Height="140" Visibility="Hidden" VerticalAlignment="Top">
          <StackPanel x:Name="stpConvert0" Height="64" Orientation="Horizontal">
            <cus:LabelButton x:Name="lbtnConvertPDF2Word" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\PDFtoword.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoWordText}" Command="{Binding PdftoWord}"/>
            <cus:LabelButton x:Name="lbtnConvertPDF2Excel" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\pdftoexcel.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoExcelText}" Command="{Binding PdftoExcel}"/>
            <cus:LabelButton x:Name="lbtnConvertPDF2Png" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\pdftopng.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoPngText}" Command="{Binding PdftoPng}"/>
            <cus:LabelButton x:Name="lbtnConvertPDF2JPG" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\pdftojpg.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoJpegText}" Command="{Binding PdftoJPG}"/>
          </StackPanel>
          <StackPanel x:Name="stpConvert1" Height="64" Orientation="Horizontal" Margin="0 12 0 0">
            <cus:LabelButton x:Name="lbtnConvertPDF2Txt" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\pdftotxt.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoTextText}" Command="{Binding PdftoTxt}"/>
            <cus:LabelButton x:Name="lbtnConvertPDF2PPT" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\PDFTPPPT.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoPPTText}" Command="{Binding PdftoPPT}"/>
            <cus:LabelButton x:Name="lbtnConvertPDF2XML" Background="{DynamicResource MainViewGrid2Background}"
                             Icon="images\icon\pdftoxml.png" Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoXMLText}" Command="{Binding PdftoXML}"/>
            <cus:LabelButton x:Name="lbtnConvertPDF2RTF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\pdftortf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPDFtoRTFText}" Command="{Binding PdftoRtf}"/>
          </StackPanel>
        </StackPanel>
        <StackPanel Name="stpConToPDF" Height="140" Visibility="Hidden" VerticalAlignment="Top">
          <StackPanel x:Name="stpConToPDF0" Height="64" Orientation="Horizontal">
            <cus:LabelButton x:Name="lbtnConvertWordToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\wordtopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnWordToPDFText}" Command="{Binding WordtoPDF}"/>
            <cus:LabelButton x:Name="lbtnConvertExcelToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\exceltopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnExcelToPDFText}" Command="{Binding ExceltoPDF}"/>
            <cus:LabelButton x:Name="lbtnConvertPPT" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\ppttopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnPPTToPDFText}" Command="{Binding PPTtoPDF}"/>
            <cus:LabelButton x:Name="lbtnConvertImgToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\imagetopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnImageToPDFText}" Command="{Binding IMGtoPDF}"/>
          </StackPanel>
          <StackPanel x:Name="stpConToPDF1" Height="64" Orientation="Horizontal" Margin="0 12 0 0">
            <cus:LabelButton x:Name="lbtnConvertRTFToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\rtftopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnRTFToPDFText}" Command="{Binding RTFtoPDF}"/>
            <cus:LabelButton x:Name="lbtnConvertTXTToPDF" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\txttopdf.png"
                             Text="{x:Static localprop:Resources.WinFastBtnTXTToPDFText}" Command="{Binding TXTtoPDF}"/>
          </StackPanel>
        </StackPanel>
        <StackPanel Name="stpMergeSplit" Height="140" Visibility="Hidden" VerticalAlignment="Top">
          <StackPanel x:Name="stpMergeSplit0" Height="64" Orientation="Horizontal">
            <cus:LabelButton x:Name="lbtnMergeSplit_Merge" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\merge.png"
                             Text="{x:Static localprop:Resources.WinFastBtnMergePDF}" Command="{Binding MergePDF}"/>
            <cus:LabelButton x:Name="lbtnMergeSplit_Split" Background="{DynamicResource MainViewGrid2Background}"
                             Foreground="{DynamicResource TextBrushWhiteAndBlack}" Icon="images\icon\split.png"
                             Text="{x:Static localprop:Resources.WinFastBtnSplitPDF}" Command="{Binding SplitPDF}"/>
          </StackPanel>
        </StackPanel>
        <StackPanel Name="stpAllTools" Height="140" Visibility="Hidden" VerticalAlignment="Top"
                    Background="Transparent">
          <ScrollViewer Height="124" VerticalScrollBarVisibility="Auto">
            <WrapPanel>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2Word" Style="{StaticResource little}" Icon="images\PDFtoWord.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoWordText}" Command="{Binding PdftoWord}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2Excel" Style="{StaticResource little}" Icon="images\PDFtoEXCEL.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoExcelText}" Command="{Binding PdftoExcel}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2PNG" Style="{StaticResource little}" Icon="images\PDFtopng.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoPngText}" Command="{Binding PdftoPng}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2JPG" Style="{StaticResource little}" Icon="images\PDFtojpg.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoJpegText}" Command="{Binding PdftoJPG}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2PPT" Style="{StaticResource little}" Icon="images\PDFtoPPT.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoPPTText}" Command="{Binding PdftoPPT}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2Txt" Style="{StaticResource little}" Icon="images\PDFtoTXT.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoTextText}" Command="{Binding PdftoTxt}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2WebPages" Style="{StaticResource little}" Icon="images\PDFtowebpages.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoWebText}" Command="{Binding PdftoWeb}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2XML" Style="{StaticResource little}" Icon="images\PDFtoXML.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoXMLText}" Command="{Binding PdftoXML}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PDF2RTF" Style="{StaticResource little}" Icon="images\PDFtoRTF.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFtoRTFText}" Command="{Binding PdftoRtf}"/>
              <cus:LabelButton x:Name="LbtnAllTool_Word2PDF" Style="{StaticResource little}" Icon="images\WordtoPDF32.png"
                               Text="{x:Static localprop:Resources.WinFastBtnWordToPDFText}" Command="{Binding WordtoPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_Excel2PDF" Style="{StaticResource little}" Icon="images\ExceltoPDF32.png"
                               Text="{x:Static localprop:Resources.WinFastBtnExcelToPDFText}" Command="{Binding ExceltoPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_PPT2PDF" Style="{StaticResource little}" Icon="images\PPTtoPDF32.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPPTToPDFText}" Command="{Binding PPTtoPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_Image2PDF" Style="{StaticResource little}" Icon="images\ImagetoPDF32.png"
                               Text="{x:Static localprop:Resources.WinFastBtnImageToPDFText}" Command="{Binding IMGtoPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_RTF2PDF" Style="{StaticResource little}" Icon="images\RTFtoPDF32.png"
                               Text="{x:Static localprop:Resources.WinFastBtnRTFToPDFText}" Command="{Binding RTFtoPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_TXT2PDF" Style="{StaticResource little}" Icon="images\TXTToPDF32.png"
                               Text="{x:Static localprop:Resources.WinFastBtnTXTToPDFText}" Command="{Binding TXTtoPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_Compress" Style="{StaticResource little}" Icon="images\Compress.png"
                               Text="{x:Static localprop:Resources.WinFastBtnPDFCompressText}" Command="{Binding CompressPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_Merge" Style="{StaticResource little}" Icon="images\Merge.png"
                               Text="{x:Static localprop:Resources.WinFastBtnMergePDF}" Command="{Binding MergePDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_Split" Style="{StaticResource little}" Icon="images\Split.png"
                               Text="{x:Static localprop:Resources.WinFastBtnSplitPDF}" Command="{Binding SplitPDF}"/>
              <cus:LabelButton x:Name="LbtnAllTool_FillForm" Style="{StaticResource little}" Icon="images\FillForm.png"
                               Text="{x:Static localprop:Resources.WinFastBtnFillFormContent}" Command="{Binding FillFormCMD}"/>
            </WrapPanel>
          </ScrollViewer>
        </StackPanel>
      </Grid>
      <Border Grid.ColumnSpan="3" Grid.Row="2" Background="{DynamicResource MainViewGrid2Background}"
              VerticalAlignment="Stretch" Margin="30 0 0 0" HorizontalAlignment="Stretch"/>
      <Grid x:Name="historyGrid" Row="2" Column="1" VerticalAlignment="Stretch"
            Background="{DynamicResource MainViewGrid2Background}" HorizontalAlignment="Left" Margin="30 0 0 0">
        <Grid.RowDefinitions>
          <RowDefinition Height="46"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="10"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="756"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <ListView xmlns:commonControls="clr-namespace:CommomLib.Controls;assembly=CommomLib"
                  x:Name="lsvOpenHistory" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Stretch"
                  Background="{DynamicResource MainViewGrid2Background}"
                  Style="{StaticResource LauncherListViewStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"
                  ScrollViewer.HorizontalScrollBarVisibility="Hidden" VirtualizingPanel.ScrollUnit="Pixel"
                  commonControls:ScrollBarHelper.IndicatorMode="Expanded"
                  Height="{Binding ElementName=historyGrid, Path=Height}"
                  ItemsSource="{Binding HistoryModels, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
          <FrameworkElement.Resources>
            <ResourceDictionary/>
          </FrameworkElement.Resources>
          <ItemsControl.ItemContainerStyle>
            <Style TargetType="{x:Type ListViewItem}">
              <Style.Setters>
                <Setter Property="UIElement.SnapsToDevicePixels" Value="false"/>
                <Setter Property="FrameworkElement.Height" Value="48"/>
                <Setter Property="Control.Padding" Value="0"/>
                <Setter Property="FrameworkElement.Margin" Value="0"/>
                <Setter Property="Control.FontSize" Value="12"/>
                <Setter Property="Control.Foreground" Value="{DynamicResource MainViewTextForeground}"/>
                <Setter Property="Control.BorderThickness" Value="0"/>
                <Setter Property="Control.Background" Value="{DynamicResource MainViewGrid2Background}"/>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                      <Grid>
                        <Border x:Name="bd" Background="{DynamicResource MainViewGrid2Background}" BorderThickness="0"
                                Height="{TemplateBinding FrameworkElement.Height}" SnapsToDevicePixels="true">
                          <GridViewRowPresenter HorizontalAlignment="Stretch"/>
                        </Border>
                        <Rectangle Margin="0 0 0 0" Width="{TemplateBinding FrameworkElement.Width}"
                                   Fill="{DynamicResource MainViewRectangle}" Height="1" VerticalAlignment="Bottom"/>
                      </Grid>
                      <ControlTemplate.Triggers>
                        <Trigger Property="ListBoxItem.IsSelected" Value="true">
                          <Trigger.Setters>
                            <Setter TargetName="bd" Value="{DynamicResource GridViewColumnIsSelected}" Property="Border.Background"/>
                          </Trigger.Setters>
                        </Trigger>
                        <MultiTrigger>
                          <MultiTrigger.Conditions>
                            <Condition Property="UIElement.IsMouseOver" Value="true"/>
                            <Condition Property="ListBoxItem.IsSelected" Value="false"/>
                          </MultiTrigger.Conditions>
                          <Setter TargetName="bd" Value="{DynamicResource GridViewColumnIsSelected}" Property="Border.Background"/>
                        </MultiTrigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style.Setters>
            </Style>
          </ItemsControl.ItemContainerStyle>
          <ListView.View>
            <GridView x:Name="gView">
              <GridViewColumn Width="30">
                <GridViewColumn.HeaderTemplate>
                  <DataTemplate>
                    <CheckBox x:Name="fileItemListCBCB" IsThreeState="false" VerticalAlignment="Center"
                              Style="{StaticResource LauncherCheckBoxStyle}" Margin="5,0,0,0"
                              IsChecked="{Binding DataContext.IsAllFileSelect, ElementName=lsvOpenHistory, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                  </DataTemplate>
                </GridViewColumn.HeaderTemplate>
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <CheckBox x:Name="fileItemCB" VerticalAlignment="Center" Margin="0,0,0,0"
                              Style="{StaticResource LauncherCheckBoxStyle}" IsChecked="{Binding Path=IsSelect, Mode=TwoWay}"/>
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
              <GridViewColumn Header="{x:Static localprop:Resources.WinHisLabelFileName}" Width="280">
                <GridViewColumn.HeaderTemplate>
                  <DataTemplate>
                    <TextBlock FontSize="12" Margin="10,0,0,0" Foreground="{DynamicResource GridViewColumnName}" Text="{Binding}"/>
                  </DataTemplate>
                </GridViewColumn.HeaderTemplate>
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                      <StackPanel Margin="0 0 0 0">
                        <TextBlock x:Name="tbFileName" FontSize="12" TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource TextBrushWhiteAndBlack}" Text="{Binding FileName}"
                                   ToolTip="{Binding FileName}"/>
                        <TextBlock x:Name="tbFilePath" FontSize="12" TextTrimming="CharacterEllipsis"
                                   Foreground="{DynamicResource MainViewTextForeground}" Margin="0 4 0 0" Text="{Binding FilePath}"
                                   ToolTip="{Binding FilePath}"/>
                      </StackPanel>
                    </StackPanel>
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
              <GridViewColumn Header="{x:Static localprop:Resources.WinHisHeaderOpenDate}" Width="180"
                              DisplayMemberBinding="{Binding FileLastOpen}"/>
              <GridViewColumn Header="{x:Static localprop:Resources.WinFileSize}" Width="100"
                              DisplayMemberBinding="{Binding FileSize}"/>
              <GridViewColumn Header="{x:Static localprop:Resources.WinHisHeadeFileAction}" Width="100">
                <GridViewColumn.CellTemplate>
                  <DataTemplate>
                    <Grid x:Name="btnAction" Width="69" VerticalAlignment="Stretch" HorizontalAlignment="Left">
                      <Button Height="15" Width="16" HorizontalAlignment="Left" Margin="10 0 0 0"
                              Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType={x:Type ListView}}}"
                              utils:UIElementExtension.ExtendContextMenuDataContext="{Binding RelativeSource={RelativeSource Mode=Self}, Path=ContextMenu}">
                        <FrameworkElement.Triggers>
                          <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                              <Storyboard>
                                <BooleanAnimationUsingKeyFrames Storyboard.TargetName="ButtonContextMenu" Storyboard.TargetProperty="IsOpen" Duration="0">
                                  <DiscreteBooleanKeyFrame KeyTime="0" Value="true"/>
                                </BooleanAnimationUsingKeyFrames>
                              </Storyboard>
                            </BeginStoryboard>
                          </EventTrigger>
                        </FrameworkElement.Triggers>
                        <FrameworkElement.Style>
                          <Style TargetType="{x:Type Button}">
                            <Setter Property="FrameworkElement.Height" Value="15"/>
                            <Setter Property="FrameworkElement.Width" Value="15"/>
                            <Setter Property="Control.Template">
                              <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                  <StackPanel Orientation="Horizontal" Background="#01FFFFFF" Height="{TemplateBinding FrameworkElement.Height}"
                                              Width="{TemplateBinding FrameworkElement.Width}">
                                    <Ellipse Name="e1" Height="3" Width="3" Fill="{DynamicResource MainViewFileActionBtn}"/>
                                    <Ellipse Name="e2" Height="3" Width="3" Fill="{DynamicResource MainViewFileActionBtn}" Margin="3 0"/>
                                    <Ellipse Name="e3" Height="3" Width="3" Fill="{DynamicResource MainViewFileActionBtn}"/>
                                  </StackPanel>
                                  <ControlTemplate.Triggers>
                                    <Trigger Property="UIElement.IsMouseOver" Value="true">
                                      <Setter TargetName="e1" Value="{DynamicResource MainViewFileActionSelectedBtn}" Property="Shape.Fill"/>
                                      <Setter TargetName="e2" Value="{DynamicResource MainViewFileActionSelectedBtn}" Property="Shape.Fill"/>
                                      <Setter TargetName="e3" Value="{DynamicResource MainViewFileActionSelectedBtn}" Property="Shape.Fill"/>
                                    </Trigger>
                                  </ControlTemplate.Triggers>
                                </ControlTemplate>
                              </Setter.Value>
                            </Setter>
                          </Style>
                        </FrameworkElement.Style>
                        <FrameworkElement.ContextMenu>
                          <ContextMenu x:Name="ButtonContextMenu" Style="{StaticResource ContentxMenuStyle}"
                                       PlacementTarget="{Binding Path=.}">
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemPDFTo}" Style="{StaticResource menu2}"
                                      Icon="{DynamicResource MainViewMenuConvertSource}"
                                      Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}">
                              <MenuItem Header="Word" Icon="/PDFLauncher;component/images/pdftoword.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoWord}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="Excel" Icon="/PDFLauncher;component/images/pdftoexcel.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoExcel}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="PNG" Icon="/PDFLauncher;component/images/pdftopng.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoPng}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="JPEG" Icon="/PDFLauncher;component/images/pdftojpg.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoJPG}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="PPT" Icon="/PDFLauncher;component/images/pdftoPPT.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoPPT}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="TXT" Icon="/PDFLauncher;component/images/pdftotxt.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoTxt}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="{x:Static localprop:Resources.WinBtnWebpages}"
                                        Icon="/PDFLauncher;component/images/pdftowebpages.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoWeb}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="XML" Icon="/PDFLauncher;component/images/pdftoxml.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoXML}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                              <MenuItem Header="RTF" Icon="/PDFLauncher;component/images/pdftortf.png" Style="{StaticResource menu2}"
                                        Command="{Binding Tag.PdftoRtf}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            </MenuItem>
                            <MenuItem Header="{x:Static localprop:Resources.WinContextMenuItemCompress}"
                                      Icon="{DynamicResource MainViewContextCompressSource}" Style="{StaticResource menu2}"
                                      Command="{Binding Tag.CompressPDF}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemToPDF}" Icon="/images/menupdfto.png"
                                      Style="{StaticResource menu2}" Command="{Binding Tag.ConvtoPDF}"
                                      Visibility="{Binding Tag.OtherContextVisibility, Mode=OneWay}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemMerge}"
                                      Icon="{DynamicResource MainViewMenuMergeSource}" Style="{StaticResource menu2}"
                                      Command="{Binding Tag.MergePDF}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemSplit}"
                                      Icon="{DynamicResource MainViewMenuSplitSource}" Style="{StaticResource menu2}"
                                      Command="{Binding Tag.SplitPDF}" Visibility="{Binding Tag.PDFContextVisibility, Mode=OneWay}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            <Separator Style="{StaticResource menuSeparator}"/>
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemOpen}"
                                      Icon="{DynamicResource MainViewMenuOpenSource}" Style="{StaticResource menu2}"
                                      Command="{Binding Tag.RunEditor}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemView}"
                                      Icon="{DynamicResource MainViewMenuFolderSource}" Style="{StaticResource menu2}"
                                      Command="{Binding Tag.OpenFolder}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                            <MenuItem Header="{x:Static localprop:Resources.WinHisContextMenuItemRemove}"
                                      Icon="{DynamicResource MainViewMenuRemoveSource}" Style="{StaticResource menu2}"
                                      Command="{Binding Tag.RemoveOne}"
                                      CommandParameter="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=DataContext}"/>
                          </ContextMenu>
                        </FrameworkElement.ContextMenu>
                      </Button>
                    </Grid>
                  </DataTemplate>
                </GridViewColumn.CellTemplate>
              </GridViewColumn>
            </GridView>
          </ListView.View>
        </ListView>
        <StackPanel Orientation="Horizontal" MinWidth="50" Grid.Column="1">
          <TextBlock Text="{x:Static localprop:Resources.WinHisLabelRecentlbl}"
                     Foreground="{DynamicResource TextBrushWhiteAndBlack}" Grid.Column="1" FontSize="12"
                     VerticalAlignment="Center" Margin="2 0 0 0"/>
          <Button Grid.Column="1" Margin="5 0 0 0" Height="17" HorizontalAlignment="Left"
                  Command="{Binding ClearSelectModel}">
            <Control.Template>
              <ControlTemplate TargetType="{x:Type Button}">
                <StackPanel x:Name="std" Orientation="Horizontal">
                  <Image x:Name="img_clear" HorizontalAlignment="Left" Width="16" Height="16"
                         Source="{DynamicResource MainViewClearSource}" Stretch="Fill"/>
                  <TextBlock x:Name="tb_clear" Foreground="{DynamicResource GridViewColumnName}" FontSize="12" Margin="4 0 0 0"
                             VerticalAlignment="Center" Text="{x:Static localprop:Resources.WinLauncherHistoryClearlbl}"/>
                </StackPanel>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsMouseOver" Value="true">
                    <Setter TargetName="tb_clear" Property="TextBlock.Foreground" Value="#D17272"/>
                  </Trigger>
                  <Trigger Property="UIElement.IsEnabled" Value="false">
                    <Setter TargetName="std" Property="UIElement.Opacity" Value="0.5"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Control.Template>
          </Button>
        </StackPanel>
        <cus:SwitchButton x:Name="AllToolsSwitch" Click="AllToolsSwitch_Click" Grid.Column="1" Margin="0 0 50 0"
                          HorizontalAlignment="Right" VerticalAlignment="Center" Icon="images/alltools.png"
                          Content="{x:Static localprop:Resources.WinHisContextMulFileFastTools}"
                          Style="{StaticResource SwitchButtonStyle}"
                          Visibility="{Binding AllToolsSwitchIsVisile, Mode=OneWay}"
                          IsChecked="{Binding AllToolsSwitchIsChecked, Mode=TwoWay}">
          <FrameworkElement.ContextMenu>
            <ContextMenu Closed="ContextMenu_Closed" Style="{StaticResource ContentxMenuStyle}"
                         IsOpen="{Binding AllToolsSwitchIsChecked, Mode=OneWay}">
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftoword.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoWordText}" Command="{Binding PdftoWord}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftoexcel.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoExcelText}" Command="{Binding PdftoExcel}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftopng.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoPngText}" Command="{Binding PdftoPng}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftojpg.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoJpegText}" Command="{Binding PdftoJPG}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftoPPT.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoPPTText}" Command="{Binding PdftoPPT}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftotxt.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoTextText}" Command="{Binding PdftoTxt}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftowebpages.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoWebText}" Command="{Binding PdftoWeb}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftoxml.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoXMLText}" Command="{Binding PdftoXML}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/pdftortf.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFtoRTFText}" Command="{Binding PdftoRtf}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/Compress.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPDFCompressText}" Command="{Binding CompressPDF}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/merge.png"
                        Header="{x:Static localprop:Resources.WinFastBtnMergePDF}" Command="{Binding MergePDF}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/split.png"
                        Header="{x:Static localprop:Resources.WinFastBtnSplitPDF}" Command="{Binding SplitPDF}"
                        Visibility="{Binding PDFMenuItemVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/WordtoPDF32.png"
                        Header="{x:Static localprop:Resources.WinFastBtnWordToPDFText}" Command="{Binding WordtoPDF}"
                        Visibility="{Binding DocContextVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/ExceltoPDF32.png"
                        Header="{x:Static localprop:Resources.WinFastBtnExcelToPDFText}" Command="{Binding ExceltoPDF}"
                        Visibility="{Binding XlsContextVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/PPTtoPDF32.png"
                        Header="{x:Static localprop:Resources.WinFastBtnPPTToPDFText}" Command="{Binding PPTtoPDF}"
                        Visibility="{Binding PPTContextVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/ImagetoPDF32.png"
                        Header="{x:Static localprop:Resources.WinFastBtnImageToPDFText}" Command="{Binding IMGtoPDF}"
                        Visibility="{Binding ImgContextVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/RTFtoPDF32.png"
                        Header="{x:Static localprop:Resources.WinFastBtnRTFToPDFText}" Command="{Binding RTFtoPDF}"
                        Visibility="{Binding RTFContextVisibility, Mode=OneWay}"/>
              <MenuItem Style="{StaticResource menu1}" Icon="/PDFLauncher;component/images/TXTtoPDF32.png"
                        Header="{x:Static localprop:Resources.WinFastBtnTXTToPDFText}" Command="{Binding TXTtoPDF}"
                        Visibility="{Binding TXTContextVisibility, Mode=OneWay}"/>
            </ContextMenu>
          </FrameworkElement.ContextMenu>
        </cus:SwitchButton>
      </Grid>
    </Grid>
  </Grid>
</Window>