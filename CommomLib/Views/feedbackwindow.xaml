<Window x:Class="CommomLib.Views.FeedbackWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:CommomLib.Views"
        xmlns:localprop="clr-namespace:CommomLib.Properties"
        xmlns:commonLibCommon="clr-namespace:CommomLib.Commom"
        xmlns:commonLibControl="clr-namespace:CommomLib.Controls"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        Loaded="Window_Loaded" Title="PDFgear" Background="{DynamicResource WindowsBackground}"
        TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}" Height="580" Width="850"
        ResizeMode="NoResize">
  <FrameworkElement.Resources>
    <SolidColorBrush x:Key="PrimaryDialogButton.Static.Background" Color="#EF5B52"/>
    <SolidColorBrush x:Key="PrimaryDialogButton.Static.Border" Color="#FFEF5B52"/>
    <SolidColorBrush x:Key="PrimaryDialogButton.Static.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialogButton.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialogButton.Static.Border" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="DialogButton.Static.Foreground" Color="#FF000000"/>
    <SolidColorBrush x:Key="DialogButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="DialogButton.Disabled.Border" Color="#FF838383"/>
    <SolidColorBrush x:Key="DialogButton.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="DialogButtonFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="-1" SnapsToDevicePixels="false"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       RadiusX="2" RadiusY="2" Opacity="0.6"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="DialogButtonStyle" TargetType="{x:Type ButtonBase}">
      <Setter Property="Control.Background" Value="#298FEE"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource DialogButton.Static.Border}"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="8"/>
      <Setter Property="FrameworkElement.MinWidth" Value="80"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource DialogButtonFocusVisual}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
              <Grid>
                <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#298FEE"
                           Opacity="0" SnapsToDevicePixels="false"/>
                <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="UIElement.Opacity" Value="0.84"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="UIElement.Opacity" Value="0.82"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{StaticResource DialogButton.Disabled.Background}" TargetName="border"
                        Property="Border.Background"/>
                <Setter Value="{StaticResource DialogButton.Disabled.Border}" TargetName="border"
                        Property="Border.BorderBrush"/>
                <Setter Value="{StaticResource DialogButton.Disabled.Foreground}" TargetName="contentPresenter"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="placeHolder" TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
      <Setter Property="FrameworkElement.Tag" Value="{x:Static sys:String.Empty}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type TextBox}">
            <Grid>
              <TextBox x:Name="textSource" Style="{StaticResource DefaultTextBoxStyle}" VerticalContentAlignment="Top"
                       Padding="0,5,0,0" Panel.ZIndex="0"
                       Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       TextWrapping="{Binding Path=TextWrapping, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
              <TextBox x:Name="placeHolderTextBox" Text="{TemplateBinding FrameworkElement.Tag}"
                       Foreground="{DynamicResource WatermarkEditWinPlaceHoder}"
                       Background="{DynamicResource DialogButtonStaticBackground}"
                       BorderBrush="{DynamicResource MainViewFontSizeBorder}" Padding="0,5,0,0"
                       HorizontalContentAlignment="Left" VerticalContentAlignment="Top" Visibility="Collapsed"
                       IsHitTestVisible="false" IsReadOnly="true" IsTabStop="false" Panel.ZIndex="1"
                       TextWrapping="{Binding Path=TextWrapping, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
              </TextBox>
            </Grid>
            <ControlTemplate.Triggers>
              <Trigger Property="TextBox.Text" Value="">
                <Setter TargetName="placeHolderTextBox" Property="UIElement.Visibility" Value="Visible"/>
              </Trigger>
              <Trigger Property="UIElement.IsKeyboardFocusWithin" Value="true">
                <Setter TargetName="placeHolderTextBox" Property="UIElement.Opacity" Value="0.4"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="0"/>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="20"/>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="20"/>
    </Grid.ColumnDefinitions>
    <Grid x:Name="FaqContainer" Column="1" Width="320" Margin="20,0,0,0">
      <Grid.RowDefinitions>
        <RowDefinition Height="40"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="12" Text="FAQ"/>
      <Grid Row="1">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="55"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBox Grid.Row="0" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                 TextWrapping="Wrap" Background="Transparent" BorderThickness="0" IsReadOnly="true"
                 Foreground="{DynamicResource TextBrushWhiteAndBlack}"
                 Text="{x:Static localprop:Resources.WinFeedBackFAQQuestion5}"/>
        <Button Click="faq1Btn_Click" x:Name="faq1Btn" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center"
                VerticalAlignment="Center" Background="Transparent" BorderThickness="0"
                Foreground="{DynamicResource TextBrushWhiteAndBlack}" FontFamily="Segoe MDL2 Assets" FontSize="12"
                Content="î„‰"/>
        <Grid x:Name="faq1Content" Row="1" Column="0" Margin="2,10,0,0" HorizontalAlignment="Stretch"
              VerticalAlignment="Stretch" Visibility="Collapsed">
          <StackPanel Orientation="Vertical">
            <TextBox HorizontalAlignment="Left" VerticalAlignment="Center" TextWrapping="Wrap" Background="Transparent"
                     Foreground="{DynamicResource FeedBackFAQAnswerForeground}" BorderThickness="0" IsReadOnly="true"
                     Text="{x:Static localprop:Resources.WinFeedBackFAQAnswer5}"/>
            <CheckBox Content="{x:Static localprop:Resources.WinFeedBackHardwareAccelerationCHBK}" Grid.Row="6"
                      Margin="0,10,0,0" Foreground="{DynamicResource FeedBackFAQAnswerForeground}"
                      Style="{DynamicResource DefaultCheckBoxStyle}" HorizontalAlignment="Left"
                      VerticalAlignment="Center"
                      IsChecked="{Binding Source={x:Static commonLibCommon:RenderUtils.Instance}, Path=RenderModeSoftwareOnly, Mode=TwoWay}"/>
          </StackPanel>
        </Grid>
        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="0,10,0,10" BorderThickness="0,1,0,0"
                BorderBrush="{DynamicResource MainViewFontSizeBorder}"/>
      </Grid>
    </Grid>
    <Grid Column="3">
      <Grid.RowDefinitions>
        <RowDefinition Height="20"/>
        <RowDefinition Height="32"/>
        <RowDefinition Height="12"/>
        <RowDefinition Height="*" MinHeight="250"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="20"/>
        <RowDefinition Height="42"/>
        <RowDefinition Height="20"/>
      </Grid.RowDefinitions>
      <TextBox Name="txtEmail" Grid.Row="1" Style="{StaticResource placeHolder}" FontSize="15"
               Tag="{x:Static localprop:Resources.WinFeedBackEmailAddrPlaceHoderContent}"/>
      <TextBox TextChanged="txtContent_TextChanged" Name="txtContent" Grid.Row="3"
               Style="{StaticResource placeHolder}" FontSize="15" Foreground="#000000" TextWrapping="Wrap"
               AcceptsReturn="true" TextAlignment="Left"
               Tag="{x:Static localprop:Resources.WinFeedBackEmailContentPlaceHoderContent}"/>
      <StackPanel x:Name="sendSampleGrid" Orientation="Vertical" Grid.Row="4" Visibility="Collapsed">
        <StackPanel Orientation="Horizontal">
          <CheckBox x:Name="sendSampleCB" Margin="0,10,0,0"
                    Content="{x:Static localprop:Resources.WinFeedBackSendProblemfileContent}"
                    Style="{DynamicResource DefaultCheckBoxStyle}"/>
          <commonLibControl:HyperlinkButton Content="{x:Static localprop:Resources.WinFeedBackLabelPrivacypolicyContent}"
                                            NavigateUri="https://www.pdfgear.com/privacy/" VerticalAlignment="Bottom" Margin="5,0,0,0"/>
        </StackPanel>
        <TextBlock x:Name="filesTB" Margin="20,8,0,0" MaxHeight="40" TextWrapping="Wrap" Text=""/>
      </StackPanel>
      <commonLibControl:ProgressRing x:Name="sendPgb" Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" Width="50"
                                     IsActive="false"/>
      <Button Click="btnSend_Click" x:Name="btnSend" Grid.Row="6" FontSize="15"
              Content="{x:Static localprop:Resources.WinFeedBackBtnSendContent}" HorizontalAlignment="Right"
              IsEnabled="true" Style="{StaticResource DialogButtonStyle}" Width="120"/>
    </Grid>
  </Grid>
</Window>