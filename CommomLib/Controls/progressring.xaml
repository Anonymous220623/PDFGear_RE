<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CommomLib.Controls">
  <Style TargetType="{x:Type local:ProgressRing}">
    <Setter Property="Control.Background" Value="Transparent"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"/>
    <Setter Property="UIElement.IsHitTestVisible" Value="false"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="FrameworkElement.MinHeight" Value="20"/>
    <Setter Property="FrameworkElement.MinWidth" Value="20"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ProgressRing}">
          <Viewbox Stretch="Uniform">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Inactive"/>
                <VisualState x:Name="DeterminateActive">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Active">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility" Duration="0:0:0">
                      <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="RotateTrans" Storyboard.TargetProperty="Angle"
                                                   Duration="0:0:2">
                      <DiscreteDoubleKeyFrame KeyTime="0" Value="0"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:1" Value="450" KeySpline="0.166999996, 0.166999996 0.833000004, 0.833000004"/>
                      <SplineDoubleKeyFrame KeyTime="0:0:2" Value="900" KeySpline="0.166999996, 0.166999996 0.833000004, 0.833000004"/>
                    </DoubleAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Canvas x:Name="LayoutRoot" Width="100" Height="100" Visibility="Collapsed" Background="Transparent"
                    RenderTransformOrigin="0.5,0.5">
              <UIElement.RenderTransform>
                <TransformGroup>
                  <ScaleTransform x:Name="ScaleTrans"/>
                  <RotateTransform x:Name="RotateTrans"/>
                </TransformGroup>
              </UIElement.RenderTransform>
              <Path Canvas.Left="50" Canvas.Top="50" StrokeThickness="10" Stroke="{TemplateBinding Control.Foreground}"
                    StrokeStartLineCap="Round" StrokeEndLineCap="Round" SnapsToDevicePixels="false"
                    UseLayoutRounding="false">
                <Path.Data>
                  <PathGeometry>
                    <PathGeometry.Figures>
                      <PathFigure StartPoint="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.StartPoint}">
                        <ArcSegment x:Name="ProgressArc" Size="40,40" SweepDirection="Clockwise"
                                    Point="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ArcPoint}"
                                    RotationAngle="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.ArcRotationAngle}"
                                    IsLargeArc="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=TemplateSettings.IsLargeArc}"/>
                      </PathFigure>
                    </PathGeometry.Figures>
                  </PathGeometry>
                </Path.Data>
              </Path>
            </Canvas>
          </Viewbox>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>