<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CommomLib.Controls">
  <SolidColorBrush x:Key="NumberBox.Static.Background" Color="#FFFFFFFF"/>
  <SolidColorBrush x:Key="NumberBox.Static.Border" Color="#D2D2D2"/>
  <SolidColorBrush x:Key="NumberBox.Focus.Border" Color="#FF569DE5"/>
  <SolidColorBrush x:Key="NumberBox.MouseOver.Border" Color="#FF7EB4EA"/>
  <SolidColorBrush x:Key="NumberBox.Arrow.Static.Stroke" Color="#999999"/>
  <SolidColorBrush x:Key="NumberBox.Arrow.MouseOver.Stroke" Color="#333333"/>
  <PathGeometry x:Key="UpArrowPath" Figures="M1,4 L4,1 L7,4"/>
  <PathGeometry x:Key="DownArrowPath" Figures="M1,1 L4,4 L7,1"/>
  <Style TargetType="{x:Type local:NumberBox}">
    <Setter Property="Control.Background" Value="{StaticResource NumberBox.Static.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource NumberBox.Static.Border}"/>
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:NumberBox}">
          <Border x:Name="LayoutRoot" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{DynamicResource MainViewFontSizeBorder}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}">
            <FrameworkElement.Resources>
              <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBoxBase}">
                <Setter Property="Control.Background" Value="{DynamicResource SignaturePickerBackground}"/>
                <Setter Property="Control.BorderBrush" Value="{DynamicResource SignaturePickerBackground}"/>
                <Setter Property="Control.BorderThickness" Value="1"/>
                <Setter Property="Control.Foreground" Value="{DynamicResource TextBrushWhiteAndBlack}"/>
                <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
                <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
                <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="UIElement.AllowDrop" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                <Setter Property="InputMethod.IsInputMethodEnabled" Value="false"/>
                <Setter Property="InputMethod.PreferredImeState" Value="Off"/>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                      <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}"
                              BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden"/>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                          <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
                <Style.Triggers>
                  <MultiTrigger>
                    <MultiTrigger.Conditions>
                      <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="true"/>
                      <Condition Property="TextBoxBase.IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="TextBoxBase.SelectionBrush"
                            Value="{DynamicResource {x:Static JetSystemColors.InactiveSelectionHighlightBrushKey}}"/>
                  </MultiTrigger>
                </Style.Triggers>
              </Style>
              <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
              <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
              <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
              <Style x:Key="ArrowButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="Control.Background" Value="{DynamicResource ArrowButtonStyleBackground}"/>
                <Setter Property="Control.BorderBrush" Value="{DynamicResource ArrowButtonStyleBackground}"/>
                <Setter Property="Control.Foreground"
                        Value="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}"/>
                <Setter Property="Control.BorderThickness" Value="0"/>
                <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
                <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
                <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
                <Setter Property="Control.Padding" Value="0"/>
                <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="UIElement.Focusable" Value="false"/>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                      <Border x:Name="border" BorderThickness="{TemplateBinding Control.BorderThickness}"
                              Background="{TemplateBinding Control.Background}"
                              BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
                      </Border>
                      <ControlTemplate.Triggers>
                        <Trigger Property="UIElement.IsEnabled" Value="false">
                          <Setter Value="{DynamicResource ArrowButtonStyleDisEnabledBackground}" TargetName="border"
                                  Property="Border.Background"/>
                          <Setter Value="{StaticResource Button.Disabled.Border}" TargetName="border" Property="Border.BorderBrush"/>
                          <Setter Value="{StaticResource Button.Disabled.Foreground}" TargetName="contentPresenter"
                                  Property="TextElement.Foreground"/>
                        </Trigger>
                      </ControlTemplate.Triggers>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </FrameworkElement.Resources>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="ArrowStates">
                <VisualState x:Name="ArrowVisible"/>
                <VisualState x:Name="ArrowInvisible">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ButtonContainer" Storyboard.TargetProperty="Visibility" Duration="0">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid Background="{DynamicResource ArrowButtonStyleBackground}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <TextBox x:Name="PART_TextBox" Style="{StaticResource TextBoxStyle}"/>
              <Grid x:Name="ButtonContainer" Column="1" Margin="{TemplateBinding Control.BorderThickness}" Width="8"
                    HorizontalAlignment="Right" VerticalAlignment="Stretch">
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <RepeatButton x:Name="UpButton" Padding="0,0,0,1" Style="{StaticResource ArrowButtonStyle}"
                              Command="{x:Static Slider.IncreaseSmall}">
                  <Path x:Name="UpArrowPath" Data="{StaticResource UpArrowPath}"
                        Stroke="{DynamicResource NumberBoxPathIsenabledColor}" StrokeThickness="1"/>
                </RepeatButton>
                <RepeatButton x:Name="DownButton" Padding="0,1,0,0" Grid.Row="1" Style="{StaticResource ArrowButtonStyle}"
                              Command="{x:Static Slider.DecreaseSmall}">
                  <Path x:Name="DownArrowPath" Data="{StaticResource DownArrowPath}"
                        Stroke="{DynamicResource NumberBoxPathIsenabledColor}" StrokeThickness="1"/>
                </RepeatButton>
              </Grid>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <DataTrigger Value="True" Binding="{Binding ElementName=UpButton, Path=IsMouseOver}">
              <Setter TargetName="UpArrowPath" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Stroke"/>
            </DataTrigger>
            <DataTrigger Value="True" Binding="{Binding ElementName=DownButton, Path=IsMouseOver}">
              <Setter TargetName="DownArrowPath" Value="{DynamicResource TextBrushWhiteAndBlack}" Property="Shape.Stroke"/>
            </DataTrigger>
            <DataTrigger Value="True" Binding="{Binding ElementName=PART_TextBox, Path=IsKeyboardFocused}">
              <Setter TargetName="LayoutRoot" Value="{StaticResource NumberBox.Focus.Border}"
                      Property="Border.BorderBrush"/>
            </DataTrigger>
            <DataTrigger Value="false" Binding="{Binding ElementName=UpButton, Path=IsEnabled}">
              <Setter TargetName="UpArrowPath" Value="{DynamicResource NumberBoxPathDisenabledColor}"
                      Property="Shape.Stroke"/>
            </DataTrigger>
            <DataTrigger Value="false" Binding="{Binding ElementName=DownButton, Path=IsEnabled}">
              <Setter TargetName="DownArrowPath" Value="{DynamicResource NumberBoxPathDisenabledColor}"
                      Property="Shape.Stroke"/>
            </DataTrigger>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding ElementName=PART_TextBox, Path=IsKeyboardFocused}" Value="false"/>
                <Condition Binding="{Binding ElementName=LayoutRoot, Path=IsMouseOver}" Value="True"/>
              </MultiDataTrigger.Conditions>
              <Setter TargetName="LayoutRoot" Value="{StaticResource NumberBox.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
            </MultiDataTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>