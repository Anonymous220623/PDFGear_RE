<Window x:Class="CommomLib.Controls.UpdateMessage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:CommomLib.Controls"
        xmlns:localprop="clr-namespace:CommomLib.Properties"
        ResizeMode="NoResize" Width="400" SizeToContent="Height"
        Background="{DynamicResource WindowsBackground}"
        TextBlock.Foreground="{DynamicResource TextBrushWhiteAndBlack}" SnapsToDevicePixels="true"
        UseLayoutRounding="true" Title="{x:Static localprop:Resources.UpdateMessageTitle}">
  <FrameworkElement.Resources>
    <SolidColorBrush x:Key="PrimaryDialogButton.Static.Background" Color="#EF5B52"/>
    <SolidColorBrush x:Key="PrimaryDialogButton.Static.Border" Color="#FFEF5B52"/>
    <SolidColorBrush x:Key="PrimaryDialogButton.Static.Foreground" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialogButton.Static.Background" Color="#FFFFFFFF"/>
    <SolidColorBrush x:Key="DialogButton.Static.Border" Color="#FFBBBBBB"/>
    <SolidColorBrush x:Key="DialogButton.Static.Foreground" Color="#FF000000"/>
    <SolidColorBrush x:Key="DialogButton.Disabled.Background" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="DialogButton.Disabled.Border" Color="#FFF4F4F4"/>
    <SolidColorBrush x:Key="DialogButton.Disabled.Foreground" Color="#FF838383"/>
    <Style x:Key="DialogButtonFocusVisual">
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate>
            <Rectangle Margin="-1" SnapsToDevicePixels="false"
                       Stroke="{DynamicResource {x:Static JetSystemColors.ControlTextBrushKey}}" StrokeThickness="1"
                       RadiusX="2" RadiusY="2" Opacity="0.6"/>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="DialogButtonStyle" TargetType="{x:Type ButtonBase}">
      <Setter Property="Control.Background" Value="#298FEE"/>
      <Setter Property="Control.BorderBrush" Value="{StaticResource DialogButton.Static.Border}"/>
      <Setter Property="Control.Foreground" Value="White"/>
      <Setter Property="Control.BorderThickness" Value="1"/>
      <Setter Property="Control.HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter Property="Control.Padding" Value="8"/>
      <Setter Property="FrameworkElement.MinWidth" Value="80"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{StaticResource DialogButtonFocusVisual}"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
              <Grid>
                <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#298FEE"
                           Opacity="0" SnapsToDevicePixels="false"/>
                <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="UIElement.Opacity" Value="0.84"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="UIElement.Opacity" Value="0.82"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{StaticResource DialogButton.Disabled.Background}" TargetName="border"
                        Property="Border.Background"/>
                <Setter Value="{StaticResource DialogButton.Disabled.Border}" TargetName="border"
                        Property="Border.BorderBrush"/>
                <Setter Value="{StaticResource DialogButton.Disabled.Foreground}" TargetName="contentPresenter"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
    <Style x:Key="PrimaryDialogButtonStyle" TargetType="{x:Type ButtonBase}"
           BasedOn="{StaticResource DialogButtonStyle}">
      <Setter Property="Control.Background" Value="#F5F5F5"/>
      <Setter Property="Control.BorderBrush" Value="Transparent"/>
      <Setter Property="Control.Foreground" Value="Black"/>
      <Setter Property="UIElement.Opacity" Value="0.9"/>
      <Setter Property="Control.Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" CornerRadius="2" BorderThickness="{TemplateBinding Control.BorderThickness}"
                    Background="{TemplateBinding Control.Background}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}" SnapsToDevicePixels="true">
              <Grid>
                <Rectangle x:Name="BackgroundBorder" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="#298FEE"
                           Opacity="0" SnapsToDevicePixels="false"/>
                <ContentPresenter x:Name="contentPresenter" RecognizesAccessKey="true" Margin="{TemplateBinding Control.Padding}"
                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}" Focusable="false"/>
              </Grid>
            </Border>
            <ControlTemplate.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="UIElement.Opacity" Value="0.92"/>
                <Setter Property="Control.Background" Value="#E0E0E0"/>
              </Trigger>
              <Trigger Property="ButtonBase.IsPressed" Value="true">
                <Setter Property="Control.Background" Value="#E0E0E0"/>
                <Setter Property="UIElement.Opacity" Value="0.94"/>
              </Trigger>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Value="{StaticResource DialogButton.Disabled.Background}" TargetName="border"
                        Property="Border.Background"/>
                <Setter Value="{StaticResource DialogButton.Disabled.Border}" TargetName="border"
                        Property="Border.BorderBrush"/>
                <Setter Value="{StaticResource DialogButton.Disabled.Foreground}" TargetName="contentPresenter"
                        Property="TextElement.Foreground"/>
              </Trigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <Grid x:Name="Newver" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <TextBlock x:Name="NewVer" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Center"
                 TextWrapping="Wrap" LineHeight="18" Margin="14 16 0 12"/>
      <CheckBox x:Name="NewVerShow" Grid.Row="1" Content="{x:Static localprop:Resources.UpdateMessageSkipVer}"
                Style="{StaticResource DefaultCheckBoxStyle}" Margin="12,16,0,18" Padding="4,0,0,1"
                HorizontalAlignment="Left" VerticalContentAlignment="Bottom"/>
      <StackPanel Grid.Row="1" Orientation="Horizontal" Grid.ColumnSpan="4" Margin="0,0,12,12"
                  HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <Button Click="btnOk_Click" x:Name="btnOk" Style="{StaticResource DialogButtonStyle}"
                Content="{x:Static localprop:Resources.UpdateMessageUpdate}" IsDefault="true"/>
        <Button Click="btnCancel_Click" x:Name="btnCancel" Style="{StaticResource PrimaryDialogButtonStyle}"
                Content="{x:Static localprop:Resources.UpdateMessageCancel}" Margin="10,0,0,0" IsCancel="true"/>
      </StackPanel>
    </Grid>
    <Grid x:Name="CancelMessage" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="40"/>
        <RowDefinition Height="auto"/>
        <RowDefinition Height="50"/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="0" Text="{x:Static localprop:Resources.UpdateMessageCancelTitle}"
                 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="14 12 0 12"/>
      <TextBlock Grid.Row="1" Text="{x:Static localprop:Resources.UpdateMessageCancelTips}"
                 Foreground="{DynamicResource ChatBotTitle}" TextWrapping="Wrap" HorizontalAlignment="Left"
                 VerticalAlignment="Center" Margin="14 12 0 12"/>
      <StackPanel Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="4" Margin="0,0,12,12"
                  HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <Button Click="btnOk_Click" Style="{StaticResource DialogButtonStyle}"
                Content="{x:Static localprop:Resources.UpdateMessageOk}"/>
        <Button Click="btnCancel_Click" Style="{StaticResource PrimaryDialogButtonStyle}"
                Content="{x:Static localprop:Resources.WinBtnCancelContent}" Margin="10,0,0,0" IsCancel="true"/>
      </StackPanel>
    </Grid>
    <Grid x:Name="UpdateFailed" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="40"/>
        <RowDefinition Height="auto"/>
        <RowDefinition Height="50"/>
      </Grid.RowDefinitions>
      <TextBlock Grid.Row="0" Text="{x:Static localprop:Resources.UpdateMessageDownloadFail}"
                 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="14 12 0 12"/>
      <TextBlock x:Name="DownloadUri" Grid.Row="1" Foreground="#555555" TextWrapping="Wrap"
                 HorizontalAlignment="Left" VerticalAlignment="Center" Margin="14 12 0 12">
        <Run Text="{x:Static localprop:Resources.UpdateMessageDownloadFailTipsBefore}">
        </Run>
        <Underline MouseLeave="underlinetext_MouseLeave" MouseEnter="Underline_MouseEnter"
                   MouseLeftButtonDown="Underline_MouseLeftButtonDown">
          <TextBlock x:Name="underlinetext" Foreground="#FF298FEE" Background="Transparent"
                     Text="{x:Static localprop:Resources.UpdateMessageDownloadFailTipsBh}"/>
        </Underline>
        <Run Text="{x:Static localprop:Resources.UpdateMessageDownloadFailTipsAf}">
        </Run>
      </TextBlock>
      <StackPanel Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="4" Margin="0,0,12,12"
                  HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <Button Click="btnCancel_Click" Style="{StaticResource DialogButtonStyle}"
                Content="{x:Static localprop:Resources.WinBtnOkContent}" IsDefault="true" IsCancel="true"/>
      </StackPanel>
    </Grid>
    <Grid x:Name="Uptodate" Visibility="Collapsed">
      <Grid.RowDefinitions>
        <RowDefinition Height="60"/>
        <RowDefinition Height="auto"/>
        <RowDefinition Height="50"/>
      </Grid.RowDefinitions>
      <TextBlock x:Name="Newer" Grid.Row="0" Text="{x:Static localprop:Resources.UpdateMessageUptodate}"
                 TextWrapping="Wrap" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="14 16 0 12"/>
      <StackPanel Grid.Row="2" Orientation="Horizontal" Grid.ColumnSpan="4" Margin="0,0,12,12"
                  HorizontalAlignment="Right" VerticalAlignment="Bottom">
        <Button Click="btnCancel_Click" Style="{StaticResource DialogButtonStyle}"
                Content="{x:Static localprop:Resources.UpdateMessageOk}" IsDefault="true" IsCancel="true"/>
      </StackPanel>
    </Grid>
  </Grid>
</Window>