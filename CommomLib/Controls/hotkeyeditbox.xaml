<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CommomLib.Controls"
                    xmlns:hotkey="clr-namespace:CommomLib.Commom.HotKeys">
  <Style TargetType="{x:Type local:HotKeyEditBox}">
    <Setter Property="Control.Background" Value="{DynamicResource HotKeyEditBox.Default.Static.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{DynamicResource HotKeyEditBox.Default.Static.Border}"/>
    <Setter Property="Control.Foreground" Value="{DynamicResource HotKeyEditBox.Default.Static.Foreground}"/>
    <Setter Property="TextBoxBase.CaretBrush" Value="Transparent"/>
    <Setter Property="Control.BorderThickness" Value="1"/>
    <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
    <Setter Property="Control.HorizontalContentAlignment" Value="Left"/>
    <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
    <Setter Property="UIElement.AllowDrop" Value="true"/>
    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
    <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    <Setter Property="local:UIElementExtension.CornerRadius" Value="2"/>
    <Setter Property="hotkey:HotKeyExtensions.IsHotKeyDisabledScope" Value="true"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:HotKeyEditBox}">
          <Border x:Name="border" Background="{TemplateBinding Control.Background}"
                  BorderBrush="{TemplateBinding Control.BorderBrush}"
                  BorderThickness="{TemplateBinding Control.BorderThickness}" SnapsToDevicePixels="true"
                  CornerRadius="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=(local:UIElementExtension.CornerRadius)}">
            <FrameworkElement.Resources>
              <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FrameworkElement.Width" Value="16"/>
                <Setter Property="FrameworkElement.Height" Value="16"/>
                <Setter Property="UIElement.Focusable" Value="false"/>
                <Setter Property="Control.Padding" Value="0"/>
                <Setter Property="Control.Template">
                  <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                      <Canvas Width="16" Height="16" SnapsToDevicePixels="false">
                        <Ellipse x:Name="bg" Width="16" Height="16" Fill="{DynamicResource HotKeyClearButtonBackground}"/>
                        <Path Data="M 6,0 L 0,6 M 0,0 L 6,6 " Canvas.Left="5" Canvas.Top="5"
                              Stroke="{DynamicResource HotKeyClearButtonForeground}" StrokeThickness="1.5"/>
                      </Canvas>
                    </ControlTemplate>
                  </Setter.Value>
                </Setter>
              </Style>
            </FrameworkElement.Resources>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <ScrollViewer x:Name="PART_ContentHost" Focusable="false" local:ScrollBarHelper.IndicatorMode="Collapsed"/>
              <Button x:Name="ClearButton" Visibility="Collapsed" Grid.Column="1"
                      Style="{StaticResource ClearButtonStyle}" Margin="8,0,8,0" VerticalAlignment="Center"/>
            </Grid>
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsEnabled" Value="false">
              <Setter TargetName="border" Property="UIElement.Opacity" Value="0.56"/>
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TextBoxBase.IsReadOnly" Value="false"/>
                <Condition Property="UIElement.IsMouseOver" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="border" Value="{DynamicResource HotKeyEditBox.Default.MouseOver.Border}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border" Value="{DynamicResource HotKeyEditBox.Default.MouseOver.Background}"
                      Property="Border.Background"/>
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="TextBoxBase.IsReadOnly" Value="false"/>
                <Condition Property="UIElement.IsKeyboardFocused" Value="true"/>
              </MultiTrigger.Conditions>
              <Setter TargetName="border" Value="{DynamicResource HotKeyEditBox.Default.Focus.Border}"
                      Property="Border.BorderBrush"/>
              <Setter TargetName="border" Value="{DynamicResource HotKeyEditBox.Default.Focus.Background}"
                      Property="Border.Background"/>
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="TextBoxBase.IsInactiveSelectionHighlightEnabled" Value="true"/>
          <Condition Property="TextBoxBase.IsSelectionActive" Value="false"/>
        </MultiTrigger.Conditions>
        <Setter Property="TextBoxBase.SelectionBrush"
                Value="{DynamicResource {x:Static JetSystemColors.InactiveSelectionHighlightBrushKey}}"/>
      </MultiTrigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>