<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CommomLib.Controls"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
  <SolidColorBrush x:Key="ProgressBar.Background" Color="#77999999"/>
  <SolidColorBrush x:Key="ProgressBar.Border" Color="#0F000000"/>
  <sys:Double x:Key="ProgressBar.MinHeight">3</sys:Double>
  <Style TargetType="{x:Type local:ProgressBar}">
    <Setter Property="Control.Foreground"
            Value="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}"/>
    <Setter Property="Control.Background" Value="{StaticResource ProgressBar.Background}"/>
    <Setter Property="Control.BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
    <Setter Property="Control.BorderThickness" Value="0"/>
    <Setter Property="FrameworkElement.MinHeight" Value="{StaticResource ProgressBar.MinHeight}"/>
    <Setter Property="FrameworkElement.MinWidth" Value="{StaticResource ProgressBar.MinHeight}"/>
    <Setter Property="RangeBase.Maximum" Value="100"/>
    <Setter Property="Control.IsTabStop" Value="false"/>
    <Setter Property="FrameworkElement.HorizontalAlignment" Value="Stretch"/>
    <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type local:ProgressBar}">
          <Grid x:Name="TemplateRoot">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Determinate"/>
                <VisualState x:Name="Indeterminate">
                  <Storyboard RepeatBehavior="Forever">
                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                   Storyboard.TargetName="Animation">
                      <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                      <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                    </DoubleAnimationUsingKeyFrames>
                    <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="Animation">
                      <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                      <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                      <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                    </PointAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderThickness="{TemplateBinding Control.BorderThickness}"
                    BorderBrush="{TemplateBinding Control.BorderBrush}"
                    Background="{TemplateBinding Control.Background}" CornerRadius="1.5"/>
            <Rectangle x:Name="PART_Track"/>
            <Grid x:Name="PART_Indicator" HorizontalAlignment="Left" ClipToBounds="true">
              <Rectangle x:Name="Indicator" RadiusX="1.5" RadiusY="1.5" Fill="{TemplateBinding Control.Foreground}"/>
              <Rectangle x:Name="Animation" RadiusX="1.5" RadiusY="1.5" RenderTransformOrigin="0.5,0.5"
                         Fill="{TemplateBinding Control.Foreground}">
                <UIElement.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform/>
                  </TransformGroup>
                </UIElement.RenderTransform>
              </Rectangle>
            </Grid>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="ProgressBar.Orientation" Value="Vertical">
              <Setter TargetName="TemplateRoot" Property="FrameworkElement.LayoutTransform">
                <Setter.Value>
                  <RotateTransform Angle="-90"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="ProgressBar.IsIndeterminate" Value="true">
              <Setter TargetName="Indicator" Property="UIElement.Visibility" Value="Collapsed"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="ProgressBar.Orientation" Value="Vertical">
        <Setter Property="FrameworkElement.HorizontalAlignment" Value="Center"/>
        <Setter Property="FrameworkElement.VerticalAlignment" Value="Stretch"/>
      </Trigger>
    </Style.Triggers>
  </Style>
</ResourceDictionary>